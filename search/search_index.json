{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to iDEC Resources Wiki This site hosts resources for setting up and running directed evolution, which is maintained by the iDEC Resources Team. For information on the competition, please visit idec.io . To access our Registration and Team Portal, please visit reg.idec.io Resources for Directed Evolution Please browse the following topics in Directed Evolution Creating genetic diversity Error-prone PCR Comprehensive Codon Mutagenesis Recombinatorial gene and domain shuffling Laboratory Selection methods Selection of binders Phage display Cell surface display Ribosome display cDNA display & mRNA display CIS display SELEX Selection enzymes and reporters Screening based on survival Selection based on biochemical assays Selection using in vitro compartmentalisation Continuous directed evolution methods Phage-assisted continuous evolution In situ targeted mutagenesis (EvolvR, OrthoRep) Computational tools for library creation, design and analysis Genome evolution MAGE Adaptive Laboratory Evolution Scramble Team wiki information The Team Wiki section of this wiki also provides information on how to set up a team wiki, which is part of the project requirement. Contributions If you wish to contribute to this wiki, please contact us at support@idechq.org . You can also do so by submitting pull requests.","title":"Home"},{"location":"index.html#welcome-to-idec-resources-wiki","text":"This site hosts resources for setting up and running directed evolution, which is maintained by the iDEC Resources Team. For information on the competition, please visit idec.io . To access our Registration and Team Portal, please visit reg.idec.io","title":"Welcome to iDEC Resources Wiki"},{"location":"index.html#resources-for-directed-evolution","text":"Please browse the following topics in Directed Evolution Creating genetic diversity Error-prone PCR Comprehensive Codon Mutagenesis Recombinatorial gene and domain shuffling Laboratory Selection methods Selection of binders Phage display Cell surface display Ribosome display cDNA display & mRNA display CIS display SELEX Selection enzymes and reporters Screening based on survival Selection based on biochemical assays Selection using in vitro compartmentalisation Continuous directed evolution methods Phage-assisted continuous evolution In situ targeted mutagenesis (EvolvR, OrthoRep) Computational tools for library creation, design and analysis Genome evolution MAGE Adaptive Laboratory Evolution Scramble","title":"Resources for Directed Evolution"},{"location":"index.html#team-wiki-information","text":"The Team Wiki section of this wiki also provides information on how to set up a team wiki, which is part of the project requirement.","title":"Team wiki information"},{"location":"index.html#contributions","text":"If you wish to contribute to this wiki, please contact us at support@idechq.org . You can also do so by submitting pull requests.","title":"Contributions"},{"location":"about.html","text":"Forma undis atque Test automatic update 4 Teres bimembres elige munitos Lorem markdownum, ripa qui expers , deae utque? Sunt ab potentem conamine dignamur erat inertes; baculo quam terra Paeana, aliisque nunc. Cupido in fudit sanguinis conrepta tristia in tum at demittit primum. Prior adversae regoque concava anhelis parabat cursus vestros, prior sequitur miscet, quae? Sulcavitque nacta. if (web_smartphone(11)) { clientTiger = server; } else { httpsStationKey -= windows_interface; telecommunications.switchMyspaceToslink.dvi(runtime, dimm, ppi_bar_dhcp); } xml = version; if (cmykVduCopy) { marketing = bar_google_www.truncate.system_bit_digital(favorites, volumeVariable, isdn) + 21 + 54; home_ssd.parallel_drive = alignmentMonitor; wheel(14 - miniGigahertzP, camera); } var touchscreen_boolean_card = hdv_footer_hard.booleanKeyboard( url_png_swipe, lcd) / spoofingRipcordingBoolean; sip(1); Quod falsum monitis: excutiunt prohibete ut ad Troezenius Fames. Sagittas nec. Tu quid quamvis mercurio. Non torum se coniectos: mater succedere ecce valuere pudet Saturnia, per! Solvunt in fecundam undis orbe, quae vincula indicio, medio , populus et iamque, fatentem. Nam melior ignare saepe his nec Orbem visu dolore duxere. Sine dixit telum quoque quove membris nulla acta: manu: videntem miscuit: nec, duce enim saepe essent. Priami at Tiberinaque foret membra, non addit dolores chori augerem sanguis adsuetaque: pro. In devastata alipedi tinxit sanguis alipedis spemque, cum et nato functa manifesta caede, non iniere fecit silvae vivosque . Patet pendebat in rerum parat frustraque merumque scilicet: nam totis; fulminis cinerem tumulumque dapes , genis mersa vicimus. Saepe quam voluntas etiam in non sperat Portat sic isque petiit sedes palluit. Miserrimus quoque tenuitque currebam vultibus Iuppiter neque? Rhodiae simul reddidit spernit quis. Fuga ingrediorque nigra est domique pando inploraret cinctum hic huius vacuo. Peragebant quid, nata non voluptas vulneribus in ante ultricibus legit, vi miserrima. Exemplo detrahis precor in loco, esse mihi Arcesius propago, sistitur illi vivere fratre. Baccho sed finem, humus famem cum voce ab dies hic nomine ac per certamine labor pandos. Amicas referri conversae matre ; si moriere marito mea sulcat. Glacies velocibus funera genitor et quamvis Mycenae territus si veluti pulcherrimus Niobe, restabat obiecit quia sibi mihi sacerdos. Habet interritus montani vitat pro tetigere crimen: et pulsat fratri processit lauru , corpore trepidamque. Amore gradus concresse deducunt me honorant, ait nisi ensem; novat. Malo celatus Pelori, Amphrysos vestes. Illud forte domos, spes posito opus quaerenti responsa crocique Athamanas videres finditque crudeles, o? Sipylumque duas ceu resupino erat barba ego gentis tot ipse redit, passu arvis: qui nonne. Malum per ossa forte ministeriis perdet puppim miseroque obscurus, suras? Duro nacta laudatos gaudete latos, artes, non metu estque si sol. Limite pater Phaethontida freta di arcus furor ecce sitvs!","title":"Forma undis atque Test automatic update 4"},{"location":"about.html#forma-undis-atque-test-automatic-update-4","text":"","title":"Forma undis atque Test automatic update 4"},{"location":"about.html#teres-bimembres-elige-munitos","text":"Lorem markdownum, ripa qui expers , deae utque? Sunt ab potentem conamine dignamur erat inertes; baculo quam terra Paeana, aliisque nunc. Cupido in fudit sanguinis conrepta tristia in tum at demittit primum. Prior adversae regoque concava anhelis parabat cursus vestros, prior sequitur miscet, quae? Sulcavitque nacta. if (web_smartphone(11)) { clientTiger = server; } else { httpsStationKey -= windows_interface; telecommunications.switchMyspaceToslink.dvi(runtime, dimm, ppi_bar_dhcp); } xml = version; if (cmykVduCopy) { marketing = bar_google_www.truncate.system_bit_digital(favorites, volumeVariable, isdn) + 21 + 54; home_ssd.parallel_drive = alignmentMonitor; wheel(14 - miniGigahertzP, camera); } var touchscreen_boolean_card = hdv_footer_hard.booleanKeyboard( url_png_swipe, lcd) / spoofingRipcordingBoolean; sip(1); Quod falsum monitis: excutiunt prohibete ut ad Troezenius Fames. Sagittas nec. Tu quid quamvis mercurio. Non torum se coniectos: mater succedere ecce valuere pudet Saturnia, per! Solvunt in fecundam undis orbe, quae vincula indicio, medio , populus et iamque, fatentem.","title":"Teres bimembres elige munitos"},{"location":"about.html#nam-melior-ignare-saepe-his-nec","text":"Orbem visu dolore duxere. Sine dixit telum quoque quove membris nulla acta: manu: videntem miscuit: nec, duce enim saepe essent. Priami at Tiberinaque foret membra, non addit dolores chori augerem sanguis adsuetaque: pro. In devastata alipedi tinxit sanguis alipedis spemque, cum et nato functa manifesta caede, non iniere fecit silvae vivosque . Patet pendebat in rerum parat frustraque merumque scilicet: nam totis; fulminis cinerem tumulumque dapes , genis mersa vicimus.","title":"Nam melior ignare saepe his nec"},{"location":"about.html#saepe-quam-voluntas-etiam-in-non-sperat","text":"Portat sic isque petiit sedes palluit. Miserrimus quoque tenuitque currebam vultibus Iuppiter neque? Rhodiae simul reddidit spernit quis. Fuga ingrediorque nigra est domique pando inploraret cinctum hic huius vacuo. Peragebant quid, nata non voluptas vulneribus in ante ultricibus legit, vi miserrima. Exemplo detrahis precor in loco, esse mihi Arcesius propago, sistitur illi vivere fratre. Baccho sed finem, humus famem cum voce ab dies hic nomine ac per certamine labor pandos. Amicas referri conversae matre ; si moriere marito mea sulcat. Glacies velocibus funera genitor et quamvis Mycenae territus si veluti pulcherrimus Niobe, restabat obiecit quia sibi mihi sacerdos. Habet interritus montani vitat pro tetigere crimen: et pulsat fratri processit lauru , corpore trepidamque. Amore gradus concresse deducunt me honorant, ait nisi ensem; novat. Malo celatus Pelori, Amphrysos vestes. Illud forte domos, spes posito opus quaerenti responsa crocique Athamanas videres finditque crudeles, o? Sipylumque duas ceu resupino erat barba ego gentis tot ipse redit, passu arvis: qui nonne. Malum per ossa forte ministeriis perdet puppim miseroque obscurus, suras? Duro nacta laudatos gaudete latos, artes, non metu estque si sol. Limite pater Phaethontida freta di arcus furor ecce sitvs!","title":"Saepe quam voluntas etiam in non sperat"},{"location":"genome_evolution.html","text":"Genome Evolution","title":"Genome Evolution"},{"location":"genome_evolution.html#genome-evolution","text":"","title":"Genome Evolution"},{"location":"introduction.html","text":"Introduction Directed evolution (DE) aims to improve the activity of biological entities (molecules, bacterial strains etc.) via exploiting principles of Darwinian selection in a controlled laboratory environment. DE is performed in rounds by repeating two main steps: diversification of a genetic material and selection of the molecules encoded by it for the desired property. The evolution experiments spans from the living cells, their consortia (ecosystems) to heavily reduced in complexity in vitro systems (e.g. transcription-translation). Importantly, DE is inherently probabilistic, and hence its exact outcomes are unpredictable, just as natural evolution is. Thus, DE strategies are perfectly fit for harnessing biological complexity whereby unpredictability and irrationality, however still unwanted, are increasingly considered to be an asset. Indeed, random search and feedback controls, which are inherent parts of any DE approach are the only language nature engages. Development of the DE field creates possibilities to work with living systems, guiding their genetic algorithms, by following rules of these systems as opposed to controlling them. From this point of view, DE is may be the furthest from rational engineering in the realm of synthetic biology. A thorough understanding of the DE experimental design is required to increase the chances for its successful implementation. This resource is here to help you with this. It gives a basic overview of the types of DE experiments, their experimental logic, ways to create and characterise genetic libraries, design selection schemes and perform final analysis. Importantly, This page is not intended to be complete but rather to be a welcoming and informative resource for you to learn more about the marvellous field called Directed Evolution! DE field is vast and its subjects and protocols are not uniform. We classified DE methods according to the best of our knowledge and thus it reflects our vision . Importantly, we do not differentiate between true DE (which is an umbrella term for various approaches) and the selection strategies. We subdivided DE protocols into two large divisions: methods for generation of genetic diversity and methods for selections. graph LR A(Directed Evolution resources) --> B(discrete protocols) A --> C(continuous protocols) B --> D(producing genetic diversity) B --> E(selection methods) E --> F(for enzymes) E --> G(for binders) A --> H(Genomes evolution) A --> I(computational tools) The latter is further subdivided into the selection of binders and the selection of enzymes. Also, we could not ignore two important fields of research: continuous DE and Genomes evolution. And finally, we added a chapter on computational tools for genetic library design and characterisation Creating genetic diversity Error-prone PCR Recombinatorial gene and domain shuffling Laboratory Selection methods Selection of binders Phage display Cell surface display Ribosome display cDNA display & mRNA display CIS display SELEX Selection of enzymes and reporters Screening based on survival Selection based on biochemical assays Selection using in vitro compartmentalisation Continuous directed evolution methods Phage-assisted continuous evolution In situ targeted mutagenesis (EvolvR, OrthoRep) Computational tools for library creation, design and analysis Genome evolution MAGE Adaptive Laboratory Evolution Scramble","title":"Introduction"},{"location":"introduction.html#introduction","text":"Directed evolution (DE) aims to improve the activity of biological entities (molecules, bacterial strains etc.) via exploiting principles of Darwinian selection in a controlled laboratory environment. DE is performed in rounds by repeating two main steps: diversification of a genetic material and selection of the molecules encoded by it for the desired property. The evolution experiments spans from the living cells, their consortia (ecosystems) to heavily reduced in complexity in vitro systems (e.g. transcription-translation). Importantly, DE is inherently probabilistic, and hence its exact outcomes are unpredictable, just as natural evolution is. Thus, DE strategies are perfectly fit for harnessing biological complexity whereby unpredictability and irrationality, however still unwanted, are increasingly considered to be an asset. Indeed, random search and feedback controls, which are inherent parts of any DE approach are the only language nature engages. Development of the DE field creates possibilities to work with living systems, guiding their genetic algorithms, by following rules of these systems as opposed to controlling them. From this point of view, DE is may be the furthest from rational engineering in the realm of synthetic biology. A thorough understanding of the DE experimental design is required to increase the chances for its successful implementation. This resource is here to help you with this. It gives a basic overview of the types of DE experiments, their experimental logic, ways to create and characterise genetic libraries, design selection schemes and perform final analysis. Importantly, This page is not intended to be complete but rather to be a welcoming and informative resource for you to learn more about the marvellous field called Directed Evolution! DE field is vast and its subjects and protocols are not uniform. We classified DE methods according to the best of our knowledge and thus it reflects our vision . Importantly, we do not differentiate between true DE (which is an umbrella term for various approaches) and the selection strategies. We subdivided DE protocols into two large divisions: methods for generation of genetic diversity and methods for selections. graph LR A(Directed Evolution resources) --> B(discrete protocols) A --> C(continuous protocols) B --> D(producing genetic diversity) B --> E(selection methods) E --> F(for enzymes) E --> G(for binders) A --> H(Genomes evolution) A --> I(computational tools) The latter is further subdivided into the selection of binders and the selection of enzymes. Also, we could not ignore two important fields of research: continuous DE and Genomes evolution. And finally, we added a chapter on computational tools for genetic library design and characterisation Creating genetic diversity Error-prone PCR Recombinatorial gene and domain shuffling Laboratory Selection methods Selection of binders Phage display Cell surface display Ribosome display cDNA display & mRNA display CIS display SELEX Selection of enzymes and reporters Screening based on survival Selection based on biochemical assays Selection using in vitro compartmentalisation Continuous directed evolution methods Phage-assisted continuous evolution In situ targeted mutagenesis (EvolvR, OrthoRep) Computational tools for library creation, design and analysis Genome evolution MAGE Adaptive Laboratory Evolution Scramble","title":"Introduction"},{"location":"phage_display.html","text":"The phage display Introduction. Phage display is a laboratory technique used for the high-throughput screening of protein- and peptide-binders. In this technique, a gene encoding a protein of interest (POI) is expressed in frame (i.e. as a fusion) with the phage coat protein gene, causing the phage to \"display\" the protein on its outside. The phage itself serves as a 'vessel' connecting the displayed phenotype and genotype. The displaying phages can then be screened against various bait molecules (proteins, peptides or DNA sequences) for specific interaction with them. In this way, large libraries of proteins can be screened and amplified in a process called in vitro selection. The most common bacteriophages used in phage display are M13 and FD filamentous phage, though T4, T7, and \u03bb phage are also used. General principle. In the M13 phage display, the DNA encoding POI is expressed N-terminally with either pIII or pVIII gene, which encodes the minor and major coat proteins. The pIII gene is responsible for binding to E.coli via associating with the F' pilus thereby triggering infection. Certain E.coli strains are suitable for this purpose: TG1, SS320, ER2738, or XL1-Blue. Fusing POI to the pIII N-terminus ensures correct exposure of a target peptide for the interaction with a bait molecule. The POIs of sizes less than 50 amino acids largely don't affect the main function of the coat protein - phage infectivity. For larger POIs a \"phagemid\" vector is used (a simplified display construct vector) that encodes a fused version of the coat-protein with the intact coat protein (and other phage lifecyle-components) provided by a helper phage. Upon infection, intact pIII competes with POI-pIII fusion resulting in a large portion of the phage population not displaying POI and a small portion that would contain on average a single copy of POI-pIII per phage particle. Use of phagemid is beneficial in two ways: ( 1 ) smaller vector enables higher transformation efficiency hence higher genetic diversity libraries; ( 2 ) use of monovalent display of POI on phages often results in selection of higher affinity binders due to the absence of an 'avidity' effect. The bait molecules are typically immobilised on the surface of a microtiter plate. Phages that tightly interact with the bait will remain attached to the plate while the majority of the phage population will be washed away. The remaining phage are then eluted and amplified again in the next round of bacterial infection resulting in a phage mixture enriched with phages that bind the target molecule. This process is referred to as panning is typically repeated a number of times to establish high level of enrichment of phages encoding tight-binder POIs. Phage eluted in the final step can then be used to infect a suitable bacterial host, from which the phagemids are collected and subsequently analysed by NGS or Sanger sequencing coupled with ELISA. The use of a helper phage can be eliminated by using 'bacterial packaging cell line' technology 1 . Elution is usually carried out by using trypsin to digest the bait protein and presented binding protein, thus releasing the bound phage, or by using low pH buffer to dissociate electrostatic interactions. Competitive elution can also be used if a known binder is available and binder for a specific region (e.g. a catalytic pocket) is desired. General protocol. A common protocol for the phage display would consist of the following steps: 1. Bait protein or DNA molecules are immobilized to the wells of a microtiter plate either chemically or via biotin:streptavidin interaction. 2. GOI sequences are expressed in the bacteriophage library as a fusion with a bacteriophage coat protein. 3. This phage-display library is added to the dish and after allowing the phage time to bind, the dish is washed. 4. Phage-displaying proteins that interact with the target molecules remain attached to the dish, while all others are washed away. 5. Attached phage may be eluted and used to create more phage by infection of suitable bacterial hosts. The new phage constitutes an enriched mixture, containing considerably less irrelevant phage (i.e. non-binding) than were present in the initial mixture. 6. Steps 3 to 5 are optionally repeated one or more times, further enriching the phage library for high-affinity binding phages. 7. Following further bacterial-based amplification, the DNA within the interacting phage is sequenced to identify the interacting proteins or protein fragments. Challenges and requirements Benefits. The protocols are very well described and the techniques have been used for a long time now. The availability of different commercial kits makes this technique easy to be performed by non-experts. Phage display is quick, with four rounds of selection and screening feasible within two weeks. Problems. Given the biology of the phages, fast-growing phages will be enriched and peptides that are not relevant for the binding isolated. Also non-specific binders are often enriched because of the affinity of certain peptide/protein variants to the plastic of the titer plates or other supports used during the panning. Level of complexity. This technique is relatively easy, especially if starting from commercial kits. However, it is more complex if beginning from a different starting point and if rounds of diversification are needed. Materials and resources are the ones used in standard molecular biology techniques and instruments. However, to harvest phages, ultracentrifugation may be required. A plate reader is useful for reading ELISA plates, and the materials for ELISA needed for characterizing the binding of selected peptides can be expensive. References and useful protocols The best protocol to start with is the one present in the manual of the commercially available NEB kit for phage display: These kits starts from random short peptide sequences, if the starting point is a non-random sequence then the target sequence should be cloned into M13 KE cloning phage following protocols also from NEB Most of the relevant protocols for immobilization of the targets on the different solid support are also available on the NEB webpage Chasteen L, Ayriss J, Pavlik P, Bradbury AR. Eliminating helper phage from phage display. Nucleic Acids Res. 2006;34(21):e145.https://doi.org/10.1093/nar/gkl772 \u21a9","title":"The phage display"},{"location":"phage_display.html#the-phage-display","text":"","title":"The phage display"},{"location":"phage_display.html#introduction","text":"Phage display is a laboratory technique used for the high-throughput screening of protein- and peptide-binders. In this technique, a gene encoding a protein of interest (POI) is expressed in frame (i.e. as a fusion) with the phage coat protein gene, causing the phage to \"display\" the protein on its outside. The phage itself serves as a 'vessel' connecting the displayed phenotype and genotype. The displaying phages can then be screened against various bait molecules (proteins, peptides or DNA sequences) for specific interaction with them. In this way, large libraries of proteins can be screened and amplified in a process called in vitro selection. The most common bacteriophages used in phage display are M13 and FD filamentous phage, though T4, T7, and \u03bb phage are also used.","title":"Introduction."},{"location":"phage_display.html#general-principle","text":"In the M13 phage display, the DNA encoding POI is expressed N-terminally with either pIII or pVIII gene, which encodes the minor and major coat proteins. The pIII gene is responsible for binding to E.coli via associating with the F' pilus thereby triggering infection. Certain E.coli strains are suitable for this purpose: TG1, SS320, ER2738, or XL1-Blue. Fusing POI to the pIII N-terminus ensures correct exposure of a target peptide for the interaction with a bait molecule. The POIs of sizes less than 50 amino acids largely don't affect the main function of the coat protein - phage infectivity. For larger POIs a \"phagemid\" vector is used (a simplified display construct vector) that encodes a fused version of the coat-protein with the intact coat protein (and other phage lifecyle-components) provided by a helper phage. Upon infection, intact pIII competes with POI-pIII fusion resulting in a large portion of the phage population not displaying POI and a small portion that would contain on average a single copy of POI-pIII per phage particle. Use of phagemid is beneficial in two ways: ( 1 ) smaller vector enables higher transformation efficiency hence higher genetic diversity libraries; ( 2 ) use of monovalent display of POI on phages often results in selection of higher affinity binders due to the absence of an 'avidity' effect. The bait molecules are typically immobilised on the surface of a microtiter plate. Phages that tightly interact with the bait will remain attached to the plate while the majority of the phage population will be washed away. The remaining phage are then eluted and amplified again in the next round of bacterial infection resulting in a phage mixture enriched with phages that bind the target molecule. This process is referred to as panning is typically repeated a number of times to establish high level of enrichment of phages encoding tight-binder POIs. Phage eluted in the final step can then be used to infect a suitable bacterial host, from which the phagemids are collected and subsequently analysed by NGS or Sanger sequencing coupled with ELISA. The use of a helper phage can be eliminated by using 'bacterial packaging cell line' technology 1 . Elution is usually carried out by using trypsin to digest the bait protein and presented binding protein, thus releasing the bound phage, or by using low pH buffer to dissociate electrostatic interactions. Competitive elution can also be used if a known binder is available and binder for a specific region (e.g. a catalytic pocket) is desired.","title":"General principle."},{"location":"phage_display.html#general-protocol","text":"A common protocol for the phage display would consist of the following steps: 1. Bait protein or DNA molecules are immobilized to the wells of a microtiter plate either chemically or via biotin:streptavidin interaction. 2. GOI sequences are expressed in the bacteriophage library as a fusion with a bacteriophage coat protein. 3. This phage-display library is added to the dish and after allowing the phage time to bind, the dish is washed. 4. Phage-displaying proteins that interact with the target molecules remain attached to the dish, while all others are washed away. 5. Attached phage may be eluted and used to create more phage by infection of suitable bacterial hosts. The new phage constitutes an enriched mixture, containing considerably less irrelevant phage (i.e. non-binding) than were present in the initial mixture. 6. Steps 3 to 5 are optionally repeated one or more times, further enriching the phage library for high-affinity binding phages. 7. Following further bacterial-based amplification, the DNA within the interacting phage is sequenced to identify the interacting proteins or protein fragments.","title":"General protocol."},{"location":"phage_display.html#challenges-and-requirements","text":"","title":"Challenges and requirements"},{"location":"phage_display.html#benefits","text":"The protocols are very well described and the techniques have been used for a long time now. The availability of different commercial kits makes this technique easy to be performed by non-experts. Phage display is quick, with four rounds of selection and screening feasible within two weeks.","title":"Benefits."},{"location":"phage_display.html#problems","text":"Given the biology of the phages, fast-growing phages will be enriched and peptides that are not relevant for the binding isolated. Also non-specific binders are often enriched because of the affinity of certain peptide/protein variants to the plastic of the titer plates or other supports used during the panning.","title":"Problems."},{"location":"phage_display.html#level-of-complexity","text":"This technique is relatively easy, especially if starting from commercial kits. However, it is more complex if beginning from a different starting point and if rounds of diversification are needed. Materials and resources are the ones used in standard molecular biology techniques and instruments. However, to harvest phages, ultracentrifugation may be required. A plate reader is useful for reading ELISA plates, and the materials for ELISA needed for characterizing the binding of selected peptides can be expensive.","title":"Level of complexity."},{"location":"phage_display.html#references-and-useful-protocols","text":"The best protocol to start with is the one present in the manual of the commercially available NEB kit for phage display: These kits starts from random short peptide sequences, if the starting point is a non-random sequence then the target sequence should be cloned into M13 KE cloning phage following protocols also from NEB Most of the relevant protocols for immobilization of the targets on the different solid support are also available on the NEB webpage Chasteen L, Ayriss J, Pavlik P, Bradbury AR. Eliminating helper phage from phage display. Nucleic Acids Res. 2006;34(21):e145.https://doi.org/10.1093/nar/gkl772 \u21a9","title":"References and useful protocols"},{"location":"resources/CCM.html","text":"iDEC \u2013 Comprehensive Codon Mutagenesis Introduction Deep mutational scanning (DMS) experiments where large combinatorial libraries are coupled to a functional enrichment and DNA is counted using deep sequencing have enabled the generation of information-rich sequence-function maps allowing researchers to comprehensively study the mutational landscape of proteins 1 . DMS experiments are not directed evolution in the conventional sense as they typically do not evolutionarily optimize a protein for a particular function through multiple rounds of selection. However, DMS experiments leverage many of the same approaches and yield useful insight into mutational landscapes for guiding subsequent directed evolution experiments. DMS experiments also generate large amounts of data that are highly useful for training machine learning models that can be used to guide directed evolution 2 . DMS has been applied to several types of mutational lesions 3 including codon mutations 4 , 5 , 6 as well as mutations that alter protein topology, including domain insertion 7 , 8 , circular permutation 9 , and truncation 10 . DMS experiments commonly analyze comprehensive codon mutagenesis (CCM). CCM is the process of generating combinatorial libraries where the amino acid encoded at each residue location within a protein is randomized to all possible amino acids. CCM libraries can be generated using a variety of techniques. Nicking mutagenesis, codon tiling PCR11, inverse PCR12, transposon mutagenesis 7 , 8 , 9 and recently CCM libraries have been generated from pools of synthetic oligos that can be generated in high-throughput using oligo library synthesis (OLS) approaches 6 , 8 . Here we present the basic protocols and tips for designing and constructing comprehensive codon mutagenesis libraries and considerations for enrichment and deep sequencing analysis. The principles of comprehensive codon mutagenesis The basic principle of comprehensive codon mutagenesis is to generate a large library of vectors for expressing protein variants with single point mutations. A sufficient number of vectors are generated such that the library contains a protein variant with a mutation at each of the possible residue positions. Library Construction There are a variety of approaches for generating comprehensive codon mutagenesis libraries that require different levels of resources. Below is a list with general descriptions of many protocols historically used to generate CCM libraries with links to primary literature and detailed protocols. To help decide which approach best fits your lab\u2019s resources each entry contains a summary of the method, challenges and limitations of the method, and examples where this method was used to generate CCM libraries. PFunkel 4 Summary This is the original comprehensive codon mutagenesis approach. - PFunkel was inspired by Kunkel site-directed mutagenesis that leverages uracil-containing, single-stranded DNA (ssDNA) templates to limit the presence of wild-type vectors carried over in transformations 13 as uracil-containing ssDNA is rapidly degraded in bacteria. PFunkel is a modification to this method that increases mutational efficiency from 50-90% that is achieved using the Kunkle method to nearly 100% using PFunkel. - A uracil-containing ssDNA template is generating by propagating phagemid DNA containing the f1 phage origin and target gene in an Escherichia coli dut-1 ung-1 host and infecting the culture with the M13 helper phage and harvesting ssDNA from isolated phage particles. - E.coli dut-1 ung-1 contains a heat-sensitive dUTPase and lacks uracil DNA glycosylase activity resulting in the production of uracil-containing DNA. - Mutagenic oligonucleotide primers containing desired mutations are phosphorylated using T4 Polynucleotide Kinase (PNK) to enable subsequent ligation of DNA products using Taq ligase. - A mutated second strand is generated by mixing the phosphorylated oligonucleotide and the uracil-containing ssDNA template (4:1 molar ratio) along with PfuTurbo Cx DNA polymerase, Taq ligase, DTT, NAD+, and dNTPs. The mixture is then thermocycled to allow for denaturation, annealing, extension and ligation to generate a mutated second strand with a sealed nick. - To generate a complementary mutated strand a second oligonucleotide primer that anneals outside of the mutated gene is then added to the reaction and the denaturation, annealing, extension and ligation cycle is repeated. - To remove the uracil-containing ssDNA template uracil DNA glycosylase and exonuclease III are added to the reaction to generate nicks at the uracil containing bases and degrade the ssDNA template. - DNA is then directly transformed into chemically competent cells or purified and electroporated into electrocompetent cells. - Method reportedly ddemonstrate close to 100% level opf efficiency for single codon mutations. - This method is highly extensible allowing for multiple codon positions to be targeted simultaneously in a single vector by leveraging multiple mutagenic primers and the inability of PfuTurbo to strand-displace at low extension temperatures (<68C). Single-tube generation of CCM libraries using pools of mutagenic oligos and using a low oligonucleotide primer to ssDNA template ratio (1:20) ensures only a single codon mutation in each vector. Enables 96-97% of desired mutations to be sampled with no multiple mutations and minimal bias. Challenges and limitations The PFunkel method requires a specialized E.coli strain ( E.coli dut-1 ung-1) not typically used in cloning workflows. Requires specialized methods for isolating DNA from phage particles Uracil-containing ssDNA yields can vary greatly between templates Requires a specialized DNA polymerase that can use uracil-containing templates (PfuTurbo Cx HotStart) Requires additional enzymes not commonly found in cloning workflows (uracil DNA glycosylase) Examples(s): CCM of \u03b2-lactamase (TEM-1) 4 CCM of a 40-codon region of the gene encoding levoglucosan kinase (LGK) from Lipomyces starkeyi 14 CCM of gene encoding an aliphatic amidase from Pseudomonas aeruginosa (amiE) 15 Inverse PCR 12 Summary A template dsDNA plasmid is mutagenized by an inverse PCR reaction using adjacent, non-overlapping oligonucleotide primers that are complementary to opposite strands of the template and amplify the entire DNA vector. One of the oligonucleotide primers used in the PCR encodes \u2018NNK\u2019 (where N is A/C/G/T and K is G/T in equimolar ratio) at a single codon position within the protein and will randomize the encoded amino acid. The template is then phosphorylated and ligated to yield circular vectors that can be moved into cells for functional selection. - This method is highly efficient, generating 90-95% of expected mutant vectors with ~5-10% of vectors containing deletions that are the result of primer synthesis errors. - This method only requires materials commonly used in cloning workflows Challenges and limitations PCR can introduce bias into the library due to bias in annealing primers with mismatches. This challenge can be alleviated by introducing the NNK mutation at the 5\u2019 end of one of the oligonucleotide primers. Each inverse PCR reaction is able to comprehensively mutate a single codon within a protein, requiring individual PCR reactions for each codon position in a protein to generate a comprehensive library. Large templates can be challenging to work with without introducing random mutations within the template backbone. Can be partially alleviated by using high-fidelity polymerases or by subcloning libraries into clean vector backbones. Example(s) CCM of tumor suppressor phosphatase and tensin homolog (PTEN) and the enzyme thiopurine methyltransferase (TPMT) 16 Programmed allelic series (PALS) mutagenesis 6 Summary Uses microarray-synthesized oligonucleotide pools that \u2018tile\u2019 the gene to introduce mutations using mutagenic primer extension. Uses a uracil-containing template so that template DNA can be selectively degraded. Oligo pool is designed and commercially synthesized A series of 8 steps are needed to produce the full mutagenized library. First, library of mutagenic primers are amplified from the oligo pool using a set of adapter sequences and one adapter is removed using a uracil-containing base and USER enzyme. Second a uracil-containing ssDNA template of the sense strand is generated by amplifying the wild-type dsDNA template was PCR amplified using an unphosphorylated forward primer and a 5\u2019-phosphorylated reverse primer along with Kapa HiFi U+ HotStart Ready Mix supplemented with dUTPs to incorporate uracil bases. The antisense strand is degraded using lambda exonuclease. Third the mutagenic oligos are annealed and extended on the wildtype sense template Fourth the gene fragment is PCR amplified using an upstream primer and uracil containing oligo adapter that can be degraded along with the wildtype template using USER enzyme. Fifth a sense mutagenesis megaprimer is generated by annealing and extending an outer primer Sixth a uracil-containing ssDNA template of the antisense strand is generated by amplifying the wild-type dsDNA template was PCR amplified using a 5\u2019-phosphorylated forward primer and an unphosphorylated reverse primer along with Kapa HiFi U+ HotStart Ready Mix supplemented with dUTPs to incorporate uracil bases. The sense strand is degraded using lambda exonuclease. Seventh the mutagenesis megaprimers are annealed and extended on the uracil-containing wildtype antisense template Finally in the eighth step the WT template is degraded with USER and the the full length-mutant library is amplified using gene flanking primers.This library is then subcloned into a suitable expression vector. For specific details see Supplementary Figure 1 from 6 . Challenges and limitations Requires specialized enzymes for generating the uracil containing DNA templates (Kapa HiFi U, USER enzyme #M5505) Oligo pools can be prohibitively expensive, but can be applied to many genes in tandem. Examples(s) CCM of a 64-codon region of the yeast transcription factor Gal4 gene and CCM of a 393-codon region of the human tumor suppressor p53 gene 6 CCM of a 403-codon region of the catalytic site of a hyperthermophilic DNA polymerase from Thermococcus kodakarensis . Library was used for directed evolution to improve activity on synthesis of \u03b1-L-threofuranosyl nucleic acids (TNA) using a modified PALS approach 17 Nicking mutagenesis 5 Summary Overcomes the need for uracil-containing template DNA and some of the specialized enzymes (uracil DNA glycosylase) used by PFunkel and PALS. Selectively nicks double-stranded DNA template using a pair of strand-specific endonucleases (Nt.BbvCI and Nb.BbvCI) that nick wild type template DNA enabling exonucelase III degradation. To generate a single-stranded DNA (ssDNA) template a double-stranded DNA (dsDNA) template is treated with Nt.BbvC that selectively nicks a single strand at the BbvCI restriction site and is treated with exonuclease III and exonuclease I to degrade the nicked strand. Mutagenic oligonucleotide primers containing desired mutations are phosphorylated using T4 Polynucleotide Kinase (PNK) to enable subsequent ligation of DNA products using Taq ligase. A mutated second strand is generated by mixing the phosphorylated mutagenic oligonucleotide and the ssDNA template (1:20 molar ratio) along with Phusion DNA polymerase, Taq ligase, DTT, NAD+, and dNTPs. The mixture is then thermocycled to allow for denaturation, annealing, extension and ligation to generate a mutated second strand with a sealed nick. The wild-type ssDNA template is degraded by treating with Nb.BbvCI that selectively nicks the single strand at the BbvCI restriction site and is treated with exonuclease III and exonuclease I to degrade the nicked strand. A secondary oligonucleotide primer that complements the mutated strand is phosphorylated using T4 Polynucleotide Kinase (PNK) to enable subsequent ligation of DNA products using Taq ligase. A complementary second strand is generated by mixing the Nb.BbvCI treated mutated stand with the phosphorylated secondary oligonucleotide along with Phusion DNA polymerase, Taq ligase, DTT, NAD+, and dNTPs. The mixture is then thermocycled to allow for denaturation, annealing, extension and ligation to generate a mutated second strand with a sealed nick. DNA is purified and used is electroporated into electrocompetent cells. Similar extensibility as that of PFunkel allowing for single, multisite, or single-tube comprehensive codon mutagenesis. Modified to use microarray-synthesized oligo pools instead of individually synthesized oligos 18 , 19 Challenges and limitations Template plasmid must contain a 7-bp BbvCI restriction site to enable nicking strategy. Requires specialized restriction enzymes not commonly used in cloning workflows (Nt.BbvCI, Nb.BbvCI) Examples(s) CCM to two 71-codon regions of the gene encoding an aliphatic amidase from Pseudomonas aeruginosa (amiE) and to an 81-codon region of \u03b2-lactamase (TEM-1) using individually synthesized oligos 5 Detailed protocol can be found here CCM of the gene encoding an aliphatic amidase from Pseudomonas aeruginosa (amiE), CCM of a 100-codon region of the anti-Influenza human antibody variable heavy gene UCA9, and targeted mutagenesis of the Arabidopsis thaliana gene encoding abscisic acid receptor PYR1 using microarray-synthesized oligo pools 18 Detailed protocol can be found here CCM of the gene encoding the F capsid and the G spike protein from the bacteriophage \u03a6X174 using microarray-synthesized oligo pools 19 Tiling primers for codon mutagenesis 11 Summary This approach involves iterative rounds of low-cycle PCR with pools of mutagenic oligonucleotides that each contain \u2018NNN\u2019 triplet at a specific codon site. Oligos with a randomized \u2018NNN\u2019 nucleotide followed by upstream and downstream regions of the gene such that all primers have similar melting temperatures are generated using a python script Two oligo pools are generated one \u2018forward-fragement\u2019 set containing primers binding to the sense strand and one \u2018reverse-fragment\u2019 set containing primers that bind to the anti-sense strand. These can be commercially ordered as individual primer and then mixed into equimolar pools or can be ordered as oligo pools from a commercial source. Two end primers are designed to anneal to the termini of the gene sequence containing BsmBI restriction sites for cloning the library into an expression vector. The entire gene is amplified using the end primers in a 25 thermocycle reaction and agarose gel purified. Two fragment PCR reactions are run for using the purified template. 1) A \u2018forward-fragment\u2019 reaction containing the forward mutagenesis primer pool as well as the forward end primer and 2) a \u2018reverse-fragment\u2019 reaction containing the reverse mutagenesis primer pool and the reverse end primer. These PCRs are performed for only 7 thermocycles. These PCR products are then diluted 1:4 and used for a \u2018joining PCR reaction\u2019 using the two end primers to amplify full length mutant genes. This reaction is performed for 20 thermocycles. This joining PCR reaction is repeated up to three times, the number of times this process is repeated will control the number of multiple mutations observed within the gene (see the primer design software README for details). The product of this reaction is purified and cloned into the expression vector using BsmBI. This vector pool is then electroporated into ultracompetent cells. Challenges and limitations This method generates proteins with a Poisson distribution of codon mutations. Some will have a single mutation while some will contain zero or multiple mutations. If the mean mutation per protein is 1 then 37% of the proteins will contain zero mutations, 37% will have one mutation, and the rest will have multiple mutations. Determining the number of cycles for this process to obtain libraries with desired levels of mutations can require some fine tuning. Examples(s) CCM of the influenza nucleoprotein 11 CCM of the HIV envelope protein 20 CCM of the receptor binding domain of the SARS-CoV-2 spike glycoprotein 21 Plasmid recombineering 22 Summary An in vivo mutagenesis approach that is amenable to directed evolution workflows. Relies on single-strand recombineering to generate mutations. An extensive review on recombineering and MAGE can be found here 23 . Mutagenic oligonucleotides are designed to be complementary to the lagging strand of the gene of interest and contain a centrally located \u2018NNN\u2019 sequence. Oligonucleotides are then electroporated into the recombineering ready strain containing the WT plasmid. Plasmids can then be isolated from the strain or directly enriched for functionality using a selection or screen. After one round of plasmid recombineering ~29% of reads contained single amino acid mutations with nearly complete coverage of the possible residue mutations. 61% of the sequences corresponded to wild type sequences. Additional rounds of plasmid recombineering can be used to increase the penetrance of mutations and to generate variants with more than one mutation. Can also be targeted to specific regions. Challenges and limitations Requires a recombineering and MAGE ready strain (for example: EcNR2 [Escherichia coli MG1655 mutS::cat (ybhBbioAB)::[cI857 N(cro-ea59)::tetR-bla]]). Yields libraries that contain positional and mismatch bias that are caused by the mechanism of recombineering relying on oligonucleotides annealing to the locus via homology resulting in nonuniform representation of each mutant. Examples(s) CCM of iLOV a 110-residue domain of the light, oxygen, voltage (LOV) domains of the A.thaliana phototropin 2 protein 22 Library Oligo Design and Synthesis Considerations CCM libraries require the in silico design of oligos used for constructing the library of protein expression vectors. There are several available tools that facilitate library design. Useful software tools for the design of oligo libraries. CodonTilingPrimers - Jesse Bloom Lab - Fred Hutchinson Cancer Research Center 11 SPINE : Saturated Programmable INsertion Engineering - Daniel Schmidt Lab - U. Minnesota 8 Options for deep insertional scan or deep mutational scan MutationMaker - Merck 24 Individually synthesized oligos can be purchased from your typical oligo supplier. Microarray-synthesized oligo library pools can be commercially synthesized and ordered from companies such as Twist Bioscience, Agilent, IDT, GenScript, and others. Links to Protocols and Research Articles Fowler, D. M. & Fields, S. Deep mutational scanning: a new style of protein science. Nature Methods 11, 801\u2013807 (2014). \u21a9 Yang, K. K., Wu, Z. & Arnold, F. H. Machine-learning-guided directed evolution for protein engineering. Nat Methods 16, 687\u2013694 (2019). \u21a9 Higgins, S. A. & Savage, D. F. Protein Science by DNA Sequencing: How Advances in Molecular Biology Are Accelerating Biochemistry. Biochemistry 57, 38\u201346 (2018). \u21a9 Firnberg, E. & Ostermeier, M. PFunkel: Efficient, Expansive, User-Defined Mutagenesis. PLoS ONE 7, e52031 (2012). \u21a9 \u21a9 Wrenbeck, E. E. et al. Plasmid-based one-pot saturation mutagenesis. Nat Methods 13, 928\u2013930 (2016). \u21a9 \u21a9 \u21a9 Kitzman, J. O., Starita, L. M., Lo, R. S., Fields, S. & Shendure, J. Massively parallel single-amino-acid mutagenesis. Nature Methods 12, 203\u2013206 (2015). \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 Nadler, D. C., Morgan, S.-A., Flamholz, A., Kortright, K. E. & Savage, D. F. Rapid construction of metabolite biosensors using domain-insertion profiling. Nat Commun 7, 12266 (2016). \u21a9 \u21a9 Coyote-Maestas, W., Nedrud, D., Okorafor, S., He, Y. & Schmidt, D. Targeted insertional mutagenesis libraries for deep domain insertion profiling. Nucleic Acids Research 48, 1010\u20131010 (2020). \u21a9 \u21a9 \u21a9 \u21a9 Atkinson, J. T., Jones, A. M., Zhou, Q. & Silberg, J. J. Circular permutation profiling by deep sequencing libraries created using transposon mutagenesis. Nucleic Acids Research 46, e76\u2013e76 (2018). \u21a9 \u21a9 Shams, A. et al. Comprehensive deletion landscape of CRISPR-Cas9 identifies minimal RNA-guided DNA-binding modules. http://biorxiv.org/lookup/doi/10.1101/2020.10.19.344077 (2020) doi:10.1101/2020.10.19.344077. \u21a9 Bloom, J. D. An Experimentally Determined Evolutionary Model Dramatically Improves Phylogenetic Fit. Molecular Biology and Evolution 31, 1956\u20131978 (2014). \u21a9 \u21a9 \u21a9 Jain, P. C. & Varadarajan, R. A rapid, efficient, and economical inverse polymerase chain reaction-based method for generating a site saturation mutant library. Analytical Biochemistry 449, 90\u201398 (2014). \u21a9 Kunkel, T. A. Rapid and efficient site-specific mutagenesis without phenotypic selection. Proceedings of the National Academy of Sciences 82, 488\u2013492 (1985). \u21a9 Kowalsky, C. A. et al. High-Resolution Sequence-Function Mapping of Full-Length Proteins. PLoS ONE 10, e0118193 (2015). \u21a9 Wrenbeck, E. E., Azouz, L. R. & Whitehead, T. A. Single-mutation fitness landscapes for an enzyme on multiple substrates reveal specificity is globally encoded. Nat Commun 8, 15695 (2017). \u21a9 Matreyek, K. A. et al. Multiplex assessment of protein variant abundance by massively parallel sequencing. Nat Genet 50, 874\u2013882 (2018). \u21a9 Nikoomanzar, A., Vallejo, D., Yik, E. J. & Chaput, J. C. Programmed Allelic Mutagenesis of a DNA Polymerase with Single Amino Acid Resolution. ACS Synth. Biol. 9, 1873\u20131881 (2020). \u21a9 Medina-Cucurella, A. V. et al. User-defined single pot mutagenesis using unamplified oligo pools. Protein Engineering, Design and Selection 32, 41\u201345 (2019). \u21a9 \u21a9 Faber, M. S. et al. Saturation Mutagenesis Genome Engineering of Infective \u03a6X174 Bacteriophage via Unamplified Oligo Pools and Golden Gate Assembly. ACS Synth. Biol. 9, 125\u2013131 (2020). \u21a9 \u21a9 Dingens, A. S., Haddox, H. K., Overbaugh, J. & Bloom, J. D. Comprehensive Mapping of HIV-1 Escape from a Broadly Neutralizing Antibody. Cell Host & Microbe 21, 777-787.e4 (2017). \u21a9 Starr, T. N. et al. Deep Mutational Scanning of SARS-CoV-2 Receptor Binding Domain Reveals Constraints on Folding and ACE2 Binding. Cell 182, 1295-1310.e20 (2020). \u21a9 Higgins, S. A., Ouonkap, S. V. Y. & Savage, D. F. Rapid and Programmable Protein Mutagenesis Using Plasmid Recombineering. ACS Synth. Biol. 6, 1825\u20131833 (2017). \u21a9 \u21a9 Wannier, T. M. et al. Recombineering and MAGE. Nat Rev Methods Primers 1, 7 (2021). \u21a9 Hiraga, K. et al. Mutation Maker, An Open Source Oligo Design Platform for Protein Engineering. http://biorxiv.org/lookup/doi/10.1101/2020.06.26.171819 (2020) doi:10.1101/2020.06.26.171819. \u21a9","title":"iDEC \u2013 Comprehensive Codon Mutagenesis"},{"location":"resources/CCM.html#idec-comprehensive-codon-mutagenesis","text":"","title":"iDEC \u2013 Comprehensive Codon Mutagenesis"},{"location":"resources/CCM.html#introduction","text":"Deep mutational scanning (DMS) experiments where large combinatorial libraries are coupled to a functional enrichment and DNA is counted using deep sequencing have enabled the generation of information-rich sequence-function maps allowing researchers to comprehensively study the mutational landscape of proteins 1 . DMS experiments are not directed evolution in the conventional sense as they typically do not evolutionarily optimize a protein for a particular function through multiple rounds of selection. However, DMS experiments leverage many of the same approaches and yield useful insight into mutational landscapes for guiding subsequent directed evolution experiments. DMS experiments also generate large amounts of data that are highly useful for training machine learning models that can be used to guide directed evolution 2 . DMS has been applied to several types of mutational lesions 3 including codon mutations 4 , 5 , 6 as well as mutations that alter protein topology, including domain insertion 7 , 8 , circular permutation 9 , and truncation 10 . DMS experiments commonly analyze comprehensive codon mutagenesis (CCM). CCM is the process of generating combinatorial libraries where the amino acid encoded at each residue location within a protein is randomized to all possible amino acids. CCM libraries can be generated using a variety of techniques. Nicking mutagenesis, codon tiling PCR11, inverse PCR12, transposon mutagenesis 7 , 8 , 9 and recently CCM libraries have been generated from pools of synthetic oligos that can be generated in high-throughput using oligo library synthesis (OLS) approaches 6 , 8 . Here we present the basic protocols and tips for designing and constructing comprehensive codon mutagenesis libraries and considerations for enrichment and deep sequencing analysis.","title":"Introduction"},{"location":"resources/CCM.html#the-principles-of-comprehensive-codon-mutagenesis","text":"The basic principle of comprehensive codon mutagenesis is to generate a large library of vectors for expressing protein variants with single point mutations. A sufficient number of vectors are generated such that the library contains a protein variant with a mutation at each of the possible residue positions.","title":"The principles of comprehensive codon mutagenesis"},{"location":"resources/CCM.html#library-construction","text":"There are a variety of approaches for generating comprehensive codon mutagenesis libraries that require different levels of resources. Below is a list with general descriptions of many protocols historically used to generate CCM libraries with links to primary literature and detailed protocols. To help decide which approach best fits your lab\u2019s resources each entry contains a summary of the method, challenges and limitations of the method, and examples where this method was used to generate CCM libraries.","title":"Library Construction"},{"location":"resources/CCM.html#pfunkel-4","text":"","title":"PFunkel 4"},{"location":"resources/CCM.html#summary","text":"This is the original comprehensive codon mutagenesis approach. - PFunkel was inspired by Kunkel site-directed mutagenesis that leverages uracil-containing, single-stranded DNA (ssDNA) templates to limit the presence of wild-type vectors carried over in transformations 13 as uracil-containing ssDNA is rapidly degraded in bacteria. PFunkel is a modification to this method that increases mutational efficiency from 50-90% that is achieved using the Kunkle method to nearly 100% using PFunkel. - A uracil-containing ssDNA template is generating by propagating phagemid DNA containing the f1 phage origin and target gene in an Escherichia coli dut-1 ung-1 host and infecting the culture with the M13 helper phage and harvesting ssDNA from isolated phage particles. - E.coli dut-1 ung-1 contains a heat-sensitive dUTPase and lacks uracil DNA glycosylase activity resulting in the production of uracil-containing DNA. - Mutagenic oligonucleotide primers containing desired mutations are phosphorylated using T4 Polynucleotide Kinase (PNK) to enable subsequent ligation of DNA products using Taq ligase. - A mutated second strand is generated by mixing the phosphorylated oligonucleotide and the uracil-containing ssDNA template (4:1 molar ratio) along with PfuTurbo Cx DNA polymerase, Taq ligase, DTT, NAD+, and dNTPs. The mixture is then thermocycled to allow for denaturation, annealing, extension and ligation to generate a mutated second strand with a sealed nick. - To generate a complementary mutated strand a second oligonucleotide primer that anneals outside of the mutated gene is then added to the reaction and the denaturation, annealing, extension and ligation cycle is repeated. - To remove the uracil-containing ssDNA template uracil DNA glycosylase and exonuclease III are added to the reaction to generate nicks at the uracil containing bases and degrade the ssDNA template. - DNA is then directly transformed into chemically competent cells or purified and electroporated into electrocompetent cells. - Method reportedly ddemonstrate close to 100% level opf efficiency for single codon mutations. - This method is highly extensible allowing for multiple codon positions to be targeted simultaneously in a single vector by leveraging multiple mutagenic primers and the inability of PfuTurbo to strand-displace at low extension temperatures (<68C). Single-tube generation of CCM libraries using pools of mutagenic oligos and using a low oligonucleotide primer to ssDNA template ratio (1:20) ensures only a single codon mutation in each vector. Enables 96-97% of desired mutations to be sampled with no multiple mutations and minimal bias.","title":"Summary"},{"location":"resources/CCM.html#challenges-and-limitations","text":"The PFunkel method requires a specialized E.coli strain ( E.coli dut-1 ung-1) not typically used in cloning workflows. Requires specialized methods for isolating DNA from phage particles Uracil-containing ssDNA yields can vary greatly between templates Requires a specialized DNA polymerase that can use uracil-containing templates (PfuTurbo Cx HotStart) Requires additional enzymes not commonly found in cloning workflows (uracil DNA glycosylase)","title":"Challenges and limitations"},{"location":"resources/CCM.html#exampless","text":"CCM of \u03b2-lactamase (TEM-1) 4 CCM of a 40-codon region of the gene encoding levoglucosan kinase (LGK) from Lipomyces starkeyi 14 CCM of gene encoding an aliphatic amidase from Pseudomonas aeruginosa (amiE) 15","title":"Examples(s):"},{"location":"resources/CCM.html#inverse-pcr12","text":"","title":"Inverse PCR12"},{"location":"resources/CCM.html#summary_1","text":"A template dsDNA plasmid is mutagenized by an inverse PCR reaction using adjacent, non-overlapping oligonucleotide primers that are complementary to opposite strands of the template and amplify the entire DNA vector. One of the oligonucleotide primers used in the PCR encodes \u2018NNK\u2019 (where N is A/C/G/T and K is G/T in equimolar ratio) at a single codon position within the protein and will randomize the encoded amino acid. The template is then phosphorylated and ligated to yield circular vectors that can be moved into cells for functional selection. - This method is highly efficient, generating 90-95% of expected mutant vectors with ~5-10% of vectors containing deletions that are the result of primer synthesis errors. - This method only requires materials commonly used in cloning workflows","title":"Summary"},{"location":"resources/CCM.html#challenges-and-limitations_1","text":"PCR can introduce bias into the library due to bias in annealing primers with mismatches. This challenge can be alleviated by introducing the NNK mutation at the 5\u2019 end of one of the oligonucleotide primers. Each inverse PCR reaction is able to comprehensively mutate a single codon within a protein, requiring individual PCR reactions for each codon position in a protein to generate a comprehensive library. Large templates can be challenging to work with without introducing random mutations within the template backbone. Can be partially alleviated by using high-fidelity polymerases or by subcloning libraries into clean vector backbones.","title":"Challenges and limitations"},{"location":"resources/CCM.html#examples","text":"CCM of tumor suppressor phosphatase and tensin homolog (PTEN) and the enzyme thiopurine methyltransferase (TPMT) 16","title":"Example(s)"},{"location":"resources/CCM.html#programmed-allelic-series-pals-mutagenesis6","text":"","title":"Programmed allelic series (PALS) mutagenesis6"},{"location":"resources/CCM.html#summary_2","text":"Uses microarray-synthesized oligonucleotide pools that \u2018tile\u2019 the gene to introduce mutations using mutagenic primer extension. Uses a uracil-containing template so that template DNA can be selectively degraded. Oligo pool is designed and commercially synthesized A series of 8 steps are needed to produce the full mutagenized library. First, library of mutagenic primers are amplified from the oligo pool using a set of adapter sequences and one adapter is removed using a uracil-containing base and USER enzyme. Second a uracil-containing ssDNA template of the sense strand is generated by amplifying the wild-type dsDNA template was PCR amplified using an unphosphorylated forward primer and a 5\u2019-phosphorylated reverse primer along with Kapa HiFi U+ HotStart Ready Mix supplemented with dUTPs to incorporate uracil bases. The antisense strand is degraded using lambda exonuclease. Third the mutagenic oligos are annealed and extended on the wildtype sense template Fourth the gene fragment is PCR amplified using an upstream primer and uracil containing oligo adapter that can be degraded along with the wildtype template using USER enzyme. Fifth a sense mutagenesis megaprimer is generated by annealing and extending an outer primer Sixth a uracil-containing ssDNA template of the antisense strand is generated by amplifying the wild-type dsDNA template was PCR amplified using a 5\u2019-phosphorylated forward primer and an unphosphorylated reverse primer along with Kapa HiFi U+ HotStart Ready Mix supplemented with dUTPs to incorporate uracil bases. The sense strand is degraded using lambda exonuclease. Seventh the mutagenesis megaprimers are annealed and extended on the uracil-containing wildtype antisense template Finally in the eighth step the WT template is degraded with USER and the the full length-mutant library is amplified using gene flanking primers.This library is then subcloned into a suitable expression vector. For specific details see Supplementary Figure 1 from 6 .","title":"Summary"},{"location":"resources/CCM.html#challenges-and-limitations_2","text":"Requires specialized enzymes for generating the uracil containing DNA templates (Kapa HiFi U, USER enzyme #M5505) Oligo pools can be prohibitively expensive, but can be applied to many genes in tandem.","title":"Challenges and limitations"},{"location":"resources/CCM.html#exampless_1","text":"CCM of a 64-codon region of the yeast transcription factor Gal4 gene and CCM of a 393-codon region of the human tumor suppressor p53 gene 6 CCM of a 403-codon region of the catalytic site of a hyperthermophilic DNA polymerase from Thermococcus kodakarensis . Library was used for directed evolution to improve activity on synthesis of \u03b1-L-threofuranosyl nucleic acids (TNA) using a modified PALS approach 17","title":"Examples(s)"},{"location":"resources/CCM.html#nicking-mutagenesis5","text":"","title":"Nicking mutagenesis5"},{"location":"resources/CCM.html#summary_3","text":"Overcomes the need for uracil-containing template DNA and some of the specialized enzymes (uracil DNA glycosylase) used by PFunkel and PALS. Selectively nicks double-stranded DNA template using a pair of strand-specific endonucleases (Nt.BbvCI and Nb.BbvCI) that nick wild type template DNA enabling exonucelase III degradation. To generate a single-stranded DNA (ssDNA) template a double-stranded DNA (dsDNA) template is treated with Nt.BbvC that selectively nicks a single strand at the BbvCI restriction site and is treated with exonuclease III and exonuclease I to degrade the nicked strand. Mutagenic oligonucleotide primers containing desired mutations are phosphorylated using T4 Polynucleotide Kinase (PNK) to enable subsequent ligation of DNA products using Taq ligase. A mutated second strand is generated by mixing the phosphorylated mutagenic oligonucleotide and the ssDNA template (1:20 molar ratio) along with Phusion DNA polymerase, Taq ligase, DTT, NAD+, and dNTPs. The mixture is then thermocycled to allow for denaturation, annealing, extension and ligation to generate a mutated second strand with a sealed nick. The wild-type ssDNA template is degraded by treating with Nb.BbvCI that selectively nicks the single strand at the BbvCI restriction site and is treated with exonuclease III and exonuclease I to degrade the nicked strand. A secondary oligonucleotide primer that complements the mutated strand is phosphorylated using T4 Polynucleotide Kinase (PNK) to enable subsequent ligation of DNA products using Taq ligase. A complementary second strand is generated by mixing the Nb.BbvCI treated mutated stand with the phosphorylated secondary oligonucleotide along with Phusion DNA polymerase, Taq ligase, DTT, NAD+, and dNTPs. The mixture is then thermocycled to allow for denaturation, annealing, extension and ligation to generate a mutated second strand with a sealed nick. DNA is purified and used is electroporated into electrocompetent cells. Similar extensibility as that of PFunkel allowing for single, multisite, or single-tube comprehensive codon mutagenesis. Modified to use microarray-synthesized oligo pools instead of individually synthesized oligos 18 , 19","title":"Summary"},{"location":"resources/CCM.html#challenges-and-limitations_3","text":"Template plasmid must contain a 7-bp BbvCI restriction site to enable nicking strategy. Requires specialized restriction enzymes not commonly used in cloning workflows (Nt.BbvCI, Nb.BbvCI)","title":"Challenges and limitations"},{"location":"resources/CCM.html#exampless_2","text":"CCM to two 71-codon regions of the gene encoding an aliphatic amidase from Pseudomonas aeruginosa (amiE) and to an 81-codon region of \u03b2-lactamase (TEM-1) using individually synthesized oligos 5 Detailed protocol can be found here CCM of the gene encoding an aliphatic amidase from Pseudomonas aeruginosa (amiE), CCM of a 100-codon region of the anti-Influenza human antibody variable heavy gene UCA9, and targeted mutagenesis of the Arabidopsis thaliana gene encoding abscisic acid receptor PYR1 using microarray-synthesized oligo pools 18 Detailed protocol can be found here CCM of the gene encoding the F capsid and the G spike protein from the bacteriophage \u03a6X174 using microarray-synthesized oligo pools 19","title":"Examples(s)"},{"location":"resources/CCM.html#tiling-primers-for-codon-mutagenesis11","text":"","title":"Tiling primers for codon mutagenesis11"},{"location":"resources/CCM.html#summary_4","text":"This approach involves iterative rounds of low-cycle PCR with pools of mutagenic oligonucleotides that each contain \u2018NNN\u2019 triplet at a specific codon site. Oligos with a randomized \u2018NNN\u2019 nucleotide followed by upstream and downstream regions of the gene such that all primers have similar melting temperatures are generated using a python script Two oligo pools are generated one \u2018forward-fragement\u2019 set containing primers binding to the sense strand and one \u2018reverse-fragment\u2019 set containing primers that bind to the anti-sense strand. These can be commercially ordered as individual primer and then mixed into equimolar pools or can be ordered as oligo pools from a commercial source. Two end primers are designed to anneal to the termini of the gene sequence containing BsmBI restriction sites for cloning the library into an expression vector. The entire gene is amplified using the end primers in a 25 thermocycle reaction and agarose gel purified. Two fragment PCR reactions are run for using the purified template. 1) A \u2018forward-fragment\u2019 reaction containing the forward mutagenesis primer pool as well as the forward end primer and 2) a \u2018reverse-fragment\u2019 reaction containing the reverse mutagenesis primer pool and the reverse end primer. These PCRs are performed for only 7 thermocycles. These PCR products are then diluted 1:4 and used for a \u2018joining PCR reaction\u2019 using the two end primers to amplify full length mutant genes. This reaction is performed for 20 thermocycles. This joining PCR reaction is repeated up to three times, the number of times this process is repeated will control the number of multiple mutations observed within the gene (see the primer design software README for details). The product of this reaction is purified and cloned into the expression vector using BsmBI. This vector pool is then electroporated into ultracompetent cells.","title":"Summary"},{"location":"resources/CCM.html#challenges-and-limitations_4","text":"This method generates proteins with a Poisson distribution of codon mutations. Some will have a single mutation while some will contain zero or multiple mutations. If the mean mutation per protein is 1 then 37% of the proteins will contain zero mutations, 37% will have one mutation, and the rest will have multiple mutations. Determining the number of cycles for this process to obtain libraries with desired levels of mutations can require some fine tuning.","title":"Challenges and limitations"},{"location":"resources/CCM.html#exampless_3","text":"CCM of the influenza nucleoprotein 11 CCM of the HIV envelope protein 20 CCM of the receptor binding domain of the SARS-CoV-2 spike glycoprotein 21","title":"Examples(s)"},{"location":"resources/CCM.html#plasmid-recombineering22","text":"","title":"Plasmid recombineering22"},{"location":"resources/CCM.html#summary_5","text":"An in vivo mutagenesis approach that is amenable to directed evolution workflows. Relies on single-strand recombineering to generate mutations. An extensive review on recombineering and MAGE can be found here 23 . Mutagenic oligonucleotides are designed to be complementary to the lagging strand of the gene of interest and contain a centrally located \u2018NNN\u2019 sequence. Oligonucleotides are then electroporated into the recombineering ready strain containing the WT plasmid. Plasmids can then be isolated from the strain or directly enriched for functionality using a selection or screen. After one round of plasmid recombineering ~29% of reads contained single amino acid mutations with nearly complete coverage of the possible residue mutations. 61% of the sequences corresponded to wild type sequences. Additional rounds of plasmid recombineering can be used to increase the penetrance of mutations and to generate variants with more than one mutation. Can also be targeted to specific regions.","title":"Summary"},{"location":"resources/CCM.html#challenges-and-limitations_5","text":"Requires a recombineering and MAGE ready strain (for example: EcNR2 [Escherichia coli MG1655 mutS::cat (ybhBbioAB)::[cI857 N(cro-ea59)::tetR-bla]]). Yields libraries that contain positional and mismatch bias that are caused by the mechanism of recombineering relying on oligonucleotides annealing to the locus via homology resulting in nonuniform representation of each mutant.","title":"Challenges and limitations"},{"location":"resources/CCM.html#exampless_4","text":"CCM of iLOV a 110-residue domain of the light, oxygen, voltage (LOV) domains of the A.thaliana phototropin 2 protein 22","title":"Examples(s)"},{"location":"resources/CCM.html#library-oligo-design-and-synthesis-considerations","text":"CCM libraries require the in silico design of oligos used for constructing the library of protein expression vectors. There are several available tools that facilitate library design. Useful software tools for the design of oligo libraries. CodonTilingPrimers - Jesse Bloom Lab - Fred Hutchinson Cancer Research Center 11 SPINE : Saturated Programmable INsertion Engineering - Daniel Schmidt Lab - U. Minnesota 8 Options for deep insertional scan or deep mutational scan MutationMaker - Merck 24 Individually synthesized oligos can be purchased from your typical oligo supplier. Microarray-synthesized oligo library pools can be commercially synthesized and ordered from companies such as Twist Bioscience, Agilent, IDT, GenScript, and others.","title":"Library Oligo Design and Synthesis Considerations"},{"location":"resources/CCM.html#links-to-protocols-and-research-articles","text":"Fowler, D. M. & Fields, S. Deep mutational scanning: a new style of protein science. Nature Methods 11, 801\u2013807 (2014). \u21a9 Yang, K. K., Wu, Z. & Arnold, F. H. Machine-learning-guided directed evolution for protein engineering. Nat Methods 16, 687\u2013694 (2019). \u21a9 Higgins, S. A. & Savage, D. F. Protein Science by DNA Sequencing: How Advances in Molecular Biology Are Accelerating Biochemistry. Biochemistry 57, 38\u201346 (2018). \u21a9 Firnberg, E. & Ostermeier, M. PFunkel: Efficient, Expansive, User-Defined Mutagenesis. PLoS ONE 7, e52031 (2012). \u21a9 \u21a9 Wrenbeck, E. E. et al. Plasmid-based one-pot saturation mutagenesis. Nat Methods 13, 928\u2013930 (2016). \u21a9 \u21a9 \u21a9 Kitzman, J. O., Starita, L. M., Lo, R. S., Fields, S. & Shendure, J. Massively parallel single-amino-acid mutagenesis. Nature Methods 12, 203\u2013206 (2015). \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 Nadler, D. C., Morgan, S.-A., Flamholz, A., Kortright, K. E. & Savage, D. F. Rapid construction of metabolite biosensors using domain-insertion profiling. Nat Commun 7, 12266 (2016). \u21a9 \u21a9 Coyote-Maestas, W., Nedrud, D., Okorafor, S., He, Y. & Schmidt, D. Targeted insertional mutagenesis libraries for deep domain insertion profiling. Nucleic Acids Research 48, 1010\u20131010 (2020). \u21a9 \u21a9 \u21a9 \u21a9 Atkinson, J. T., Jones, A. M., Zhou, Q. & Silberg, J. J. Circular permutation profiling by deep sequencing libraries created using transposon mutagenesis. Nucleic Acids Research 46, e76\u2013e76 (2018). \u21a9 \u21a9 Shams, A. et al. Comprehensive deletion landscape of CRISPR-Cas9 identifies minimal RNA-guided DNA-binding modules. http://biorxiv.org/lookup/doi/10.1101/2020.10.19.344077 (2020) doi:10.1101/2020.10.19.344077. \u21a9 Bloom, J. D. An Experimentally Determined Evolutionary Model Dramatically Improves Phylogenetic Fit. Molecular Biology and Evolution 31, 1956\u20131978 (2014). \u21a9 \u21a9 \u21a9 Jain, P. C. & Varadarajan, R. A rapid, efficient, and economical inverse polymerase chain reaction-based method for generating a site saturation mutant library. Analytical Biochemistry 449, 90\u201398 (2014). \u21a9 Kunkel, T. A. Rapid and efficient site-specific mutagenesis without phenotypic selection. Proceedings of the National Academy of Sciences 82, 488\u2013492 (1985). \u21a9 Kowalsky, C. A. et al. High-Resolution Sequence-Function Mapping of Full-Length Proteins. PLoS ONE 10, e0118193 (2015). \u21a9 Wrenbeck, E. E., Azouz, L. R. & Whitehead, T. A. Single-mutation fitness landscapes for an enzyme on multiple substrates reveal specificity is globally encoded. Nat Commun 8, 15695 (2017). \u21a9 Matreyek, K. A. et al. Multiplex assessment of protein variant abundance by massively parallel sequencing. Nat Genet 50, 874\u2013882 (2018). \u21a9 Nikoomanzar, A., Vallejo, D., Yik, E. J. & Chaput, J. C. Programmed Allelic Mutagenesis of a DNA Polymerase with Single Amino Acid Resolution. ACS Synth. Biol. 9, 1873\u20131881 (2020). \u21a9 Medina-Cucurella, A. V. et al. User-defined single pot mutagenesis using unamplified oligo pools. Protein Engineering, Design and Selection 32, 41\u201345 (2019). \u21a9 \u21a9 Faber, M. S. et al. Saturation Mutagenesis Genome Engineering of Infective \u03a6X174 Bacteriophage via Unamplified Oligo Pools and Golden Gate Assembly. ACS Synth. Biol. 9, 125\u2013131 (2020). \u21a9 \u21a9 Dingens, A. S., Haddox, H. K., Overbaugh, J. & Bloom, J. D. Comprehensive Mapping of HIV-1 Escape from a Broadly Neutralizing Antibody. Cell Host & Microbe 21, 777-787.e4 (2017). \u21a9 Starr, T. N. et al. Deep Mutational Scanning of SARS-CoV-2 Receptor Binding Domain Reveals Constraints on Folding and ACE2 Binding. Cell 182, 1295-1310.e20 (2020). \u21a9 Higgins, S. A., Ouonkap, S. V. Y. & Savage, D. F. Rapid and Programmable Protein Mutagenesis Using Plasmid Recombineering. ACS Synth. Biol. 6, 1825\u20131833 (2017). \u21a9 \u21a9 Wannier, T. M. et al. Recombineering and MAGE. Nat Rev Methods Primers 1, 7 (2021). \u21a9 Hiraga, K. et al. Mutation Maker, An Open Source Oligo Design Platform for Protein Engineering. http://biorxiv.org/lookup/doi/10.1101/2020.06.26.171819 (2020) doi:10.1101/2020.06.26.171819. \u21a9","title":"Links to Protocols and Research Articles"},{"location":"resources/CSR_SBL.html","text":"Introduction In vitro compartmentalisation (IVC) mimics cells by entrapping the genotype (usually in the form of DNA), the in vitro transcription-translation system, and the newly translated protein in a water-in-oil emulsion. The first report of this method dates back to 1996 (https://www.nature.com/articles/nbt0798-652). Since then, a wide variety of IVC protocols has been developed (see below). Correct mixing of oil, detergents, reaction components, and DNA ensures that each droplet contains only a single copy of the genotype or none at all. The maximum number of mutants that can be reliably screened with IVC rarely exceeds 109. Otherwise, the IVC method is far superior to other in vitro selection protocols. It allows the selection of binders and enzymes since the product of their activity is also trapped in the vesicle. Principle and Examples Different versions of covalent DNA display, where each expressed protein gets physically connected to its encoding DNA, are also examples of IVC here and[here]](https://pubmed.ncbi.nlm.nih.gov/17948318/). A powerful method that follows the notion of entrapping genotype and phenotype in the same droplet was used in Compartmentalised Self-Replication (CSR, https://pubmed.ncbi.nlm.nih.gov/30040233/). In this protocol, cells expressing mutant DNA polymerases get entrapped in droplets, along with primers for amplification of the gene encoding the DNA polymerase, nucleotides, and reaction buffer. Following lysis of the cell, both DNA polymerase mutant and the encoding plasmid are released. The DNA of the most active DNA polymerase variants gets exponentially amplified in the emulsion to be used in further rounds of CSR. In another development of IVC, droplets contain beads, which are coupled to both DNA and a product of the reaction that is used as a readout in the subsequent flow cytometry sorting . A version of this protocol suitable for selecting reverse transcriptases of both natural and xenonucleic acids (Compartmentalized Bead Labelling or CBL ) demonstrates the huge potential that IVS has over other in vitro selection methods. Challenges Different versions of IVC have their inherent limits that are not addressed here. Challenges in setting up a version of IVC that contain in vitro transcription-translation systems often come from two sources: Vesicle formation is a difficult procedure that includes the use of detergent and high-frequency mixing. Both factors can irreversibly damage translation components. Thus, known protocols should be followed with great attention to the details. Expect lots of optimisation initially. A degree in polydispersity among droplets is another challenge, as it leads to variation in the reaction rates due to the dilution effect. Microfluidic setups can be used for the preparation of monodisperse droplets. However, these setups have orders of magnitude lower levels of throughput. Future directions As can be appreciated from the number of exciting developments of IVC, this method has tremendous potential for further development. As it is ideally suited for the selection of enzymatic activities, lots of studies are expected in this direction, especially in the field of nucleic acid enzymes. In principle, it can be used in the selection of systems containing several molecular components, the combined activity of which leads to the production of a marker for a readout. Entrapping activity components in droplets have a lot in common with artificial cells. Thus the latter will likely be a powerful method in both the directed evolution of whole artificial cells as well as their functional parts. Links Good methodological article https://www.nature.com/articles/nmeth897 Comprehensive Review https://pubs.rsc.org/en/content/articlehtml/2020/cs/c8cs00981c","title":"By in vitro compartmentalisation"},{"location":"resources/CSR_SBL.html#introduction","text":"In vitro compartmentalisation (IVC) mimics cells by entrapping the genotype (usually in the form of DNA), the in vitro transcription-translation system, and the newly translated protein in a water-in-oil emulsion. The first report of this method dates back to 1996 (https://www.nature.com/articles/nbt0798-652). Since then, a wide variety of IVC protocols has been developed (see below). Correct mixing of oil, detergents, reaction components, and DNA ensures that each droplet contains only a single copy of the genotype or none at all. The maximum number of mutants that can be reliably screened with IVC rarely exceeds 109. Otherwise, the IVC method is far superior to other in vitro selection protocols. It allows the selection of binders and enzymes since the product of their activity is also trapped in the vesicle.","title":"Introduction"},{"location":"resources/CSR_SBL.html#principle-and-examples","text":"Different versions of covalent DNA display, where each expressed protein gets physically connected to its encoding DNA, are also examples of IVC here and[here]](https://pubmed.ncbi.nlm.nih.gov/17948318/). A powerful method that follows the notion of entrapping genotype and phenotype in the same droplet was used in Compartmentalised Self-Replication (CSR, https://pubmed.ncbi.nlm.nih.gov/30040233/). In this protocol, cells expressing mutant DNA polymerases get entrapped in droplets, along with primers for amplification of the gene encoding the DNA polymerase, nucleotides, and reaction buffer. Following lysis of the cell, both DNA polymerase mutant and the encoding plasmid are released. The DNA of the most active DNA polymerase variants gets exponentially amplified in the emulsion to be used in further rounds of CSR. In another development of IVC, droplets contain beads, which are coupled to both DNA and a product of the reaction that is used as a readout in the subsequent flow cytometry sorting . A version of this protocol suitable for selecting reverse transcriptases of both natural and xenonucleic acids (Compartmentalized Bead Labelling or CBL ) demonstrates the huge potential that IVS has over other in vitro selection methods.","title":"Principle and Examples"},{"location":"resources/CSR_SBL.html#challenges","text":"Different versions of IVC have their inherent limits that are not addressed here. Challenges in setting up a version of IVC that contain in vitro transcription-translation systems often come from two sources: Vesicle formation is a difficult procedure that includes the use of detergent and high-frequency mixing. Both factors can irreversibly damage translation components. Thus, known protocols should be followed with great attention to the details. Expect lots of optimisation initially. A degree in polydispersity among droplets is another challenge, as it leads to variation in the reaction rates due to the dilution effect. Microfluidic setups can be used for the preparation of monodisperse droplets. However, these setups have orders of magnitude lower levels of throughput.","title":"Challenges"},{"location":"resources/CSR_SBL.html#future-directions","text":"As can be appreciated from the number of exciting developments of IVC, this method has tremendous potential for further development. As it is ideally suited for the selection of enzymatic activities, lots of studies are expected in this direction, especially in the field of nucleic acid enzymes. In principle, it can be used in the selection of systems containing several molecular components, the combined activity of which leads to the production of a marker for a readout. Entrapping activity components in droplets have a lot in common with artificial cells. Thus the latter will likely be a powerful method in both the directed evolution of whole artificial cells as well as their functional parts.","title":"Future directions"},{"location":"resources/CSR_SBL.html#links","text":"Good methodological article https://www.nature.com/articles/nmeth897 Comprehensive Review https://pubs.rsc.org/en/content/articlehtml/2020/cs/c8cs00981c","title":"Links"},{"location":"resources/FACS_FADS.html","text":"Introduction Two of the most common methods for high-throughput screening in directed evolution are the fluorescence-activated cell sorting (FACS) and, its more recent variation, the fluorescence-activated droplet sorting (FADS). While FACS cytometers can analyze and sort both cells and droplets (with or without cells), they cannot generate the latter. FADS cytometers, on the other hand, can generate droplets that will encapsulate cell-free mixtures or cells for subsequent analysis and sorting. Despite their differences, both systems are used for high-throughput screening of particles and we will mostly focus on FACS applications as they are more common/accessible among laboratories. FACS cytometers are complex instruments that can analyze the fluorescent characteristics of individual \u201cparticles\u201d (e.g., cells, liposomes, beads, emulsion droplets, or polymer shells) at extremely high event rates (~10^7 per hour), isolating those with the desired signal for the desired trait Challenges The main bottleneck in the usage of these systems is that they require the linkage of a genotype (a nucleic acid sequence) to a phenotype (a functional feature like binding or catalytic activity) in an ultrahigh-throughput context (Griffiths and Tawfik, 2006). In other words, the activity of an evolved molecule must be somehow linked to an output that is detectable by the FACS machine (usually a fluorescence signal). Once detected, the particle is sorted and its content can then be sequenced for establishing the genotype-phenotype relationship. Creating experimental setups for these types of studies can be very difficult depending on the system one is working with. If you work with the directed evolution of fluorescent proteins, the signal is directly provided by your protein, however, if you work with metabolic enzymes, for example, you might have to use indirect methods, such as fluorogenic substrates (if available), transcription factors that detect the product of your reaction, being induced by it, and activate the expression of a fluorescent protein, etc. Thus, for screenings involving indirect relationships, things can get a way more complicated. We will see below many examples addressing these challenges and, hopefully, they will serve as inspiration for your project! Firstly, we will briefly explore different FACS-based screening tech\u00adniques in directed evolution. They can be divided into six distinct categories according to the methods used to link the genotype and phenotype: - cell surface display (or in vivo display) of enzymes, - fluorescent protein-based methods, - entrapment of the product inside the cells, - in vitro compartmentalization, - single-cell/microcolony compartmentalization Cell surface display This technique is based on the attachment of heterologous enzymes to the surface of microorganisms (the most common are: bacterial surface display (van Bloois et al., 2011)), yeast (yeast surface display (Boder and Wittrup, 1997)) or phages (phage surface display (Fernandez-Gacio et al., 2003)). Cell display offers ultra\u00adhigh-throughput capacity of up to 10^9 clones per round and allows direct contact between the enzyme and the added substrate, without requiring dif\u00adfusion through the cell membrane. However, this accessibility is at the same time a major drawback as the product is also freely diffusible. This drawback has been overcome by the development of cell microencapsulation techniques that imitate natural cell compartmentalization e.g., including the target enzyme in microemulsion droplets along with the substrate and products (Griffiths and Tawfik, 2006). The main advantages of the cell-in-droplet approach are its high-throughput capacity (~10^9 clones per round) and the reduced volume of the microemulsions (typically ~5 femtoliters), such that little substrate is needed (Aharoni et al., 2005). Very recently, novel screening platforms using polymer encapsulated cells have been developed like: (1) the cellular high-throughput encapsulation, solubilization and screening (CHESS) method to allow the encapsulation of libraries of approximately 10^8 mutants in a polymer to form cell-like microcapsules (Yong and Scott, 2015), (2) the polymer shell method that relies on fluorescent hydrogel formation around E. coli cells (Pitzler et al., 2014) or yeast cells (Vanella et al,. 2019). In vitro display This method is based on the synthesis of the target protein through an in vitro translation system so that the genotype-phenotype linkage is achieved using molecules like ribosomes (ribosome display), puromycin (mRNA display), and the DNA replication initiator pro\u00adtein RepA (CIS display). More recently, novel in vitro display approaches have been reported that include liposome and megavalent bead display. Liposome display enables membrane proteins to be engineered, and it relies on their display on liposome membranes through the transcription and trans\u00adlation of a single DNA molecule using an encapsulated cell-free transla\u00adtion system (Fujii et al., 2014). Megavalent bead surface display allows tailor-made protein binders by laboratory evolution. In this method, the gene that encodes the protein of interest is attached to a bead by strong noncova\u00adlent interactions and the corresponding protein is displayed via a covalent thioether bond on the DNA (Diamante et al., 2013). Fluorescent protein-based methods Due to their fluorescent properties, GFP and other fluorescent proteins (FPs) variants are ideal candidates for single-cell fluores\u00adcence analysis (you can find more about them in this amazingly resourceful website: https://www.fpbase.org/) and, therefore, they can be used in flow cytometry screening (Yang and Withers, 2009). The main advantages of GFP-based screening methods are their very high-throughput (\u223c10 7\u201310 8 clones per round) and the lack of expensive fluorescent substrates. On the other hand, the biggest challenge in this approach is to link the enzymatic func\u00adtion or activity of interest to the FPs expression, which can be very difficult depending on the studied protein. While the results achieved using this flow cytometry-based screen are promising, we must emphasize that flow cytometry is unlikely to serve as a standalone method. It is well-known that individual cells from bacterial cultures composed of a single genotype may display a range of phenotypes attributable to the stochastic nature of gene expression. As one considers that the selection criteria in flow cytometry experiments are determined by the phenotype of an individual cell, the inherent population heterogeneity of a bacterial culture, especially one containing a library of genotypes, makes the task of counter-selecting for one phenotype against another extremely challenging. For example, isolating a single bacterium displaying a low level of fluorescence does not guarantee that a culture grown from that single bacterium will possess, as a whole, those same fluorescence characteristics. With this in mind, the need for reinforcing a single-cell enrichment strategy with traditional assays, measuring average expression levels for an entire population, should be clear. As FP-based methods are becoming more and more common, a few examples for the directed evolution of different molecules can be found below: - Transcription factor directed evolution (usually targeted to ligand and/or DNA binding domains) Tang and colleagues evolved a XylR regulator towards improved operating range, producing a more linear response of the system to the xylose inducer. In other words, a system which was originally considered a bistable molecular switch (digital) was evolved into an analogic one. In this example, the link between genotype and protein function was established by a transcriptional interaction: XylR directly regulated the expression of a GFP gene and mutations affecting the function of the regulator could be readily tracked by the analysis and selection of cells with fluorescence levels that were different from the original system. https://pubs.acs.org/doi/10.1021/acssynbio.0c00225 In a different approach, Machado and colleagues evolved a repressor called PcaV to act as a biosensor for hydroxyl-substituted benzoic acids (such as vanillin and other closely related aromatic aldehydes). The overall system was similar to the one discussed above, linking protein function to fluorescent output through a transcriptional system directly repressed by PcaV which was alleviated by the usage of inducing molecules. After the generation of PcaV mutants, cells were screened through multiple rounds of counter-selection using FACS. In the first round, libraries were uninduced and selected for low fluorescence levels in order to remove non-functional repressors (cells expressing GFP without the inducer probably had non-functional repressors). On the second round, the previously sorted libraries were induced with the new molecule e.g. vanillin (that did not induce the original PcaV) and selected for GFP expression (functional mutants responding to vanillin). On the third round, the uninduced library was selected for cells with low fluorescence levels (this time with a less stringent cutoff than the first round). Finally, cells were again induced with the new molecule and selected for the most fluorescent cells. With this approach, a new biosensor capable of detecting vanillin and other related molecules was generated. https://jbioleng.biomedcentral.com/articles/10.1186/s13036-019-0214-z In our last example, a good combination of dry and wetlab was employed. The IPTG responsive Transcription Factor LacI has been computationally redesigned and mutated to recognize four new non-native inducers (Taylor et al., 2016). This study is a good example of how the combination of computation-guided mutagenesis based on the Rosetta algorithm and different diversification techniques (such as epPCR and saturation mutagenesis) can accelerate the discovery/generation of new molecular functions. In a counter-selection round, the mutant libraries were pre-screened for retained ability to repress a TolC reporter (a porin that allows entry of toxic colicin E1) by growth enrichment in the absence of inducers but in the presence of colicin E1. The enriched LacI libraries were then positively screened by FACS for their ability to activate production of GFP upon induction with different sugars, resulting in variants of LacI that were responsive to fucose, gentiobiose, lactitol and sucralose (Taylor et al., 2016). In this instance, no active counter-screening was performed against activation by IPTG, so nearly all mutants retained their ability to respond to IPTG, a phenotype that was reduced for some designs upon shuffling of mutations for activity screening. https://academic.oup.com/nar/article/48/1/e3/5645005?login=true - Evolution of promoters/cis-regulatory regions For the study and directed evolution of promoter and cis-regulatory regions, a recent and extremely powerful strategy is the Sort-Seq. It relies on the power of FACS for sorting individual cells from libraries of regulatory sequences (controlling the expression of a FP) into different bins, according to their fluorescence levels. Later, each bin is sequenced through and the pool of regulatory sequences in each bin is analysed for the understanding, prediction and re-engineering of sequence-function (promoter-expression) relationships, https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-016-2533-5 https://www.annualreviews.org/doi/full/10.1146/annurev-genom-083118-014845 Although not exactly a directed evolution project, the work from de Boer and colleagues (de Boer et al., 2019) provides an insightful resource for the generation and study of promoter libraries in yeast. Through the usage of random mutagenesis, a library of 100,000,000 promoters was cloned upstream of a Yellow Fluorescent Protein (YFP) gene and screened through FACS for different promoter activities (cells were binned according to their YFP expression levels). Each bin was then sequenced and a machine learning interpretable model was built with this data, allowing accurate prediction of the library and of independent test promoters that were designed de novo following the model rules. https://www.nature.com/articles/s41587-019-0315-8 In a similar approach using E. coli cells, Urtecho and colleagues (Urtecho et al., 2019) explored the combinatorial space of sigma70 promoter elements in E. coli a combinatorial library of promoter elements was generated, cloned upstream a GFP reporter gene, sorted into bins by FACS and sequenced (both DNA and RNA-seq) for establishing the genotype (promoter sequence)-phenotype(GFP expression bins) relationships. One could use this strategy to evolve not only constitutive promoters but also inducible promoters (see see Rohlihil et al., 2017 for the Engineering a Formaldehyde-Inducible Promoter and Yu et al., 2021 for the engineering of LacI based systems) towards different expression dynamics. https://pubs.acs.org/doi/10.1021/acs.biochem.7b01069 https://www.nature.com/articles/s41467-020-20094-3 https://pubs.acs.org/doi/10.1021/acssynbio.7b00114 Directed evolution of enzymes by linking the product to a biosensor Although linking enzyme mutant libraries to FPs for FACS-based directed evolution is not a straightforward task, many groups have achieved it through the adoption of in vivo Biosensors. These biosensors can be any molecular sensor (usually protein or RNA-based one) that will interact with the product of a specific reaction and modulate the expression of a FP according to the product concentration. The biggest challenge is to find/engingineer sensors that can detect specific metabolites (in the native cellular concentrations) and also possess a good dynamic range for reliably connecting the input (product concentration) to the output (FP production). A comprehensive review in this topic has been written by Lin and colleagues and will probably give you some inspiring ideas if you decide to work on this topic. https://www.sciencedirect.com/science/article/abs/pii/S0734975017300812 As an example of using a transcription factor to link the activity of an enzyme to the expression of a FP, let's consider the work of Kwon and collaborators (Kwon et al., 2018). In this study, the main goal was to change the substrate scope of a tryptophan-indole lyase from tryptophan-indole to tyrosine-phenol. The expression of the FP in E. coli cells was controlled by a phenol-inducible transcription factor (DmpR). Using this genetic circuit-based biosensor for detection of phenolic components, the substrate scope of a tryptophan-indole lyase was re-engineered by directed evolution towards the desired tyrosine-phenol-lyase with complete loss of the original activity. https://www.nature.com/articles/s41598-018-20943-8 RNA sensors have also been used to screen enzymes from directed evolution with improved activities. For example, Michener and Smolke (Michener and Smolke, 2012) have targeted yCDM1, an enzyme that is not very efficient in demethylating caffeine to theophylline. A RNA riboswitch was used as a theophylline biosensor. The RNA switch was placed in the 3\u2032 UTR region of a fluorescent reporter gene. If no theophylline was available, the poly-A tail of the mRNA was removed, leading to rapid degradation and low gene expression. Addition of the small molecule ligand favored a conformation in which the mRNA was stable and translation could proceed. Thus, the enzyme was mutagenized through EP-PCR and the RNA-based biosensor was used for screening with FACS. A mutant version of yCDM1 was obtained showing 33-fold increase in enzyme activity and 22-fold increase in selectivity. (Michener and Smolke, 2012). https://www.sciencedirect.com/science/article/abs/pii/S109671761200047X?via%3Dihub Directed evolution of RNA/DNA aptamers/switches If a biosensor for your system is not available, why not try to develop one through directed evolution? This strategy, although very laborious, has been adopted by many groups with a special focus on RNA-based sensors. The first class of RNA-based sensors we will see are Riboswitches. They are biosensors typically composed of an aptamer domain, which recognizes a specific ligand, and an expression platform that couples ligand binding to a change in the FP expression. A traditional example of riboswitch directed evolution was demonstrated by Sean and Gallivan (Sean & Gallivan, 2009). Libraries (theophylline aptamer, followed by a sequence of eight randomized bases, the RBS, and the red-fluorescent reporter gene DsRed) were generated through random primers and cloned into plasmids for in vivo expression in E. coli. The system was coupled to a FP in a way that FP expression was increased in the presence of theophylline through the exposure of the RBS region, which was previously \u201cmasked\u201d by the mRNA secondary structure. A more recent study by Page and colleagues (Page et al., 2018) using the same system has also generated novel theophylline riboswitches by coupling a dual genetic selection and FACS. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2615613/ https://pubs.acs.org/doi/10.1021/acssynbio.8b00099 The second class of RNA-based sensors are toehold switches, A toehold switch is an RNA fragment with a secondary hairpin structure that is used to regulate translation. The toehold sequence contains a strong ribosome binding site (RBS) and a start codon that is followed by the coding sequence of a reporter gene. In the absence of a complementary sequence, the toehold is in its native hairpin conformation acting as a translational repressor and preventing ribosomes from binding to the RBS and thus from translating the reporter gene downstream. In the presence of a single stranded trigger complementary to the stem of the hairpin, the switch unfolds and exposes the ribosome binding site and the start codon and translation can be initiated. In a very comprehensive study, Green and colleagues (Green et al., 2014) have designed and characterized libraries of Toehold Switches, ending up with 26 sensors that could be used together with very little crosstalk and high dynamic range for the detection of endogenous mRNA in E. coli and the building of genetic circuits. The researchers used the NUPACK nucleic acid sequence design package (Zadeh et al., 2011) to generate libraries of de-novo-designed translational activators satisfying their desired parameters followed by synthesis of the oligos, cloning and in vivo testing of the libraries through FACS. In a more recent study,Angenent-Mari and colleagues ( Angenent-Mari et al., 2020) have taken one step further, using Deep Neural Networks (DNNs) to predict toehold switch function as a canonical riboswitch model in synthetic biology. To facilitate DNN training, they synthesized and characterized in vivo a dataset of 91,534 toehold switches spanning 23 viral genomes and 906 human transcription factors. DNNs trained on nucleotide sequences outperformed previous state-of-the-art thermodynamic and kinetic models. https://www.sciencedirect.com/science/article/pii/S0092867414012896 https://www.nature.com/articles/s41467-020-18677-1 Entrapment of the substrate/product inside the cells An alternative to cell surface dis\u00adplay strategies and FP-based screening methods are approaches in which the fluorescent product is trapped within the cell (Yang and Withers, 2009). This strategy faces two main challenges: (i) the obtention of commercial fluorogenic substrates for that specific reaction and (ii) the retention of such molecules inside of the cell. In this context, before starting a project based on this approach, one has to check for the availability of commercial fluorogenic substrates that cannot diffuse to the extracellular environment. The entrapment is usually achieved when the size, polarity, or other chemical proper\u00adties of the substrate are modified, resulting in the retention of the product within the cell. As a successful example, Tan and colleagues (Tan et al., 2019) have improved the fucosylation catalytic efficiency of an \u03b11,3-FucT fucosidase by 14-fold after three rounds of directed evolution in E. coli. Two kinds of fluorescently labeled acceptor substrates (LacNAc derivatives) were designed and synthesized for cell entrapment. They were transported into the cell via the LacY transporter. The fucosylation reaction resulted in a trisaccharide product that accumulated inside of the cell as the LacY transport rate for such products was very low. Thus, fluorescence intensities of cells carried the information about the fucosylation efficiency allowing FACS-based screenings. Another possibility is to work with fluorogenic probes inside the cell that detect the substrate/product of the reaction. Sadler and colleagues (Sadler et al., 2018) have engineered a monoamine oxidase with improved activity towards a novel secondary amine substrate amine substrates based on the intracellular oxidation of a fluorogenic substrate by intracellular bacterial peroxidases. The authors expressed the amine oxidase variant library in E. coli and stained cells with a fluorogenic probe which is sensitive to oxidation by H2O2 (a byproduct of the monoamine oxidase reaction). The probe was introduced into cells with the help of freeze-thaw cycles and chemicals that increased membrane permeability. Finally, the drawback of substrate/product entrapment in the cell can also be overcome by the adoption of cell microencapsulation techniques that imitate natural cell compartmentalization as previously discussed in the Cell surface display section. As an example, a microdroplet-enabled FACS based screening strategy was also developed for improving cellulase activity. In this study, Ostafe et al. used double emulsions to encapsulate yeast cells expressing cellulase in microfluidic droplets (Ostafe et al., 2013). Glucose that was released by cellulose activity on carboxymethylcellulose substrate was detected via a hexose oxidase based coupled enzyme assay and enrichment of a positive population was demonstrated based on droplet fluorescence. https://advances.sciencemag.org/content/5/10/eaaw8451 https://pubs.rsc.org/en/content/articlelanding/2018/AN/C8AN00851E#!divAbstract In vitro compartmentalization (IVC) Microencapsulation can be performed in the absence of cells, directly producing the enzyme from the DNA library by in vitro protein translation. Such IVC offers the advantage of generating a large number of droplets per emulsion volume unit (>1010 in 1 mL of emul\u00adsion), coupled to the ease of preparing emulsions and their high stability to changes in temperature, pH, and salt concentrations (Aharoni et al., 2005). Additionally, IVC prevents the gene diversity loss derived from the cloning and transformation steps by in vitro protein translation of the DNA used to generate the mutant library; moreover, it reduces experimental time by skipping the cell growth steps associated with cloning, transformation, and protein production (Mart\u00ednez and Schwaneberg, 2013). Single-cell encapsulation https://pubs.acs.org/doi/pdf/10.1021/acssynbio.9b00103 Cells are the most straightforward way of protein production, yet they often lack the ability to take up the desired screening substrate or to retain the nascent product. They can be co-encapsulated with all compounds required for the screening reaction (substrates, cell lysis agents, buffer etc.) in an emulsion droplet and the enzyme of interest can be released from the cell in situ. This is an elegant approach, as it combines the advantages of cells and emulsion compartments: that is, the cells produce the enzyme; the emulsion retains the genotype\u2013 phenotype connection. Although high-throughput sorting rates are feasible with emulsions in a conventional flow cytometer or in custom-made chip devices, the restriction of compartmentalizing a maximum of one cell per emulsion droplet by Poisson\u2019s distribution causes most of the droplets to be empty. Therefore, the effective throughput is reduced. Nevertheless, from a sustainability point of view, microcompartments are superior to conventional assays, since only pico- or even femtoliters of reagents are used per sample as previously discussed by Agresti et al. Moreover, the compartmentalization of a single cell in such a small reaction volume typically results in high local enzyme concentrations during screening, which benefits the signal-to noise ratio. As previously discussed in the Fluorescent protein-based methods section, the stochastic nature of gene expression - phenotypic cell-to-cell variability - (Elowitz, 2002) can make FACS screenings misleading in some cases (Schaerli and Isalan, 2013). Imagine that due to noise, a single genotype (promoter sequence or synthetic circuit) can produce different fluorescence levels within the population. In this case, many cells will be sorted into different bins although having the same genotype. One way to tackle this problem is to use statistical methods after the sequencing step to find in which bin a single genotype is enriched (although it might be present in other bins). A second approach would be to select genotypes with high stochasticity, re-clone them and analyse the populational behaviour in both flow cytometry and plate reader. Lastly, an alternative method that has been gaining attention in recent years, is based on the gel encapsulation of microcolonies. With this technology, it is possible to use the high-throughput power of FACS for screening cell populations and circumventing the problem of high cell-to-cell variability (Weaver et al., 1991; Sahar et al., 1994; Zengler et al., 2002; Fischlechner et al., 2014; Meyer et al., 2015; Duarte et al., 2017). Protocol and application: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6047729/pdf/emss-78570.pdf https://sci-hub.se/https://pubs.acs.org/doi/pdf/10.1021/acssynbio.7b00111 Review: https://www.mdpi.com/2072-666X/10/11/734/htm","title":"Cell surface display"},{"location":"resources/FACS_FADS.html#introduction","text":"Two of the most common methods for high-throughput screening in directed evolution are the fluorescence-activated cell sorting (FACS) and, its more recent variation, the fluorescence-activated droplet sorting (FADS). While FACS cytometers can analyze and sort both cells and droplets (with or without cells), they cannot generate the latter. FADS cytometers, on the other hand, can generate droplets that will encapsulate cell-free mixtures or cells for subsequent analysis and sorting. Despite their differences, both systems are used for high-throughput screening of particles and we will mostly focus on FACS applications as they are more common/accessible among laboratories. FACS cytometers are complex instruments that can analyze the fluorescent characteristics of individual \u201cparticles\u201d (e.g., cells, liposomes, beads, emulsion droplets, or polymer shells) at extremely high event rates (~10^7 per hour), isolating those with the desired signal for the desired trait","title":"Introduction"},{"location":"resources/FACS_FADS.html#challenges","text":"The main bottleneck in the usage of these systems is that they require the linkage of a genotype (a nucleic acid sequence) to a phenotype (a functional feature like binding or catalytic activity) in an ultrahigh-throughput context (Griffiths and Tawfik, 2006). In other words, the activity of an evolved molecule must be somehow linked to an output that is detectable by the FACS machine (usually a fluorescence signal). Once detected, the particle is sorted and its content can then be sequenced for establishing the genotype-phenotype relationship. Creating experimental setups for these types of studies can be very difficult depending on the system one is working with. If you work with the directed evolution of fluorescent proteins, the signal is directly provided by your protein, however, if you work with metabolic enzymes, for example, you might have to use indirect methods, such as fluorogenic substrates (if available), transcription factors that detect the product of your reaction, being induced by it, and activate the expression of a fluorescent protein, etc. Thus, for screenings involving indirect relationships, things can get a way more complicated. We will see below many examples addressing these challenges and, hopefully, they will serve as inspiration for your project! Firstly, we will briefly explore different FACS-based screening tech\u00adniques in directed evolution. They can be divided into six distinct categories according to the methods used to link the genotype and phenotype: - cell surface display (or in vivo display) of enzymes, - fluorescent protein-based methods, - entrapment of the product inside the cells, - in vitro compartmentalization, - single-cell/microcolony compartmentalization","title":"Challenges"},{"location":"resources/FACS_FADS.html#cell-surface-display","text":"This technique is based on the attachment of heterologous enzymes to the surface of microorganisms (the most common are: bacterial surface display (van Bloois et al., 2011)), yeast (yeast surface display (Boder and Wittrup, 1997)) or phages (phage surface display (Fernandez-Gacio et al., 2003)). Cell display offers ultra\u00adhigh-throughput capacity of up to 10^9 clones per round and allows direct contact between the enzyme and the added substrate, without requiring dif\u00adfusion through the cell membrane. However, this accessibility is at the same time a major drawback as the product is also freely diffusible. This drawback has been overcome by the development of cell microencapsulation techniques that imitate natural cell compartmentalization e.g., including the target enzyme in microemulsion droplets along with the substrate and products (Griffiths and Tawfik, 2006). The main advantages of the cell-in-droplet approach are its high-throughput capacity (~10^9 clones per round) and the reduced volume of the microemulsions (typically ~5 femtoliters), such that little substrate is needed (Aharoni et al., 2005). Very recently, novel screening platforms using polymer encapsulated cells have been developed like: (1) the cellular high-throughput encapsulation, solubilization and screening (CHESS) method to allow the encapsulation of libraries of approximately 10^8 mutants in a polymer to form cell-like microcapsules (Yong and Scott, 2015), (2) the polymer shell method that relies on fluorescent hydrogel formation around E. coli cells (Pitzler et al., 2014) or yeast cells (Vanella et al,. 2019).","title":"Cell surface display"},{"location":"resources/FACS_FADS.html#in-vitro-display","text":"This method is based on the synthesis of the target protein through an in vitro translation system so that the genotype-phenotype linkage is achieved using molecules like ribosomes (ribosome display), puromycin (mRNA display), and the DNA replication initiator pro\u00adtein RepA (CIS display). More recently, novel in vitro display approaches have been reported that include liposome and megavalent bead display. Liposome display enables membrane proteins to be engineered, and it relies on their display on liposome membranes through the transcription and trans\u00adlation of a single DNA molecule using an encapsulated cell-free transla\u00adtion system (Fujii et al., 2014). Megavalent bead surface display allows tailor-made protein binders by laboratory evolution. In this method, the gene that encodes the protein of interest is attached to a bead by strong noncova\u00adlent interactions and the corresponding protein is displayed via a covalent thioether bond on the DNA (Diamante et al., 2013).","title":"In vitro display"},{"location":"resources/FACS_FADS.html#fluorescent-protein-based-methods","text":"Due to their fluorescent properties, GFP and other fluorescent proteins (FPs) variants are ideal candidates for single-cell fluores\u00adcence analysis (you can find more about them in this amazingly resourceful website: https://www.fpbase.org/) and, therefore, they can be used in flow cytometry screening (Yang and Withers, 2009). The main advantages of GFP-based screening methods are their very high-throughput (\u223c10 7\u201310 8 clones per round) and the lack of expensive fluorescent substrates. On the other hand, the biggest challenge in this approach is to link the enzymatic func\u00adtion or activity of interest to the FPs expression, which can be very difficult depending on the studied protein. While the results achieved using this flow cytometry-based screen are promising, we must emphasize that flow cytometry is unlikely to serve as a standalone method. It is well-known that individual cells from bacterial cultures composed of a single genotype may display a range of phenotypes attributable to the stochastic nature of gene expression. As one considers that the selection criteria in flow cytometry experiments are determined by the phenotype of an individual cell, the inherent population heterogeneity of a bacterial culture, especially one containing a library of genotypes, makes the task of counter-selecting for one phenotype against another extremely challenging. For example, isolating a single bacterium displaying a low level of fluorescence does not guarantee that a culture grown from that single bacterium will possess, as a whole, those same fluorescence characteristics. With this in mind, the need for reinforcing a single-cell enrichment strategy with traditional assays, measuring average expression levels for an entire population, should be clear. As FP-based methods are becoming more and more common, a few examples for the directed evolution of different molecules can be found below: - Transcription factor directed evolution (usually targeted to ligand and/or DNA binding domains) Tang and colleagues evolved a XylR regulator towards improved operating range, producing a more linear response of the system to the xylose inducer. In other words, a system which was originally considered a bistable molecular switch (digital) was evolved into an analogic one. In this example, the link between genotype and protein function was established by a transcriptional interaction: XylR directly regulated the expression of a GFP gene and mutations affecting the function of the regulator could be readily tracked by the analysis and selection of cells with fluorescence levels that were different from the original system. https://pubs.acs.org/doi/10.1021/acssynbio.0c00225 In a different approach, Machado and colleagues evolved a repressor called PcaV to act as a biosensor for hydroxyl-substituted benzoic acids (such as vanillin and other closely related aromatic aldehydes). The overall system was similar to the one discussed above, linking protein function to fluorescent output through a transcriptional system directly repressed by PcaV which was alleviated by the usage of inducing molecules. After the generation of PcaV mutants, cells were screened through multiple rounds of counter-selection using FACS. In the first round, libraries were uninduced and selected for low fluorescence levels in order to remove non-functional repressors (cells expressing GFP without the inducer probably had non-functional repressors). On the second round, the previously sorted libraries were induced with the new molecule e.g. vanillin (that did not induce the original PcaV) and selected for GFP expression (functional mutants responding to vanillin). On the third round, the uninduced library was selected for cells with low fluorescence levels (this time with a less stringent cutoff than the first round). Finally, cells were again induced with the new molecule and selected for the most fluorescent cells. With this approach, a new biosensor capable of detecting vanillin and other related molecules was generated. https://jbioleng.biomedcentral.com/articles/10.1186/s13036-019-0214-z In our last example, a good combination of dry and wetlab was employed. The IPTG responsive Transcription Factor LacI has been computationally redesigned and mutated to recognize four new non-native inducers (Taylor et al., 2016). This study is a good example of how the combination of computation-guided mutagenesis based on the Rosetta algorithm and different diversification techniques (such as epPCR and saturation mutagenesis) can accelerate the discovery/generation of new molecular functions. In a counter-selection round, the mutant libraries were pre-screened for retained ability to repress a TolC reporter (a porin that allows entry of toxic colicin E1) by growth enrichment in the absence of inducers but in the presence of colicin E1. The enriched LacI libraries were then positively screened by FACS for their ability to activate production of GFP upon induction with different sugars, resulting in variants of LacI that were responsive to fucose, gentiobiose, lactitol and sucralose (Taylor et al., 2016). In this instance, no active counter-screening was performed against activation by IPTG, so nearly all mutants retained their ability to respond to IPTG, a phenotype that was reduced for some designs upon shuffling of mutations for activity screening. https://academic.oup.com/nar/article/48/1/e3/5645005?login=true - Evolution of promoters/cis-regulatory regions For the study and directed evolution of promoter and cis-regulatory regions, a recent and extremely powerful strategy is the Sort-Seq. It relies on the power of FACS for sorting individual cells from libraries of regulatory sequences (controlling the expression of a FP) into different bins, according to their fluorescence levels. Later, each bin is sequenced through and the pool of regulatory sequences in each bin is analysed for the understanding, prediction and re-engineering of sequence-function (promoter-expression) relationships, https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-016-2533-5 https://www.annualreviews.org/doi/full/10.1146/annurev-genom-083118-014845 Although not exactly a directed evolution project, the work from de Boer and colleagues (de Boer et al., 2019) provides an insightful resource for the generation and study of promoter libraries in yeast. Through the usage of random mutagenesis, a library of 100,000,000 promoters was cloned upstream of a Yellow Fluorescent Protein (YFP) gene and screened through FACS for different promoter activities (cells were binned according to their YFP expression levels). Each bin was then sequenced and a machine learning interpretable model was built with this data, allowing accurate prediction of the library and of independent test promoters that were designed de novo following the model rules. https://www.nature.com/articles/s41587-019-0315-8 In a similar approach using E. coli cells, Urtecho and colleagues (Urtecho et al., 2019) explored the combinatorial space of sigma70 promoter elements in E. coli a combinatorial library of promoter elements was generated, cloned upstream a GFP reporter gene, sorted into bins by FACS and sequenced (both DNA and RNA-seq) for establishing the genotype (promoter sequence)-phenotype(GFP expression bins) relationships. One could use this strategy to evolve not only constitutive promoters but also inducible promoters (see see Rohlihil et al., 2017 for the Engineering a Formaldehyde-Inducible Promoter and Yu et al., 2021 for the engineering of LacI based systems) towards different expression dynamics. https://pubs.acs.org/doi/10.1021/acs.biochem.7b01069 https://www.nature.com/articles/s41467-020-20094-3 https://pubs.acs.org/doi/10.1021/acssynbio.7b00114 Directed evolution of enzymes by linking the product to a biosensor Although linking enzyme mutant libraries to FPs for FACS-based directed evolution is not a straightforward task, many groups have achieved it through the adoption of in vivo Biosensors. These biosensors can be any molecular sensor (usually protein or RNA-based one) that will interact with the product of a specific reaction and modulate the expression of a FP according to the product concentration. The biggest challenge is to find/engingineer sensors that can detect specific metabolites (in the native cellular concentrations) and also possess a good dynamic range for reliably connecting the input (product concentration) to the output (FP production). A comprehensive review in this topic has been written by Lin and colleagues and will probably give you some inspiring ideas if you decide to work on this topic. https://www.sciencedirect.com/science/article/abs/pii/S0734975017300812 As an example of using a transcription factor to link the activity of an enzyme to the expression of a FP, let's consider the work of Kwon and collaborators (Kwon et al., 2018). In this study, the main goal was to change the substrate scope of a tryptophan-indole lyase from tryptophan-indole to tyrosine-phenol. The expression of the FP in E. coli cells was controlled by a phenol-inducible transcription factor (DmpR). Using this genetic circuit-based biosensor for detection of phenolic components, the substrate scope of a tryptophan-indole lyase was re-engineered by directed evolution towards the desired tyrosine-phenol-lyase with complete loss of the original activity. https://www.nature.com/articles/s41598-018-20943-8 RNA sensors have also been used to screen enzymes from directed evolution with improved activities. For example, Michener and Smolke (Michener and Smolke, 2012) have targeted yCDM1, an enzyme that is not very efficient in demethylating caffeine to theophylline. A RNA riboswitch was used as a theophylline biosensor. The RNA switch was placed in the 3\u2032 UTR region of a fluorescent reporter gene. If no theophylline was available, the poly-A tail of the mRNA was removed, leading to rapid degradation and low gene expression. Addition of the small molecule ligand favored a conformation in which the mRNA was stable and translation could proceed. Thus, the enzyme was mutagenized through EP-PCR and the RNA-based biosensor was used for screening with FACS. A mutant version of yCDM1 was obtained showing 33-fold increase in enzyme activity and 22-fold increase in selectivity. (Michener and Smolke, 2012). https://www.sciencedirect.com/science/article/abs/pii/S109671761200047X?via%3Dihub Directed evolution of RNA/DNA aptamers/switches If a biosensor for your system is not available, why not try to develop one through directed evolution? This strategy, although very laborious, has been adopted by many groups with a special focus on RNA-based sensors. The first class of RNA-based sensors we will see are Riboswitches. They are biosensors typically composed of an aptamer domain, which recognizes a specific ligand, and an expression platform that couples ligand binding to a change in the FP expression. A traditional example of riboswitch directed evolution was demonstrated by Sean and Gallivan (Sean & Gallivan, 2009). Libraries (theophylline aptamer, followed by a sequence of eight randomized bases, the RBS, and the red-fluorescent reporter gene DsRed) were generated through random primers and cloned into plasmids for in vivo expression in E. coli. The system was coupled to a FP in a way that FP expression was increased in the presence of theophylline through the exposure of the RBS region, which was previously \u201cmasked\u201d by the mRNA secondary structure. A more recent study by Page and colleagues (Page et al., 2018) using the same system has also generated novel theophylline riboswitches by coupling a dual genetic selection and FACS. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2615613/ https://pubs.acs.org/doi/10.1021/acssynbio.8b00099 The second class of RNA-based sensors are toehold switches, A toehold switch is an RNA fragment with a secondary hairpin structure that is used to regulate translation. The toehold sequence contains a strong ribosome binding site (RBS) and a start codon that is followed by the coding sequence of a reporter gene. In the absence of a complementary sequence, the toehold is in its native hairpin conformation acting as a translational repressor and preventing ribosomes from binding to the RBS and thus from translating the reporter gene downstream. In the presence of a single stranded trigger complementary to the stem of the hairpin, the switch unfolds and exposes the ribosome binding site and the start codon and translation can be initiated. In a very comprehensive study, Green and colleagues (Green et al., 2014) have designed and characterized libraries of Toehold Switches, ending up with 26 sensors that could be used together with very little crosstalk and high dynamic range for the detection of endogenous mRNA in E. coli and the building of genetic circuits. The researchers used the NUPACK nucleic acid sequence design package (Zadeh et al., 2011) to generate libraries of de-novo-designed translational activators satisfying their desired parameters followed by synthesis of the oligos, cloning and in vivo testing of the libraries through FACS. In a more recent study,Angenent-Mari and colleagues ( Angenent-Mari et al., 2020) have taken one step further, using Deep Neural Networks (DNNs) to predict toehold switch function as a canonical riboswitch model in synthetic biology. To facilitate DNN training, they synthesized and characterized in vivo a dataset of 91,534 toehold switches spanning 23 viral genomes and 906 human transcription factors. DNNs trained on nucleotide sequences outperformed previous state-of-the-art thermodynamic and kinetic models. https://www.sciencedirect.com/science/article/pii/S0092867414012896 https://www.nature.com/articles/s41467-020-18677-1","title":"Fluorescent protein-based methods"},{"location":"resources/FACS_FADS.html#entrapment-of-the-substrateproduct-inside-the-cells","text":"An alternative to cell surface dis\u00adplay strategies and FP-based screening methods are approaches in which the fluorescent product is trapped within the cell (Yang and Withers, 2009). This strategy faces two main challenges: (i) the obtention of commercial fluorogenic substrates for that specific reaction and (ii) the retention of such molecules inside of the cell. In this context, before starting a project based on this approach, one has to check for the availability of commercial fluorogenic substrates that cannot diffuse to the extracellular environment. The entrapment is usually achieved when the size, polarity, or other chemical proper\u00adties of the substrate are modified, resulting in the retention of the product within the cell. As a successful example, Tan and colleagues (Tan et al., 2019) have improved the fucosylation catalytic efficiency of an \u03b11,3-FucT fucosidase by 14-fold after three rounds of directed evolution in E. coli. Two kinds of fluorescently labeled acceptor substrates (LacNAc derivatives) were designed and synthesized for cell entrapment. They were transported into the cell via the LacY transporter. The fucosylation reaction resulted in a trisaccharide product that accumulated inside of the cell as the LacY transport rate for such products was very low. Thus, fluorescence intensities of cells carried the information about the fucosylation efficiency allowing FACS-based screenings. Another possibility is to work with fluorogenic probes inside the cell that detect the substrate/product of the reaction. Sadler and colleagues (Sadler et al., 2018) have engineered a monoamine oxidase with improved activity towards a novel secondary amine substrate amine substrates based on the intracellular oxidation of a fluorogenic substrate by intracellular bacterial peroxidases. The authors expressed the amine oxidase variant library in E. coli and stained cells with a fluorogenic probe which is sensitive to oxidation by H2O2 (a byproduct of the monoamine oxidase reaction). The probe was introduced into cells with the help of freeze-thaw cycles and chemicals that increased membrane permeability. Finally, the drawback of substrate/product entrapment in the cell can also be overcome by the adoption of cell microencapsulation techniques that imitate natural cell compartmentalization as previously discussed in the Cell surface display section. As an example, a microdroplet-enabled FACS based screening strategy was also developed for improving cellulase activity. In this study, Ostafe et al. used double emulsions to encapsulate yeast cells expressing cellulase in microfluidic droplets (Ostafe et al., 2013). Glucose that was released by cellulose activity on carboxymethylcellulose substrate was detected via a hexose oxidase based coupled enzyme assay and enrichment of a positive population was demonstrated based on droplet fluorescence. https://advances.sciencemag.org/content/5/10/eaaw8451 https://pubs.rsc.org/en/content/articlelanding/2018/AN/C8AN00851E#!divAbstract","title":"Entrapment of the substrate/product inside the cells"},{"location":"resources/FACS_FADS.html#in-vitro-compartmentalization-ivc","text":"Microencapsulation can be performed in the absence of cells, directly producing the enzyme from the DNA library by in vitro protein translation. Such IVC offers the advantage of generating a large number of droplets per emulsion volume unit (>1010 in 1 mL of emul\u00adsion), coupled to the ease of preparing emulsions and their high stability to changes in temperature, pH, and salt concentrations (Aharoni et al., 2005). Additionally, IVC prevents the gene diversity loss derived from the cloning and transformation steps by in vitro protein translation of the DNA used to generate the mutant library; moreover, it reduces experimental time by skipping the cell growth steps associated with cloning, transformation, and protein production (Mart\u00ednez and Schwaneberg, 2013).","title":"In vitro compartmentalization (IVC)"},{"location":"resources/FACS_FADS.html#single-cell-encapsulation","text":"https://pubs.acs.org/doi/pdf/10.1021/acssynbio.9b00103 Cells are the most straightforward way of protein production, yet they often lack the ability to take up the desired screening substrate or to retain the nascent product. They can be co-encapsulated with all compounds required for the screening reaction (substrates, cell lysis agents, buffer etc.) in an emulsion droplet and the enzyme of interest can be released from the cell in situ. This is an elegant approach, as it combines the advantages of cells and emulsion compartments: that is, the cells produce the enzyme; the emulsion retains the genotype\u2013 phenotype connection. Although high-throughput sorting rates are feasible with emulsions in a conventional flow cytometer or in custom-made chip devices, the restriction of compartmentalizing a maximum of one cell per emulsion droplet by Poisson\u2019s distribution causes most of the droplets to be empty. Therefore, the effective throughput is reduced. Nevertheless, from a sustainability point of view, microcompartments are superior to conventional assays, since only pico- or even femtoliters of reagents are used per sample as previously discussed by Agresti et al. Moreover, the compartmentalization of a single cell in such a small reaction volume typically results in high local enzyme concentrations during screening, which benefits the signal-to noise ratio. As previously discussed in the Fluorescent protein-based methods section, the stochastic nature of gene expression - phenotypic cell-to-cell variability - (Elowitz, 2002) can make FACS screenings misleading in some cases (Schaerli and Isalan, 2013). Imagine that due to noise, a single genotype (promoter sequence or synthetic circuit) can produce different fluorescence levels within the population. In this case, many cells will be sorted into different bins although having the same genotype. One way to tackle this problem is to use statistical methods after the sequencing step to find in which bin a single genotype is enriched (although it might be present in other bins). A second approach would be to select genotypes with high stochasticity, re-clone them and analyse the populational behaviour in both flow cytometry and plate reader. Lastly, an alternative method that has been gaining attention in recent years, is based on the gel encapsulation of microcolonies. With this technology, it is possible to use the high-throughput power of FACS for screening cell populations and circumventing the problem of high cell-to-cell variability (Weaver et al., 1991; Sahar et al., 1994; Zengler et al., 2002; Fischlechner et al., 2014; Meyer et al., 2015; Duarte et al., 2017).","title":"Single-cell encapsulation"},{"location":"resources/FACS_FADS.html#protocol-and-application","text":"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6047729/pdf/emss-78570.pdf https://sci-hub.se/https://pubs.acs.org/doi/pdf/10.1021/acssynbio.7b00111","title":"Protocol and application:"},{"location":"resources/FACS_FADS.html#review","text":"https://www.mdpi.com/2072-666X/10/11/734/htm","title":"Review:"},{"location":"resources/PACE_PANCE.html","text":"Phage-assisted continuous evolution (PACE) and Phage-assisted noncontinuous evolution (PANCE) Introduction Phage-assisted continuous evolution (PACE) and its noncontinuous variant (PANCE), developed by Esvelt et al. 2011 1 . This method offers the possibility to continuously mutate and select proteins with the help of M13 bacteriophages. Effectively, within the PACE process M13 is allowed to propagate whenever the gene of interest (GOI), which is incorporated into the phage genome, is active. PACE is one of a few directed evolution methods which are continuous. Non-continuous evolution methods usually start with the diversification of the target, then functional mutants from the library are selected. These functional mutants can then be used as a basis for the next round of diversification to improve their properties. Continuous evolution methods enable an uninterrupted diversification and selection of the target and thus promise faster results. For PACE more than 100 rounds of selection can be performed within 2 weeks (Miller et al. 2020). So why don\u2019t we use continuous evolution methods all the time? Continuous evolution methods are usually very complex to set-up. The crucial condition to make continuous evolution work is to apply selection pressure onto the GOI and not to the host organism. Some methods do so by introducing targeted mutagenesis methods (e.g. EvolvR (Halperin et al. 2018) or error-prone DNA-polymerases (Camps et al. 2013) or T7 RNA-polymerase systems (https://www.nature.com/articles/s41587-019-0331-8)). In PACE, the target gene is encoded by an M13 phage and the selection pressure is applied to Escherichia coli cells (Badran et al. 2015). So how does PACE work? For PACE M13 bacteriophages are used, the same are used in Phage Display(link). M13 phages infect E. coli and establish a \u2018chronic infection\u2019 with an average generation time around 15 min (Barbas et al. 2001). The phage consists of a single-strand DNA genome encapsulated by five coat proteins. The coat protein relevant for PACE is pIII, which is essential for phage infectivity. The basic principle of PACE is to replace the CDS of the pIII coat proteins by the CDS of the target gene which shall be evolved. The pIII gene is located on an accessory plasmid and its expression is activated in response to the activity of the protein of interest. Thus the only phage that bears a functioning protein of interest is allowed to propagate in the culture. Furthermore, the E. coli cells carry a mutagenesis plasmid which enables ongoing mutation of the selection phage. Through this set-up, two possible scenarios can happen when the selection phage infects a cell: The selection phage already carries a functional target gene or the mutation plasmid causes mutations which are beneficial for target functionality resulting in the target gene enabling pIII expression and infectious phages are produced and assembled, which can then infect other cells The selection phage carries a non-functional target gene or the mutation plasmid introduces mutations which inhibit the target functionality resulting in the target gene not enabling pIII expression and no infectious phages are produced In theory, PACE does not represent a method for targeted mutation since usually whole-genome mutators are used. However, due to the fast replication rate of the phages, the phages have a higher mutation rate and even if a selection plasmid is mutated and \u201cwrong\u201d phages are produced, these will be selected in the cells they infect next. PACE is usually performed in a continuous cultivation set-up. In this set-up, the E. coli host cells are cultivated as a fed-batch cultivation and these host cells are used as feed for the actual cultivation where the evolution happens \u2013 the lagoon. In the lagoon, the phages are able to replicate under a continuous feed of the host cells and a continuous outflow of waste (phages and cells). To better understand the basic principle, we will take a look at an example project using PACE: The evolution of a T7-RNA polymerase to recognize another promoter described by Esvelt et al. 2011. To evolve the polymerase, the CDS of pIII was replaced by the CDS of the T7-polymerase. The plasmid responsible for the selection pressure carried the CDS of pIII downstream of a T3/T7 hybrid promoter. The selection phages are replicated using a strain that can express pIII, producing functional phages with genomes encoding the T7-RNA polymerase CDS. These phages can then infect the cells carrying the plasmid with pIII under the control of the T3/T7 hybrid promoter. If the mutation plasmid introduces mutations that enable the polymerase to recognize the new promoter, pIII is expressed and functional phages are assembled. These phages can then infect new host cells and will be mutated and selected again. Next to the T7-RNA polymerase, directed evolution using PACE has been used to evolve for example TALE array proteins (Hubbard et al. 2015), Cas9 variants (Hu et al. 2018; Miller et al. 2020), protein-protein interactions using a two-hybrid system (Badran et al. 2016), tRNA/aminoacyl-synthetases (Bryson et al. 2017), and base-editors (Thuronyi et al. 2019). So what are the requirements and challenges using PACE to evolve your protein of choice? A very detailed protocol about requirements, how to set-up, and troubleshoot PACE (and PANCE) experiments is published by Miller et al. 2020. In short: The crucial condition to use PACE is that the functionality of the target protein needs to be linkable to pIII expression. Furthermore, the start of the directed evolution process can pose a challenge. When the target protein has little or no activity, even after mutation by the selection plasmid, the phages can be washed out of the continuous system. In this case, an adaption of the selection pressure or a switch to phage-assisted non-continuous evolution (PANCE) are possible choices. PANCE, in general, is probably the easier method when getting started with phage-assisted evolution, since it avoids the set-up of the continuous cultivation set-up. References Badran, A. H. & Liu, D. R. In vivo continuous directed evolution. Curr. Opin. Chem. Biol. 24, 1\u201310 (2015) Badran, A. H. et al. Continuous evolution of Bacillus thuringiensis toxins overcomes insect resistance. Nature 533, 58\u201363 (2016) Barbas, C. F. Phage Display: A Laboratory Manual. Cold Spring Harbor Laboratory Press (2001) Bryson, D. I. et al. Continuous directed evolution of aminoacyl-tRNA synthetases. Nat. Chem. Biol. 13, 1253\u20131260 (2017) Camps, M., Naukkarinen, J., Johnson, B. P & Loeb, L. A. Targeted gene evolution in Escherichia coli using a highly error-prone DNA polymerase I. PNAS 100 (17), 9727-9732 (2003) Halperin, S. O., Tou, C. J., Modavi, C., Schaffer, D. V. &Dueber, J. E. CRISPR-guided DNA polymerases enable diversification of all nucleotides in a tunable window. Nature 560, 248-525 (2018) Hu, J. H. et al. Evolved Cas9 variants with broad PAM compatibility and high DNA specificity. Nature 556, 57\u201363 (2018) Hubbard, B. P. et al. Continuous directed evolution of DNA-binding proteins to improve TALEN specificity. Nat. Methods 12, 939\u2013942 (2015) Miller, S. M., Wang, T. & Liu, D. R. Phage-assisted continuous and non-continuous evolution. Nature Protocols 15, 4101-4127 (2020) Miller, S. M. et al. Continuous evolution of SpCas9 variants compatible with non-G PAMs. Nat. Biotechnol. 38, 471\u2013481 (2020) Thuronyi, B. W. et al. Continuous evolution of base editors with expanded target compatibility and improved activity. Nat. Biotechnol. 37, 1070\u20131079 (2019) Esvelt, K. M., Carlson, J. C. & Liu, D. R. A system for the continuous directed evolution of biomolecules. Nature 472, 499\u2013503 (2011) \u21a9","title":"PACE"},{"location":"resources/PACE_PANCE.html#phage-assisted-continuous-evolution-pace-and-phage-assisted-noncontinuous-evolution-pance","text":"","title":"Phage-assisted continuous evolution (PACE) and Phage-assisted noncontinuous evolution (PANCE)"},{"location":"resources/PACE_PANCE.html#introduction","text":"Phage-assisted continuous evolution (PACE) and its noncontinuous variant (PANCE), developed by Esvelt et al. 2011 1 . This method offers the possibility to continuously mutate and select proteins with the help of M13 bacteriophages. Effectively, within the PACE process M13 is allowed to propagate whenever the gene of interest (GOI), which is incorporated into the phage genome, is active. PACE is one of a few directed evolution methods which are continuous. Non-continuous evolution methods usually start with the diversification of the target, then functional mutants from the library are selected. These functional mutants can then be used as a basis for the next round of diversification to improve their properties. Continuous evolution methods enable an uninterrupted diversification and selection of the target and thus promise faster results. For PACE more than 100 rounds of selection can be performed within 2 weeks (Miller et al. 2020). So why don\u2019t we use continuous evolution methods all the time? Continuous evolution methods are usually very complex to set-up. The crucial condition to make continuous evolution work is to apply selection pressure onto the GOI and not to the host organism. Some methods do so by introducing targeted mutagenesis methods (e.g. EvolvR (Halperin et al. 2018) or error-prone DNA-polymerases (Camps et al. 2013) or T7 RNA-polymerase systems (https://www.nature.com/articles/s41587-019-0331-8)). In PACE, the target gene is encoded by an M13 phage and the selection pressure is applied to Escherichia coli cells (Badran et al. 2015). So how does PACE work? For PACE M13 bacteriophages are used, the same are used in Phage Display(link). M13 phages infect E. coli and establish a \u2018chronic infection\u2019 with an average generation time around 15 min (Barbas et al. 2001). The phage consists of a single-strand DNA genome encapsulated by five coat proteins. The coat protein relevant for PACE is pIII, which is essential for phage infectivity. The basic principle of PACE is to replace the CDS of the pIII coat proteins by the CDS of the target gene which shall be evolved. The pIII gene is located on an accessory plasmid and its expression is activated in response to the activity of the protein of interest. Thus the only phage that bears a functioning protein of interest is allowed to propagate in the culture. Furthermore, the E. coli cells carry a mutagenesis plasmid which enables ongoing mutation of the selection phage. Through this set-up, two possible scenarios can happen when the selection phage infects a cell: The selection phage already carries a functional target gene or the mutation plasmid causes mutations which are beneficial for target functionality resulting in the target gene enabling pIII expression and infectious phages are produced and assembled, which can then infect other cells The selection phage carries a non-functional target gene or the mutation plasmid introduces mutations which inhibit the target functionality resulting in the target gene not enabling pIII expression and no infectious phages are produced In theory, PACE does not represent a method for targeted mutation since usually whole-genome mutators are used. However, due to the fast replication rate of the phages, the phages have a higher mutation rate and even if a selection plasmid is mutated and \u201cwrong\u201d phages are produced, these will be selected in the cells they infect next. PACE is usually performed in a continuous cultivation set-up. In this set-up, the E. coli host cells are cultivated as a fed-batch cultivation and these host cells are used as feed for the actual cultivation where the evolution happens \u2013 the lagoon. In the lagoon, the phages are able to replicate under a continuous feed of the host cells and a continuous outflow of waste (phages and cells). To better understand the basic principle, we will take a look at an example project using PACE: The evolution of a T7-RNA polymerase to recognize another promoter described by Esvelt et al. 2011. To evolve the polymerase, the CDS of pIII was replaced by the CDS of the T7-polymerase. The plasmid responsible for the selection pressure carried the CDS of pIII downstream of a T3/T7 hybrid promoter. The selection phages are replicated using a strain that can express pIII, producing functional phages with genomes encoding the T7-RNA polymerase CDS. These phages can then infect the cells carrying the plasmid with pIII under the control of the T3/T7 hybrid promoter. If the mutation plasmid introduces mutations that enable the polymerase to recognize the new promoter, pIII is expressed and functional phages are assembled. These phages can then infect new host cells and will be mutated and selected again. Next to the T7-RNA polymerase, directed evolution using PACE has been used to evolve for example TALE array proteins (Hubbard et al. 2015), Cas9 variants (Hu et al. 2018; Miller et al. 2020), protein-protein interactions using a two-hybrid system (Badran et al. 2016), tRNA/aminoacyl-synthetases (Bryson et al. 2017), and base-editors (Thuronyi et al. 2019). So what are the requirements and challenges using PACE to evolve your protein of choice? A very detailed protocol about requirements, how to set-up, and troubleshoot PACE (and PANCE) experiments is published by Miller et al. 2020. In short: The crucial condition to use PACE is that the functionality of the target protein needs to be linkable to pIII expression. Furthermore, the start of the directed evolution process can pose a challenge. When the target protein has little or no activity, even after mutation by the selection plasmid, the phages can be washed out of the continuous system. In this case, an adaption of the selection pressure or a switch to phage-assisted non-continuous evolution (PANCE) are possible choices. PANCE, in general, is probably the easier method when getting started with phage-assisted evolution, since it avoids the set-up of the continuous cultivation set-up.","title":"Introduction"},{"location":"resources/PACE_PANCE.html#references","text":"Badran, A. H. & Liu, D. R. In vivo continuous directed evolution. Curr. Opin. Chem. Biol. 24, 1\u201310 (2015) Badran, A. H. et al. Continuous evolution of Bacillus thuringiensis toxins overcomes insect resistance. Nature 533, 58\u201363 (2016) Barbas, C. F. Phage Display: A Laboratory Manual. Cold Spring Harbor Laboratory Press (2001) Bryson, D. I. et al. Continuous directed evolution of aminoacyl-tRNA synthetases. Nat. Chem. Biol. 13, 1253\u20131260 (2017) Camps, M., Naukkarinen, J., Johnson, B. P & Loeb, L. A. Targeted gene evolution in Escherichia coli using a highly error-prone DNA polymerase I. PNAS 100 (17), 9727-9732 (2003) Halperin, S. O., Tou, C. J., Modavi, C., Schaffer, D. V. &Dueber, J. E. CRISPR-guided DNA polymerases enable diversification of all nucleotides in a tunable window. Nature 560, 248-525 (2018) Hu, J. H. et al. Evolved Cas9 variants with broad PAM compatibility and high DNA specificity. Nature 556, 57\u201363 (2018) Hubbard, B. P. et al. Continuous directed evolution of DNA-binding proteins to improve TALEN specificity. Nat. Methods 12, 939\u2013942 (2015) Miller, S. M., Wang, T. & Liu, D. R. Phage-assisted continuous and non-continuous evolution. Nature Protocols 15, 4101-4127 (2020) Miller, S. M. et al. Continuous evolution of SpCas9 variants compatible with non-G PAMs. Nat. Biotechnol. 38, 471\u2013481 (2020) Thuronyi, B. W. et al. Continuous evolution of base editors with expanded target compatibility and improved activity. Nat. Biotechnol. 37, 1070\u20131079 (2019) Esvelt, K. M., Carlson, J. C. & Liu, D. R. A system for the continuous directed evolution of biomolecules. Nature 472, 499\u2013503 (2011) \u21a9","title":"References"},{"location":"resources/binders.html","text":"Selection for binders in vitro In the case of selection in vivo , genotype (plasmid or genomic trait) is naturally linked with the phenotype in the cell. Selection in vitro necessitates the creation of such link. A multitude of such selection methods have been developed where selected molecules are physically linked to its gene: Via translating ribosome in the ribosome display Via puromycin linker in the mRNA and cDNA display Via an auxiliary protein RepA in CIS display Being entrapped in the vesicle as in compartmentalized self-replication (CSR) Being entrapped in the vesicle and the bead as in Compartmentalized bead labelling (SBL) The in vitro selection methods have the following advantages: Libraries with up to 10^15 mutants can be selected (except in those where DNA is entrapped in vesicles, where this diversity is down to 10^9 as only a single DNA molecule per vesicle is allowed) in vitro amplification conveniently integrate random mutagenesis into the selection procedure The outcomes may be least biased in copmarison to in vivo methods where selection is affected by the physiological state of the cell Selection of unnatural polymers which cannot be replicated in cells such as XNAs is possible. With that, except for CSR and SBL protocols, all these methods are typically used in selecting binders. And as far as literature goes, only rarely used in the selection of enzymatic activities.","title":"Selection of binders"},{"location":"resources/binders.html#selection-for-binders-in-vitro","text":"In the case of selection in vivo , genotype (plasmid or genomic trait) is naturally linked with the phenotype in the cell. Selection in vitro necessitates the creation of such link. A multitude of such selection methods have been developed where selected molecules are physically linked to its gene: Via translating ribosome in the ribosome display Via puromycin linker in the mRNA and cDNA display Via an auxiliary protein RepA in CIS display Being entrapped in the vesicle as in compartmentalized self-replication (CSR) Being entrapped in the vesicle and the bead as in Compartmentalized bead labelling (SBL) The in vitro selection methods have the following advantages: Libraries with up to 10^15 mutants can be selected (except in those where DNA is entrapped in vesicles, where this diversity is down to 10^9 as only a single DNA molecule per vesicle is allowed) in vitro amplification conveniently integrate random mutagenesis into the selection procedure The outcomes may be least biased in copmarison to in vivo methods where selection is affected by the physiological state of the cell Selection of unnatural polymers which cannot be replicated in cells such as XNAs is possible. With that, except for CSR and SBL protocols, all these methods are typically used in selecting binders. And as far as literature goes, only rarely used in the selection of enzymatic activities.","title":"Selection for binders in vitro"},{"location":"resources/cisdisplay.html","text":"Introduction The CIS display, similarly to Ribosome-, mRNA- and cDNA-displays, is based on in vitro protein synthesis with one significant advantage: newly translated protein get immediately connected to the DNA encoding (https://www.pnas.org/content/101/9/2806). Two idea was behind its development: to avoid relying on prone for degradation mRNA in the selection process and to keep high level of genetic diversity similar to the mRNA and Ribosome displays (1013). Other DNA-based in vitro selection methods are largely based on encapsulation of DNA into vesicles which needs to be clonal and therefore genetic libraries get severy dilluted with maximum coverage 109 mutants. The CIS display reportedly allows recovery of a specific binder from a pool of non-binding mutants present at a ratio of 1 in 1010! Principle of CIS display In the CIS display a linear dsDNA served as a template. It usually has a promoter, a single open reading frame encoding target library and following it in frame repA gene (that binds specifically to dsDNA). The template also has cis and ori sequences the RepA protein associates with. The dsDNA template is then added to E. coli transcription-translation mixture (it could also be mixtures from other organisms). The RNA polymerase will produce mRNA from the template dsDNA and paused on CIS element. This is followed by the ribosome initiating translation on this mRNA-dsDNA complex. Newly translated (library peptide)-RepA fusion transiently associates with the CIS element on DNA template which eventually leads to RepA tightly binding adjacent ori sequence. Predominantly the nearest cis/ori region would be in the same DNA template that encodes cognate RepA-library fusion protein. Obtained DNA-protein pool is incubated with an immobilized on a magnetic bead bait and nonbinding peptides got washed away while retained ones get eluted, PCR-amplified and usually use in the next round of selection. Challenges Apart from all the challenges that are normally associated with setting up an in vitro transcription-translation system, the CIS-display specifically is limited to the proteins that are (1) small and (2) well-fodlabe such that their function is not affected by the N-terminally fused RepA protein. Future directions The CIS display is used commerically and mainly is used in the search of single chan antibodies and peptide binders. The main disadvantage of CIS-display siilary to other in vitro protocols is that selection is done out of the cellular or orgamismal context. There is a report on utilising CIS-display in conjunction with in cellulo screening (https://pubs.acs.org/doi/10.1021/acschembio.7b00693) demonstrating the superious efficiency of such combined protocol. Links to the protocols https://link.springer.com/protocol/10.1007%2F978-1-0716-0720-6_10","title":"CIS display"},{"location":"resources/cisdisplay.html#introduction","text":"The CIS display, similarly to Ribosome-, mRNA- and cDNA-displays, is based on in vitro protein synthesis with one significant advantage: newly translated protein get immediately connected to the DNA encoding (https://www.pnas.org/content/101/9/2806). Two idea was behind its development: to avoid relying on prone for degradation mRNA in the selection process and to keep high level of genetic diversity similar to the mRNA and Ribosome displays (1013). Other DNA-based in vitro selection methods are largely based on encapsulation of DNA into vesicles which needs to be clonal and therefore genetic libraries get severy dilluted with maximum coverage 109 mutants. The CIS display reportedly allows recovery of a specific binder from a pool of non-binding mutants present at a ratio of 1 in 1010!","title":"Introduction"},{"location":"resources/cisdisplay.html#principle-of-cis-display","text":"In the CIS display a linear dsDNA served as a template. It usually has a promoter, a single open reading frame encoding target library and following it in frame repA gene (that binds specifically to dsDNA). The template also has cis and ori sequences the RepA protein associates with. The dsDNA template is then added to E. coli transcription-translation mixture (it could also be mixtures from other organisms). The RNA polymerase will produce mRNA from the template dsDNA and paused on CIS element. This is followed by the ribosome initiating translation on this mRNA-dsDNA complex. Newly translated (library peptide)-RepA fusion transiently associates with the CIS element on DNA template which eventually leads to RepA tightly binding adjacent ori sequence. Predominantly the nearest cis/ori region would be in the same DNA template that encodes cognate RepA-library fusion protein. Obtained DNA-protein pool is incubated with an immobilized on a magnetic bead bait and nonbinding peptides got washed away while retained ones get eluted, PCR-amplified and usually use in the next round of selection.","title":"Principle of CIS display"},{"location":"resources/cisdisplay.html#challenges","text":"Apart from all the challenges that are normally associated with setting up an in vitro transcription-translation system, the CIS-display specifically is limited to the proteins that are (1) small and (2) well-fodlabe such that their function is not affected by the N-terminally fused RepA protein.","title":"Challenges"},{"location":"resources/cisdisplay.html#future-directions","text":"The CIS display is used commerically and mainly is used in the search of single chan antibodies and peptide binders. The main disadvantage of CIS-display siilary to other in vitro protocols is that selection is done out of the cellular or orgamismal context. There is a report on utilising CIS-display in conjunction with in cellulo screening (https://pubs.acs.org/doi/10.1021/acschembio.7b00693) demonstrating the superious efficiency of such combined protocol.","title":"Future directions"},{"location":"resources/cisdisplay.html#links-to-the-protocols","text":"https://link.springer.com/protocol/10.1007%2F978-1-0716-0720-6_10","title":"Links to the protocols"},{"location":"resources/computational_tools.html","text":"Computational tools (for library creation, design and analysis) Combining computational algorithms with directed evolution allows experimental methods such as Combinatorial Saturation Mutagenesis, DNA recombination and epPCR to be performed in a more effective way, leading to biocatalysts with strong biotechnological potential while reducing the demands on screening. In recent years, different computational methods have emerged that take advantage of the thousands of sequences and structures deposited in gene and protein databases. Comprehensive reviews of these computational tools have been recently published (Damborsky and Brezovsky, 2014; Sebestova et al., 2014, Sequeiros-Borja et al., 2020), so here we will simply mention a few representative examples of the most common computational algorithms used to date. https://academic.oup.com/bib/advance-article/doi/10.1093/bib/bbaa150/5879227?login=true SCHEMA: This computational method allows libraries to be designed by recombination of several homologous sequences (with as little as 55 % identity) while maximizing the number of folded proteins (Voigt et al., 2002). SCHEMA predicts the fragments that must be inherited in the same parent, thereby allowing the computational selection of blocks from which novel proteins (chimeras) can be assembled. The selection of crossover locations is based on a metric for disruption, defined as the number of interactions of a hybrid protein that are broken when a given pattern of fragments is inherited from each of the parents (ie, the pairs of residues within 4.5 \u00c5 of each other that are not present as the same pair in any of the parents\u2014defined as SCHEMA energy). This method requires a multiple sequence alignment of the parental sequences, a PDB file, and a UNIX-based computer. Link:http://www.cheme.caltech.edu/groups/fha/old_website_2010.6.25/schema-tools/schema-overview.html Application example: https://www.pnas.org/content/114/13/E2624#ref-10 MAP (Mutagenesis Assistant Program): MAP compares the different random mutagenesis methods available and their consequences in terms of mutational bias at the level of amino acid substitution (Wong et al., 2006b). MAP is used to predict the quality of the mutant library based on the epPCR method chosen and the nucleotide composition of the target gene. It works at three levels of information using three distinct indicators: (1) the protein structure indicator provides data about the likelihood of introducing stop codons and residues that destabilize the helical structure (Pro, Gly), (2) the amino acid diversity indicator shows the proportion of variants with preserved amino acids (ie, amino acids that do not change with a single nucleotide substitution\u2014silent mutations\u2014) and the average number of amino acid substitutions after a single nucleotide change, and (3) the chemical diversity indicator provides the chemical diversity generated in terms of amino acid substitution (aliphatic, aromatic, neutral, charged). The new version of the server (MAP2.0 3D) permits further mapping of the sequence indicators onto the target protein\u2019s 3D structure, correlating the pattern of amino acid substitution with structural information regarding local interactions solvent accessibility, residual motility, and secondary elements. To work, MAP2.0 3D requires only the target gene sequence and a PDB file (or a homology model) of the protein. Link: http://smap.win.biotec.rwth-aachen.de/ Application example/tutorial: https://daniloroccatano.blog/2018/03/23/bioinformatics-tools-for-protein-bioengineering-the-map-server/ HOT-SPOT WIZARD: This algorithm predicts hot-spot residues for CSM to modify activities and stability, precluding catalytic determinants from mutagenesis (Pavelka et al., 2009). For each individual amino acid, the tool gives information about the degree of mutability (and possible amino acid substitution at that position), functional and structural significance, and similar residues in related enzymes. The server integrates data from several bioinformatics databases allowing structural and evolutionary previews to be performed. The requirements to run HotSpot Wizard are minimal, only the PDB file of the target protein. Link: https://loschmidt.chemi.muni.cz/hotspotwizard/ Application example/tutorial: https://loschmidt.chemi.muni.cz/hotspotwizard/?action=usecases& 3DM: The 3DM protein superfamily platform is a commercial database that is useful to explore sequence-function relationships (Kuipers et al., 2010). By superimposing protein family structures from different sources (including mutations reported in the literature), a structure sequence alignment provides valuable information about conserved residues and more mutable amino acids to create CSM libraries. Link: https://www.bio-prodict.com/ ProSAR (Protein Sequence Activity Relationship): This computational platform unmasks beneficial mutations from experimental mutant libraries (even from mutants with reduced function) to be incorporated into new iterative rounds of directed evolution. ProSAR follows the same principles that rule QSAR (an algorithm used for drug design) but applied to protein engineering to sort out beneficial, neutral, and detrimental mutations from a given mutant library in order to find new epistatic effects within a given protein scaffold (Fox et al., 2007). ROSETTA: The Rosetta software suite for macromolecular modeling, docking, and design is widely used in pharmaceutical, industrial, academic, non-profit, and government laboratories. Considering its broad modeling capabilities, Rosetta consistently ranks highly when compared to other leading methods created for highly specialized protein modeling and design tasks. Developed for over two decades by a global community of scientists at more than 60 institutions, Rosetta has undergone multiple refactorings, and now comprises over three million lines of code. Among its many uses, the most common applications are: Predicting protein structures; modeling protein\u2013protein and DNA/RNA-protein complexes; design/modeling antibodies and other immune system proteins; designing new proteins and functions. A limitation of Rosetta is the need for a local installation and compilation in a Unix-like environment. Webservers provide a user-friendly alternative and a number of independent servers have emerged in our community. However, implementing and maintaining such servers comes at a substantial cost. To make it easier to provide protocols webservers, ROSIE (Rosetta Online Server that Includes Everyone) (http://rosie.rosettacommons.org/) implements a simple framework for \u201cserverification\u201d of protocols. ROSIE currently contains 21 webservers, with additional protocols continually being added. Link: https://www.rosettacommons.org/ Application example/tutorial: https://www.rosettacommons.org/docs/latest/Home More Rosetta Resources: Macromolecular Modeling and Design in Rosetta: New Methods and Frameworks https://www.preprints.org/manuscript/201904.0263/v3 Protocols for Molecular Modeling with Rosetta3 and RosettaScripts https://pubs.acs.org/doi/abs/10.1021/acs.biochem.6b00444 Practically Useful: What the ROSETTA Protein Modeling Suite Can Do for You https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2850155/pdf/bi902153g.pdf Rosetta comparative modeling for library design: Engineering alternative inducer specificity in a transcription factor https://onlinelibrary.wiley.com/doi/full/10.1002/prot.24828?casa_token=5i7yAN1li_kAAAAA%3AXZ9Wi-G-H1f1QMrPV2z2-sdFTLatqt4r9T_pStOhHSUSRkhqGSj1mySkYhsmdiVqEQZbXEPHTj6IAw0 Rosetta Tutorials, Demos, and Protocol Captures https://www.rosettacommons.org/demos/latest/Home Machine-learning based approaches: An emerging alternative for screening protein function in silico is machine learning, which comprises a set of algorithms that make decisions based on data (10). By building models directly from data, machine learning has proven to be a powerful, efficient, and versatile tool for a variety of applications, such as extracting abstract concepts from text and images or beating humans at our most complex games (11, 12). Previous applications of machine learning in protein engineering have identified beneficial mutations (13) and optimal combinations of protein fragments (14) for increased enzyme activity and protein stability, as reviewed recently (15). Example/Application: Here we use machine learning to enhance directed evolution by using combinatorial libraries of mutations to explore sequence space more efficiently than conventional directed evolution with single mutation walks. The size of a mutant library grows exponentially with the number of residues considered for mutation and quickly becomes intractable for experimental screening. However, by leveraging in silico models built based on sampling of a combinatorial library, machine learning assists directed evolution to make multiple mutations simultaneously and traverse fitness landscapes more efficiently. In the machine learning-assisted directed evolution strategy presented here, multiple amino acid residues are randomized in each generation. Sequence\u2013function information sampled from the large combinatorial library is then used to predict a restricted library with an increased probability of containing variants with high fitness. The best-performing variants from the predicted libraries are chosen as the starting points for the next round of evolution, from which further improved variants are identified. https://www.pnas.org/content/pnas/116/18/8852.full.pdf A good and concise example of combining computational and experimental approaches: In our last example, a good combination of dry and wetlab was employed. The IPTG responsive Transcription Factor LacI has been computationally redesigned and mutated to recognize four new non-native inducers (Taylor et al., 2016). This study is a good example of how the combination of computation-guided mutagenesis based on the Rosetta algorithm and different diversification techniques (such as epPCR and saturation mutagenesis) can accelerate the discovery/generation of new molecular functions. In a counter-selection round, the mutant libraries were pre-screened for retained ability to repress a TolC reporter (a porin that allows entry of toxic colicin E1) by growth enrichment in the absence of inducers but in the presence of colicin E1. The enriched LacI libraries were then positively screened by FACS for their ability to activate production of GFP upon induction with different sugars, resulting in variants of LacI that were responsive to fucose, gentiobiose, lactitol and sucralose (Taylor et al., 2016). In this instance, no active counter-screening was performed against activation by IPTG, so nearly all mutants retained their ability to respond to IPTG, a phenotype that was reduced for some designs upon shuffling of mutations for activity screening. https://academic.oup.com/nar/article/48/1/e3/5645005?login=true Reviews Computational tools for enzyme improvement: why everyone can \u2013 and should \u2013 use them https://www.sciencedirect.com/science/article/pii/S1367593117300248 Computational Tools for Designing Smart Libraries https://link.springer.com/protocol/10.1007%2F978-1-4939-1053-3_20 Protein computational design - recent review https://www.sciencedirect.com/science/article/pii/S0734975021000021 From directed evolution to computational enzyme engineering\u2014A review https://aiche.onlinelibrary.wiley.com/doi/10.1002/aic.16847 Other examples: CADEE: Computer-Aided Directed Evolution of Enzymes https://journals.iucr.org/m/issues/2017/01/00/be5274/index.html Machine learning-assisted directed protein evolution with combinatorial libraries https://www.pnas.org/content/pnas/116/18/8852.full.pdf Principles of Machine Learning Guided Protein Engineering https://dash.harvard.edu/handle/1/37365914 Discovery of Novel Gain-of-Function Mutations Guided by Structure-Based Deep Learning https://pubs.acs.org/doi/pdf/10.1021/acssynbio.0c00345 Deep Dive into Machine Learning Models for Protein Engineering https://pubs.acs.org/doi/10.1021/acs.jcim.0c00073 Underrated Machine Learning Papers for Protein Design https://medium.com/proteinqure/underrated-machine-learning-papers-for-protein-design-applications-a846e294330 Deep Learning in Protein Structural Modeling and Design https://www.cell.com/patterns/pdf/S2666-3899(20)30190-2.pdf","title":"Computational tools"},{"location":"resources/computational_tools.html#computational-tools-for-library-creation-design-and-analysis","text":"Combining computational algorithms with directed evolution allows experimental methods such as Combinatorial Saturation Mutagenesis, DNA recombination and epPCR to be performed in a more effective way, leading to biocatalysts with strong biotechnological potential while reducing the demands on screening. In recent years, different computational methods have emerged that take advantage of the thousands of sequences and structures deposited in gene and protein databases. Comprehensive reviews of these computational tools have been recently published (Damborsky and Brezovsky, 2014; Sebestova et al., 2014, Sequeiros-Borja et al., 2020), so here we will simply mention a few representative examples of the most common computational algorithms used to date. https://academic.oup.com/bib/advance-article/doi/10.1093/bib/bbaa150/5879227?login=true SCHEMA: This computational method allows libraries to be designed by recombination of several homologous sequences (with as little as 55 % identity) while maximizing the number of folded proteins (Voigt et al., 2002). SCHEMA predicts the fragments that must be inherited in the same parent, thereby allowing the computational selection of blocks from which novel proteins (chimeras) can be assembled. The selection of crossover locations is based on a metric for disruption, defined as the number of interactions of a hybrid protein that are broken when a given pattern of fragments is inherited from each of the parents (ie, the pairs of residues within 4.5 \u00c5 of each other that are not present as the same pair in any of the parents\u2014defined as SCHEMA energy). This method requires a multiple sequence alignment of the parental sequences, a PDB file, and a UNIX-based computer. Link:http://www.cheme.caltech.edu/groups/fha/old_website_2010.6.25/schema-tools/schema-overview.html Application example: https://www.pnas.org/content/114/13/E2624#ref-10 MAP (Mutagenesis Assistant Program): MAP compares the different random mutagenesis methods available and their consequences in terms of mutational bias at the level of amino acid substitution (Wong et al., 2006b). MAP is used to predict the quality of the mutant library based on the epPCR method chosen and the nucleotide composition of the target gene. It works at three levels of information using three distinct indicators: (1) the protein structure indicator provides data about the likelihood of introducing stop codons and residues that destabilize the helical structure (Pro, Gly), (2) the amino acid diversity indicator shows the proportion of variants with preserved amino acids (ie, amino acids that do not change with a single nucleotide substitution\u2014silent mutations\u2014) and the average number of amino acid substitutions after a single nucleotide change, and (3) the chemical diversity indicator provides the chemical diversity generated in terms of amino acid substitution (aliphatic, aromatic, neutral, charged). The new version of the server (MAP2.0 3D) permits further mapping of the sequence indicators onto the target protein\u2019s 3D structure, correlating the pattern of amino acid substitution with structural information regarding local interactions solvent accessibility, residual motility, and secondary elements. To work, MAP2.0 3D requires only the target gene sequence and a PDB file (or a homology model) of the protein. Link: http://smap.win.biotec.rwth-aachen.de/ Application example/tutorial: https://daniloroccatano.blog/2018/03/23/bioinformatics-tools-for-protein-bioengineering-the-map-server/ HOT-SPOT WIZARD: This algorithm predicts hot-spot residues for CSM to modify activities and stability, precluding catalytic determinants from mutagenesis (Pavelka et al., 2009). For each individual amino acid, the tool gives information about the degree of mutability (and possible amino acid substitution at that position), functional and structural significance, and similar residues in related enzymes. The server integrates data from several bioinformatics databases allowing structural and evolutionary previews to be performed. The requirements to run HotSpot Wizard are minimal, only the PDB file of the target protein. Link: https://loschmidt.chemi.muni.cz/hotspotwizard/ Application example/tutorial: https://loschmidt.chemi.muni.cz/hotspotwizard/?action=usecases& 3DM: The 3DM protein superfamily platform is a commercial database that is useful to explore sequence-function relationships (Kuipers et al., 2010). By superimposing protein family structures from different sources (including mutations reported in the literature), a structure sequence alignment provides valuable information about conserved residues and more mutable amino acids to create CSM libraries. Link: https://www.bio-prodict.com/ ProSAR (Protein Sequence Activity Relationship): This computational platform unmasks beneficial mutations from experimental mutant libraries (even from mutants with reduced function) to be incorporated into new iterative rounds of directed evolution. ProSAR follows the same principles that rule QSAR (an algorithm used for drug design) but applied to protein engineering to sort out beneficial, neutral, and detrimental mutations from a given mutant library in order to find new epistatic effects within a given protein scaffold (Fox et al., 2007). ROSETTA: The Rosetta software suite for macromolecular modeling, docking, and design is widely used in pharmaceutical, industrial, academic, non-profit, and government laboratories. Considering its broad modeling capabilities, Rosetta consistently ranks highly when compared to other leading methods created for highly specialized protein modeling and design tasks. Developed for over two decades by a global community of scientists at more than 60 institutions, Rosetta has undergone multiple refactorings, and now comprises over three million lines of code. Among its many uses, the most common applications are: Predicting protein structures; modeling protein\u2013protein and DNA/RNA-protein complexes; design/modeling antibodies and other immune system proteins; designing new proteins and functions. A limitation of Rosetta is the need for a local installation and compilation in a Unix-like environment. Webservers provide a user-friendly alternative and a number of independent servers have emerged in our community. However, implementing and maintaining such servers comes at a substantial cost. To make it easier to provide protocols webservers, ROSIE (Rosetta Online Server that Includes Everyone) (http://rosie.rosettacommons.org/) implements a simple framework for \u201cserverification\u201d of protocols. ROSIE currently contains 21 webservers, with additional protocols continually being added. Link: https://www.rosettacommons.org/ Application example/tutorial: https://www.rosettacommons.org/docs/latest/Home More Rosetta Resources: Macromolecular Modeling and Design in Rosetta: New Methods and Frameworks https://www.preprints.org/manuscript/201904.0263/v3 Protocols for Molecular Modeling with Rosetta3 and RosettaScripts https://pubs.acs.org/doi/abs/10.1021/acs.biochem.6b00444 Practically Useful: What the ROSETTA Protein Modeling Suite Can Do for You https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2850155/pdf/bi902153g.pdf Rosetta comparative modeling for library design: Engineering alternative inducer specificity in a transcription factor https://onlinelibrary.wiley.com/doi/full/10.1002/prot.24828?casa_token=5i7yAN1li_kAAAAA%3AXZ9Wi-G-H1f1QMrPV2z2-sdFTLatqt4r9T_pStOhHSUSRkhqGSj1mySkYhsmdiVqEQZbXEPHTj6IAw0 Rosetta Tutorials, Demos, and Protocol Captures https://www.rosettacommons.org/demos/latest/Home Machine-learning based approaches: An emerging alternative for screening protein function in silico is machine learning, which comprises a set of algorithms that make decisions based on data (10). By building models directly from data, machine learning has proven to be a powerful, efficient, and versatile tool for a variety of applications, such as extracting abstract concepts from text and images or beating humans at our most complex games (11, 12). Previous applications of machine learning in protein engineering have identified beneficial mutations (13) and optimal combinations of protein fragments (14) for increased enzyme activity and protein stability, as reviewed recently (15). Example/Application: Here we use machine learning to enhance directed evolution by using combinatorial libraries of mutations to explore sequence space more efficiently than conventional directed evolution with single mutation walks. The size of a mutant library grows exponentially with the number of residues considered for mutation and quickly becomes intractable for experimental screening. However, by leveraging in silico models built based on sampling of a combinatorial library, machine learning assists directed evolution to make multiple mutations simultaneously and traverse fitness landscapes more efficiently. In the machine learning-assisted directed evolution strategy presented here, multiple amino acid residues are randomized in each generation. Sequence\u2013function information sampled from the large combinatorial library is then used to predict a restricted library with an increased probability of containing variants with high fitness. The best-performing variants from the predicted libraries are chosen as the starting points for the next round of evolution, from which further improved variants are identified. https://www.pnas.org/content/pnas/116/18/8852.full.pdf A good and concise example of combining computational and experimental approaches: In our last example, a good combination of dry and wetlab was employed. The IPTG responsive Transcription Factor LacI has been computationally redesigned and mutated to recognize four new non-native inducers (Taylor et al., 2016). This study is a good example of how the combination of computation-guided mutagenesis based on the Rosetta algorithm and different diversification techniques (such as epPCR and saturation mutagenesis) can accelerate the discovery/generation of new molecular functions. In a counter-selection round, the mutant libraries were pre-screened for retained ability to repress a TolC reporter (a porin that allows entry of toxic colicin E1) by growth enrichment in the absence of inducers but in the presence of colicin E1. The enriched LacI libraries were then positively screened by FACS for their ability to activate production of GFP upon induction with different sugars, resulting in variants of LacI that were responsive to fucose, gentiobiose, lactitol and sucralose (Taylor et al., 2016). In this instance, no active counter-screening was performed against activation by IPTG, so nearly all mutants retained their ability to respond to IPTG, a phenotype that was reduced for some designs upon shuffling of mutations for activity screening. https://academic.oup.com/nar/article/48/1/e3/5645005?login=true Reviews Computational tools for enzyme improvement: why everyone can \u2013 and should \u2013 use them https://www.sciencedirect.com/science/article/pii/S1367593117300248 Computational Tools for Designing Smart Libraries https://link.springer.com/protocol/10.1007%2F978-1-4939-1053-3_20 Protein computational design - recent review https://www.sciencedirect.com/science/article/pii/S0734975021000021 From directed evolution to computational enzyme engineering\u2014A review https://aiche.onlinelibrary.wiley.com/doi/10.1002/aic.16847 Other examples: CADEE: Computer-Aided Directed Evolution of Enzymes https://journals.iucr.org/m/issues/2017/01/00/be5274/index.html Machine learning-assisted directed protein evolution with combinatorial libraries https://www.pnas.org/content/pnas/116/18/8852.full.pdf Principles of Machine Learning Guided Protein Engineering https://dash.harvard.edu/handle/1/37365914 Discovery of Novel Gain-of-Function Mutations Guided by Structure-Based Deep Learning https://pubs.acs.org/doi/pdf/10.1021/acssynbio.0c00345 Deep Dive into Machine Learning Models for Protein Engineering https://pubs.acs.org/doi/10.1021/acs.jcim.0c00073 Underrated Machine Learning Papers for Protein Design https://medium.com/proteinqure/underrated-machine-learning-papers-for-protein-design-applications-a846e294330 Deep Learning in Protein Structural Modeling and Design https://www.cell.com/patterns/pdf/S2666-3899(20)30190-2.pdf","title":"Computational tools (for library creation, design and analysis)"},{"location":"resources/cont_de_methods.html","text":"Continuous directed evolution methods Continuous directed evolution (CDE) methods offer a significant advantage over the discrete ones as they: Involve less interrogation from the experimenter. Hence, this type of DE could be significantly less laborious in the long run than the discrete DE protocols. In vivo selection is typically coupled with in situ mutagenesis. It leads to the generation of larger diversity libraries, i.e., it increases selection scale (Figure 1). Repeated iteration of the evolutionary protocol results in a deeper exploration of the phenotypic space, i.e., it expands the depth of evolutionary search (Figure 1) Larger genetic library enables search of phenotype across greater sequence space (scale), while the moving along mutational landscape (depth) enables finding solutions that are far from initial phenotypic state. *idea taken from Chang Liu's [recent paper](https://doi.org/10.1016/j.cbpa.2021.02.008)* The use of both larger scale and greater depth of evolutionary search makes CDE a step closer to the natural selection systems, which may be more efficient in general and certainly more suitable for the evolution of complex systems. CDE also takes advantage of the fact that both selection and mutagenesis occurs in the same host organism, effectively cancelling several bottlenecks such transformation that is typical for discrete DE (Figure 2). Nevertheless, discrete methods could be much more straightforward to set in the lab what certainly aids to their popularity. The exploitation of viral replication machinery is a popular concept in CDE, with two most prominent examples being Phage Assisted Continuous Evolution PACE for evolution in E.coli and viral evolution of genetically actuating sequences VEGAS that is accustomed for the evolution of proteins in mammalian cells. The Adaptive Laboratory Evolution , in principle, can be considered as one of the CDE methods as well. Recent developments in situ mutagenesis protocols will undoubtedly lead to the development of novel CDE systems. Discrete method of evolution have several stages such as transformation which leads to unpredictable loss of genetic diversity.","title":"Continuous directed evolution methods"},{"location":"resources/cont_de_methods.html#continuous-directed-evolution-methods","text":"Continuous directed evolution (CDE) methods offer a significant advantage over the discrete ones as they: Involve less interrogation from the experimenter. Hence, this type of DE could be significantly less laborious in the long run than the discrete DE protocols. In vivo selection is typically coupled with in situ mutagenesis. It leads to the generation of larger diversity libraries, i.e., it increases selection scale (Figure 1). Repeated iteration of the evolutionary protocol results in a deeper exploration of the phenotypic space, i.e., it expands the depth of evolutionary search (Figure 1) Larger genetic library enables search of phenotype across greater sequence space (scale), while the moving along mutational landscape (depth) enables finding solutions that are far from initial phenotypic state. *idea taken from Chang Liu's [recent paper](https://doi.org/10.1016/j.cbpa.2021.02.008)* The use of both larger scale and greater depth of evolutionary search makes CDE a step closer to the natural selection systems, which may be more efficient in general and certainly more suitable for the evolution of complex systems. CDE also takes advantage of the fact that both selection and mutagenesis occurs in the same host organism, effectively cancelling several bottlenecks such transformation that is typical for discrete DE (Figure 2). Nevertheless, discrete methods could be much more straightforward to set in the lab what certainly aids to their popularity. The exploitation of viral replication machinery is a popular concept in CDE, with two most prominent examples being Phage Assisted Continuous Evolution PACE for evolution in E.coli and viral evolution of genetically actuating sequences VEGAS that is accustomed for the evolution of proteins in mammalian cells. The Adaptive Laboratory Evolution , in principle, can be considered as one of the CDE methods as well. Recent developments in situ mutagenesis protocols will undoubtedly lead to the development of novel CDE systems. Discrete method of evolution have several stages such as transformation which leads to unpredictable loss of genetic diversity.","title":"Continuous directed evolution methods"},{"location":"resources/enzymes.html","text":"","title":"Selection of enzymes and reporters"},{"location":"resources/epPCR.html","text":"Error-prone PCR Introduction Generation of a maximally diverse gene library is particularly important when employing non-targeted mutagenesis strategies. The method most often used to generate variants with random mutations is error-prone PCR (epPCR). Here we present the basic protocols and tips for using epPCR to generate gene variants that exhibit a relatively balanced spectrum of mutations and for capturing as much diversity as possible through effective cloning of those variants. The principles of epPCR Error-prone PCR protocols are modifications of standard PCR methods, designed to alter and enhance the natural error rate of the polymerase. There are many ways to control the mutation rate of epPCR. EpPCR reactions typically contain higher concentrations of MgCl2 (7 mM) compared to basic PCR reactions (1.5 mM), in order to stabilize non-complementary pairs.(Ling et al., 1991) MnCl2 can also be added to increase the error-rate.(Lin-Goerke, Robbins & Burczak, 1997) Other ways of modifying mutation rate include varying the ratios of nucleotides in the reaction or including a nucleotide analog such as 8-oxo-dGTP or dITP. Mutation frequencies from 0.11 to 2% (1 to 20 nucleotides per 1 kb) have been achieved simply by varying the nucleotide ratio and the amount of MnCl2 in the PCR reaction.(Fromant, Blanquet & Plateau, 1995) The number of genes that contain a mutation can also be modified by changing the number of effective doublings by increasing/decreasing the number of cycles or by changing the initial template concentration. An expression system and high-throughput assay should be developed before a library of enzyme variants are generated. epPCR provides access to an almost unlimited number of variants, but generally have a lower hit rate and are therefore better suited to high throughput screening or selection strategies. To take full advantage of the power of error-prone PCR, the assay must be accurate enough to detect small improvements and sensitive enough to detect the low levels of activity typically encountered in the beginning rounds of an evolution experiment. The procedures of epPCR epPCR Reaction Preparation* For each PCR sample, add to tube: \u00b7 10 \u03bcL 10X normal error-prone PCR buffer () \u00b7 2 \u03bcL 50X dNTP mix \u00b7 Additional dNTPs [optional; increase mutation rate] \u00b7 10 \u03bcL 55 mM MgCl2 [optional; increase mutation rate] \u00b7 10 \u03bcL 55 mM MnCl2 [optional; increase mutation rate] \u00b7 30 pmol each primer [design your primers before] \u00b7 2 fmol template DNA (~10 ng of an 8-kb plasmid) [Prepare your template before] \u00b7 1 \u03bcL Taq polymerase (5U) \u00b7 H2O to a final volume of 100 \u03bcL. There are also some commercial available epPCR Kits: (Agilent)[https://www.agilent.com/en/product/mutagenesis-cloning/mutagenesis-kits/random-mutagenesis-kits/genemorph-ii-233115], (TakaraBio)[https://www.takarabio.com/products/cloning/mutagenesis-kits/random-mutagenesis-kit] Run Error-Prone PCR Program \u00b7 30 s at 94\u00b0C \u00b7 30 s at annealing temperature for primers \u00b7 1 min at 72\u00b0C (for a ~1 kb gene) \u00b7 35-50 cycles (more cycles can increase mutations) \u00b7 5 min at 72\u00b0C final extension \u00b7 4\u00b0C (to protect samples overnight if necessary) Construct the library Using Gibson Assembly or Goldengate Assembly for library construction. 3.1 Gibson Assembly(Gibson et al., 2009) Gibson Mix Buffer(2x) 5\u03bcl Vector backbone 25 fmol Each insert 50 fmol H20 To make 10 \u03bcl 50\u2103, 1 hour. Goldengate Assembly Type IIs RE 0.50\u03bcl T4 ligase 0.50\u03bcl Vector backbone 25 fmol Each insert 50 fmol Goldengate buffer 1 \u03bcl H20 To make 10 \u03bcl Step 1, RE digestion 37\u2103(BsaI) or 42\u2103(BsmaI) 2 min Step 2, Ligation 16 \u00b0C 5 min Step 3, RE digestion 60 \u00b0C 10 min Step 1-3 repeat 25 cycles Step 4 Heat inactivation 80 \u00b0C 10 min Hold 4 \u00b0C \u221e Transformation Prepare a high-efficiency cell library like E. coli or yeast for transformation. (key step). See more information: Transformation of genetic library. Selection Using a designed selection method for selection. More information is coming soon. Very comprehensive protocol for students: https://experiments.springernature.com/articles/10.1007/978-1-4939-1053-3_1 References Fromant, M., Blanquet, S. & Plateau, P. (1995) Direct Random Mutagenesis of Gene-Sized DNA Fragments Using Polymerase Chain Reaction. Analytical Biochemistry. [Online] 224 (1), 347\u2013353. Available from: doi:10.1006/abio.1995.1050. Gibson, D.G., Young, L., Chuang, R.-Y., Venter, C.J., et al. (2009) Enzymatic assembly of DNA molecules up to several hundred kilobases. Nature Methods. [Online] 6 (5), nmeth.1318. Available from: doi:10.1038/nmeth.1318. Ling, L.L., Keohavong, P., Dias, C. & Thilly, W.G. (1991) Optimization of the polymerase chain reaction with regard to fidelity: modified T7, Taq, and vent DNA polymerases. Genome Research. [Online] 1 (1), 63\u201369. Available from: doi:10.1101/gr.1.1.63. Lin-Goerke, J.L., Robbins, D.J. & Burczak, J.D. (1997) PCR-Based Random Mutagenesis Using Manganese and Reduced dNTP Concentration. BioTechniques. [Online] 23 (3), 409\u2013412. Available from: doi:10.2144/97233bm12.","title":"Error-prone PCR"},{"location":"resources/epPCR.html#error-prone-pcr","text":"","title":"Error-prone PCR"},{"location":"resources/epPCR.html#introduction","text":"Generation of a maximally diverse gene library is particularly important when employing non-targeted mutagenesis strategies. The method most often used to generate variants with random mutations is error-prone PCR (epPCR). Here we present the basic protocols and tips for using epPCR to generate gene variants that exhibit a relatively balanced spectrum of mutations and for capturing as much diversity as possible through effective cloning of those variants.","title":"Introduction"},{"location":"resources/epPCR.html#the-principles-of-eppcr","text":"Error-prone PCR protocols are modifications of standard PCR methods, designed to alter and enhance the natural error rate of the polymerase. There are many ways to control the mutation rate of epPCR. EpPCR reactions typically contain higher concentrations of MgCl2 (7 mM) compared to basic PCR reactions (1.5 mM), in order to stabilize non-complementary pairs.(Ling et al., 1991) MnCl2 can also be added to increase the error-rate.(Lin-Goerke, Robbins & Burczak, 1997) Other ways of modifying mutation rate include varying the ratios of nucleotides in the reaction or including a nucleotide analog such as 8-oxo-dGTP or dITP. Mutation frequencies from 0.11 to 2% (1 to 20 nucleotides per 1 kb) have been achieved simply by varying the nucleotide ratio and the amount of MnCl2 in the PCR reaction.(Fromant, Blanquet & Plateau, 1995) The number of genes that contain a mutation can also be modified by changing the number of effective doublings by increasing/decreasing the number of cycles or by changing the initial template concentration. An expression system and high-throughput assay should be developed before a library of enzyme variants are generated. epPCR provides access to an almost unlimited number of variants, but generally have a lower hit rate and are therefore better suited to high throughput screening or selection strategies. To take full advantage of the power of error-prone PCR, the assay must be accurate enough to detect small improvements and sensitive enough to detect the low levels of activity typically encountered in the beginning rounds of an evolution experiment.","title":"The principles of epPCR"},{"location":"resources/epPCR.html#the-procedures-of-eppcr","text":"epPCR Reaction Preparation* For each PCR sample, add to tube: \u00b7 10 \u03bcL 10X normal error-prone PCR buffer () \u00b7 2 \u03bcL 50X dNTP mix \u00b7 Additional dNTPs [optional; increase mutation rate] \u00b7 10 \u03bcL 55 mM MgCl2 [optional; increase mutation rate] \u00b7 10 \u03bcL 55 mM MnCl2 [optional; increase mutation rate] \u00b7 30 pmol each primer [design your primers before] \u00b7 2 fmol template DNA (~10 ng of an 8-kb plasmid) [Prepare your template before] \u00b7 1 \u03bcL Taq polymerase (5U) \u00b7 H2O to a final volume of 100 \u03bcL. There are also some commercial available epPCR Kits: (Agilent)[https://www.agilent.com/en/product/mutagenesis-cloning/mutagenesis-kits/random-mutagenesis-kits/genemorph-ii-233115], (TakaraBio)[https://www.takarabio.com/products/cloning/mutagenesis-kits/random-mutagenesis-kit] Run Error-Prone PCR Program \u00b7 30 s at 94\u00b0C \u00b7 30 s at annealing temperature for primers \u00b7 1 min at 72\u00b0C (for a ~1 kb gene) \u00b7 35-50 cycles (more cycles can increase mutations) \u00b7 5 min at 72\u00b0C final extension \u00b7 4\u00b0C (to protect samples overnight if necessary) Construct the library Using Gibson Assembly or Goldengate Assembly for library construction. 3.1 Gibson Assembly(Gibson et al., 2009) Gibson Mix Buffer(2x) 5\u03bcl Vector backbone 25 fmol Each insert 50 fmol H20 To make 10 \u03bcl 50\u2103, 1 hour. Goldengate Assembly Type IIs RE 0.50\u03bcl T4 ligase 0.50\u03bcl Vector backbone 25 fmol Each insert 50 fmol Goldengate buffer 1 \u03bcl H20 To make 10 \u03bcl Step 1, RE digestion 37\u2103(BsaI) or 42\u2103(BsmaI) 2 min Step 2, Ligation 16 \u00b0C 5 min Step 3, RE digestion 60 \u00b0C 10 min Step 1-3 repeat 25 cycles Step 4 Heat inactivation 80 \u00b0C 10 min Hold 4 \u00b0C \u221e Transformation Prepare a high-efficiency cell library like E. coli or yeast for transformation. (key step). See more information: Transformation of genetic library. Selection Using a designed selection method for selection. More information is coming soon. Very comprehensive protocol for students: https://experiments.springernature.com/articles/10.1007/978-1-4939-1053-3_1","title":"The procedures of epPCR"},{"location":"resources/epPCR.html#references","text":"Fromant, M., Blanquet, S. & Plateau, P. (1995) Direct Random Mutagenesis of Gene-Sized DNA Fragments Using Polymerase Chain Reaction. Analytical Biochemistry. [Online] 224 (1), 347\u2013353. Available from: doi:10.1006/abio.1995.1050. Gibson, D.G., Young, L., Chuang, R.-Y., Venter, C.J., et al. (2009) Enzymatic assembly of DNA molecules up to several hundred kilobases. Nature Methods. [Online] 6 (5), nmeth.1318. Available from: doi:10.1038/nmeth.1318. Ling, L.L., Keohavong, P., Dias, C. & Thilly, W.G. (1991) Optimization of the polymerase chain reaction with regard to fidelity: modified T7, Taq, and vent DNA polymerases. Genome Research. [Online] 1 (1), 63\u201369. Available from: doi:10.1101/gr.1.1.63. Lin-Goerke, J.L., Robbins, D.J. & Burczak, J.D. (1997) PCR-Based Random Mutagenesis Using Manganese and Reduced dNTP Concentration. BioTechniques. [Online] 23 (3), 409\u2013412. Available from: doi:10.2144/97233bm12.","title":"References"},{"location":"resources/gene_shuttling.html","text":"Recombinatorial and gene and domain shuffling Introduction DNA shuffling is an established recombinatorial method that was originally developed to increase the speed of directed evolution experiments beyond what could be accomplished using error-prone PCR alone. To achieve this, mutated copies of a protein-coding sequence are fragmented with DNase I or restriction enzyme and the fragments are then reassembled in a PCR without primers. In Vitro Homologous Recombination DNA shuffling was the first reported method of in vitro recombination. DNAse I is first used to randomly fragment the parental genes. Then, provided there is sufficient sequence similarity between overlapping regions of DNA fragments from different parents, the fragments can anneal to one another and reassemble into a full-length gene using a primer-less PCR. Depending on the total gene size, the degree of sequence similarity between parental DNA strands, and desired number of crossovers, fragment sizes after DNAse I treatment can vary from as low as 10\u201350 bp to greater than 1 kb. Random point mutations tend to occur at low rates during recombination even with a high-fidelity polymerase, and researchers will often intentionally employ error-prone PCR during PCR-based gene recombination to further diversify their library. DNA shuffling can aslso be done on a set of naturally occuring homologous genes, instead of generted by epPCR a set of mutant genes. This technique is called \u201cfamily shuffling\u201d. A number of other PCR-based and homology-dependent protocols have since been developed which accomplish essentially the same as DNA shuffling. Examples include the staggered extension process, random-priming in vitro recombination, and random chimeragenesis on transient templates. In general these methods work well for DNA sequences sharing at least 65% identity, although higher sequence identity more readily yields a greater number of crossovers. In vitro recombination methods are also often used in directed evolution, even when the only genetic diversity is introduced by random mutagenesis of a single parent gene. Here, one or more rounds of mutagenesis and screening to isolate improved variants results in a handful of mutant genes, each carrying a different set of point mutations. By shuffling these highly identical mutant DNA sequences, one can readily obtain a library containing all combinations of point mutations. Beneficial mutations can be combined and may show additive effects, while any potentially deleterious mutations that have accumulated will be eliminated by \u2018back-crossing\u2019 with the wild-type sequence.","title":"Recombinatorial gene and domain shuffling"},{"location":"resources/gene_shuttling.html#recombinatorial-and-gene-and-domain-shuffling","text":"","title":"Recombinatorial and gene and domain shuffling"},{"location":"resources/gene_shuttling.html#introduction","text":"DNA shuffling is an established recombinatorial method that was originally developed to increase the speed of directed evolution experiments beyond what could be accomplished using error-prone PCR alone. To achieve this, mutated copies of a protein-coding sequence are fragmented with DNase I or restriction enzyme and the fragments are then reassembled in a PCR without primers.","title":"Introduction"},{"location":"resources/gene_shuttling.html#in-vitro-homologous-recombination","text":"DNA shuffling was the first reported method of in vitro recombination. DNAse I is first used to randomly fragment the parental genes. Then, provided there is sufficient sequence similarity between overlapping regions of DNA fragments from different parents, the fragments can anneal to one another and reassemble into a full-length gene using a primer-less PCR. Depending on the total gene size, the degree of sequence similarity between parental DNA strands, and desired number of crossovers, fragment sizes after DNAse I treatment can vary from as low as 10\u201350 bp to greater than 1 kb. Random point mutations tend to occur at low rates during recombination even with a high-fidelity polymerase, and researchers will often intentionally employ error-prone PCR during PCR-based gene recombination to further diversify their library. DNA shuffling can aslso be done on a set of naturally occuring homologous genes, instead of generted by epPCR a set of mutant genes. This technique is called \u201cfamily shuffling\u201d. A number of other PCR-based and homology-dependent protocols have since been developed which accomplish essentially the same as DNA shuffling. Examples include the staggered extension process, random-priming in vitro recombination, and random chimeragenesis on transient templates. In general these methods work well for DNA sequences sharing at least 65% identity, although higher sequence identity more readily yields a greater number of crossovers. In vitro recombination methods are also often used in directed evolution, even when the only genetic diversity is introduced by random mutagenesis of a single parent gene. Here, one or more rounds of mutagenesis and screening to isolate improved variants results in a handful of mutant genes, each carrying a different set of point mutations. By shuffling these highly identical mutant DNA sequences, one can readily obtain a library containing all combinations of point mutations. Beneficial mutations can be combined and may show additive effects, while any potentially deleterious mutations that have accumulated will be eliminated by \u2018back-crossing\u2019 with the wild-type sequence.","title":"In Vitro Homologous Recombination"},{"location":"resources/genetic_diversity.html","text":"Finding That Molecule in a Haystack In some sense, directed evolution is a numbers game whereby the possibility to find the desired mutant is proportional to the library size. Thus, creating a high-quality genetic library is a critical step for a successful directed evolution campaign. Methods for the creation of genetic diversity can be broadly classified into three categories, i.e., random mutagenesis, focused mutagenesis, and DNA recombination. Error-prone PCR primarily represents random mutagenesis. It is frequently used whenever there is not enough knowledge about the target molecule. Its simplicity also favours its wide use and makes it the first choice mutagenesis method in many labs. In the focused mutagenesis, a sweat of techniques was developed to insert mutations in the selected position(s) in the gene of interest. It represents a more 'surgical' approach, and it is utilised whenever an active site of the protein or a particular binding interface is to be evolved while keeping the rest of the protein fold native. DNA recombination combines both methods' benefits as it is more efficient than error-prone PCR, and it, in principle, can lead to even mutagenesis of the whole gene of interest.","title":"Creating genetic diversity"},{"location":"resources/genetic_diversity.html#finding-that-molecule-in-a-haystack","text":"In some sense, directed evolution is a numbers game whereby the possibility to find the desired mutant is proportional to the library size. Thus, creating a high-quality genetic library is a critical step for a successful directed evolution campaign. Methods for the creation of genetic diversity can be broadly classified into three categories, i.e., random mutagenesis, focused mutagenesis, and DNA recombination. Error-prone PCR primarily represents random mutagenesis. It is frequently used whenever there is not enough knowledge about the target molecule. Its simplicity also favours its wide use and makes it the first choice mutagenesis method in many labs. In the focused mutagenesis, a sweat of techniques was developed to insert mutations in the selected position(s) in the gene of interest. It represents a more 'surgical' approach, and it is utilised whenever an active site of the protein or a particular binding interface is to be evolved while keeping the rest of the protein fold native. DNA recombination combines both methods' benefits as it is more efficient than error-prone PCR, and it, in principle, can lead to even mutagenesis of the whole gene of interest.","title":"Finding That Molecule in a Haystack"},{"location":"resources/genome_evolution.html","text":"Genome Evolution","title":"Genome Evolution"},{"location":"resources/genome_evolution.html#genome-evolution","text":"","title":"Genome Evolution"},{"location":"resources/introduction.html","text":"Introduction Directed evolution (DE) aims to improve the activity of biological entities (molecules, bacterial strains etc.) via exploiting principles of Darwinian selection in a controlled laboratory environment. DE is performed in rounds by repeating two main steps: diversification of a genetic material and selection of the molecules encoded by it for the desired property. The evolution experiments spans from the living cells, their consortia (ecosystems) to heavily reduced in complexity in vitro systems (e.g. transcription-translation). Importantly, DE is inherently probabilistic, and hence its exact outcomes are unpredictable, just as natural evolution is. Thus, DE strategies are perfectly fit for harnessing biological complexity whereby unpredictability and irrationality, however still unwanted, are increasingly considered to be an asset. Indeed, random search and feedback controls, which are inherent parts of any DE approach are the only language nature engages. Development of the DE field creates possibilities to work with living systems, guiding their genetic algorithms, by following rules of these systems as opposed to controlling them. From this point of view, DE is may be the furthest from rational engineering in the realm of synthetic biology. A thorough understanding of the DE experimental design is required to increase the chances for its successful implementation. This resource is here to help you with this. It gives a basic overview of the types of DE experiments, their experimental logic, ways to create and characterise genetic libraries, design selection schemes and perform final analysis. Importantly, This page is not intended to be complete but rather to be a welcoming and informative resource for you to learn more about the marvellous field called Directed Evolution! DE field is vast and its subjects and protocols are not uniform. We classified DE methods according to the best of our knowledge and thus it reflects our vision . Importantly, we do not differentiate between true DE (which is an umbrella term for various approaches) and the selection strategies. We subdivided DE protocols into two large divisions: methods for generation of genetic diversity and methods for selections. graph LR A(Directed Evolution resources) --> B(discrete protocols) A --> C(continuous protocols) B --> D(producing genetic diversity) B --> E(selection methods) E --> F(for enzymes) E --> G(for binders) A --> H(Genomes evolution) A --> I(computational tools) The latter is further subdivided into the selection of binders and the selection of enzymes. Also, we could not ignore two important fields of research: continuous DE and Genomes evolution. And finally, we added a chapter on computational tools for genetic library design and characterisation Creating genetic diversity Error-prone PCR Recombinatorial gene and domain shuffling Laboratory Selection methods Selection of binders Phage display Cell surface display Ribosome display cDNA display & mRNA display CIS display SELEX Selection of enzymes and reporters Screening based on survival Selection based on biochemical assays Selection using in vitro compartmentalisation Continuous directed evolution methods Phage-assisted continuous evolution In situ targeted mutagenesis (EvolvR, OrthoRep) Computational tools for library creation, design and analysis Genome evolution MAGE Adaptive Laboratory Evolution Scramble","title":"Introduction"},{"location":"resources/introduction.html#introduction","text":"Directed evolution (DE) aims to improve the activity of biological entities (molecules, bacterial strains etc.) via exploiting principles of Darwinian selection in a controlled laboratory environment. DE is performed in rounds by repeating two main steps: diversification of a genetic material and selection of the molecules encoded by it for the desired property. The evolution experiments spans from the living cells, their consortia (ecosystems) to heavily reduced in complexity in vitro systems (e.g. transcription-translation). Importantly, DE is inherently probabilistic, and hence its exact outcomes are unpredictable, just as natural evolution is. Thus, DE strategies are perfectly fit for harnessing biological complexity whereby unpredictability and irrationality, however still unwanted, are increasingly considered to be an asset. Indeed, random search and feedback controls, which are inherent parts of any DE approach are the only language nature engages. Development of the DE field creates possibilities to work with living systems, guiding their genetic algorithms, by following rules of these systems as opposed to controlling them. From this point of view, DE is may be the furthest from rational engineering in the realm of synthetic biology. A thorough understanding of the DE experimental design is required to increase the chances for its successful implementation. This resource is here to help you with this. It gives a basic overview of the types of DE experiments, their experimental logic, ways to create and characterise genetic libraries, design selection schemes and perform final analysis. Importantly, This page is not intended to be complete but rather to be a welcoming and informative resource for you to learn more about the marvellous field called Directed Evolution! DE field is vast and its subjects and protocols are not uniform. We classified DE methods according to the best of our knowledge and thus it reflects our vision . Importantly, we do not differentiate between true DE (which is an umbrella term for various approaches) and the selection strategies. We subdivided DE protocols into two large divisions: methods for generation of genetic diversity and methods for selections. graph LR A(Directed Evolution resources) --> B(discrete protocols) A --> C(continuous protocols) B --> D(producing genetic diversity) B --> E(selection methods) E --> F(for enzymes) E --> G(for binders) A --> H(Genomes evolution) A --> I(computational tools) The latter is further subdivided into the selection of binders and the selection of enzymes. Also, we could not ignore two important fields of research: continuous DE and Genomes evolution. And finally, we added a chapter on computational tools for genetic library design and characterisation Creating genetic diversity Error-prone PCR Recombinatorial gene and domain shuffling Laboratory Selection methods Selection of binders Phage display Cell surface display Ribosome display cDNA display & mRNA display CIS display SELEX Selection of enzymes and reporters Screening based on survival Selection based on biochemical assays Selection using in vitro compartmentalisation Continuous directed evolution methods Phage-assisted continuous evolution In situ targeted mutagenesis (EvolvR, OrthoRep) Computational tools for library creation, design and analysis Genome evolution MAGE Adaptive Laboratory Evolution Scramble","title":"Introduction"},{"location":"resources/lab_selection_methods.html","text":"Laboratory selection methods Clever selection schemes empower directed evolution. And as many functionalities and objectives there are as many there are selection protocols. We aimed to give you an overview of the most basic ones. For simplicity we focused our review largely on molecular directed evolution approaches and divided the selection schemes into two large classes: - Selection of binders - Selection of enzymes and reporters","title":"Laboratory selection methods"},{"location":"resources/lab_selection_methods.html#laboratory-selection-methods","text":"Clever selection schemes empower directed evolution. And as many functionalities and objectives there are as many there are selection protocols. We aimed to give you an overview of the most basic ones. For simplicity we focused our review largely on molecular directed evolution approaches and divided the selection schemes into two large classes: - Selection of binders - Selection of enzymes and reporters","title":"Laboratory selection methods"},{"location":"resources/mRNAdisplay.html","text":"Introduction Both mRNA and cDNA display are based on in vitro transcription-translation systems. The rationale behind developing these two types of displays was to (1) eliminate the reliance on the formation of stalled ribosome complex which is unstable and prone to dissociation and (2), mRNA has known stability issues itself, hence the goal was to reverse transcribe it before performing the subsequent selection, respectively. These methods are typically used for finding protein-, peptide- or peptidomimetic binders. The main advantage of this method is library size that can theoretically reach 1015 mutants. This roughly corresponds to 12 randomised positions in a peptide. Additionally, performing selection in vitro gives control over a wide range of experimental conditions including the use of exotic chemistries (for the search of enzymes) and non-proteogenic modified amino acids in case of peptidomimetic selection. Principle of the mRNA and cDNA displays As opposed to the Ribosome display, where mRNA and the nascent chain (= protein or peptide) are physically connected via a stalled ribosome, in the mRNA display, a nascent chain gets attached covalently to its mRNA via the antibiotic puromycin, that is coupled to it. Puromycin resembles 3\u2019-end of tyrosyl-tRNA. Specifically, it contains para-methyl-tyrosine linked via a stable amide bond to 3\u2019-amino group of the modified adenosine. Normally, its incorporation into the growing protein chain leads to the termination of protein synthesis. In the late 90s, the group of Jack Szostak (https://www.pnas.org/content/94/23/12297.long) realised that puromycin can be linked to an oligonucleotide which, in turn, can also be ligated to mRNA. Thus translation of such mRNA-oligo-puromycin will eventually lead to the formation of a linkage between a newly translated protein and its encoding mRNA on the ribosome. In the cDNA display (https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkp514), puromycin is attached to a branched DNA oligo which has two other functionalities: (1) biotin for quick removal of mRNA-DNA-protein from the in vitro translation system to avoid mRNA degradation (2) primer for reverse-transcription reaction and (3) restriction site for the release of the cDNA-protein complex from the beads for the subsequent selection. Advantage of cDNA display include: \u2022 Effectively cancellation of mRNA instability. \u2022 In some instances mRNA can fold and thus also bind the bait which may bias the selection. cDNA typically does not have such property and thus selection is \u2018cleaner\u2019. \u2022 Puromycin-mRNA linkage is prepared cheaply and very effectively by the use of T4 DNA ligase \u2022 Translated protein/peptide which contains many disulphide bridges can be refolded after the cDNA synthesis and before selection. Challenges Dealing with setting up an in vitro translation systems inherently requires optimisations depending on the type of protein to be selected or display techniques they are used in. Other potential problems may include: \u2022 mRNA display\u2019s probably the main problem is that puromycin in the mRNA is inefficiently attached to the nascent chain. However, a plethora of optimisations have been done on this subject with regards to the sequence and length of the oligo linkers between puromycin and the mRNA https://www.sciencedirect.com/science/article/pii/S0168165615300997, https://link.springer.com/protocol/10.1007/978-1-4939-8648-4_14). \u2022 mRNA is very labile particularly in certain in vitro translation systems (Escherichia coli S30 extract) \u2022 The mRNA, cDNA and other homogeneous in vitro display methods are limited to the selection of binders. However, there are reports of enzyme selection (https://www.nature.com/articles/nprot.2011.312). In all of them, only a single turnover reaction can be selected for. Ultimately, selection for the multiple turnover enzymatic reaction requires encapsulation of the mRNA(cDNA)-protein complex. \u2022 All of the homogeneous in vitro assays are poorly suitable for selection of membrane-associated proteins. Future directions There is certainly a need to accommodate principles of mRNA or cDNA display for the use in a natural context - the cell. The main advantage of these methods is the coupling of every expressed protein to its corresponding cDNA/mRNA, the latter then can be efficiently detected as opposed to the low-sensitivity proteomics readouts. Starting from the report on high-throughput protein-protein interaction studied in vitro in 2014 (https://www.nature.com/articles/s41467-020-16140-9) there was only one attempt so far to develop mRNA display in vivo https://doi.org/10.1073/pnas.2002650117 that was published in 2020. Other potential avenues to further improve mRNA and cDNA display logically comes from their weak points described above. The issue of mRNA stability was largely addressed by utilising translation systems reconstituted from individual components (PURE, https://www.authorea.com/doi/full/10.22541/au.159129081.14061266). The same PURE-based system can also be used for the selection of enzymes due to the absence of the parasitic background activities in the translation mix.","title":"cDNA display & mRNA display"},{"location":"resources/mRNAdisplay.html#introduction","text":"Both mRNA and cDNA display are based on in vitro transcription-translation systems. The rationale behind developing these two types of displays was to (1) eliminate the reliance on the formation of stalled ribosome complex which is unstable and prone to dissociation and (2), mRNA has known stability issues itself, hence the goal was to reverse transcribe it before performing the subsequent selection, respectively. These methods are typically used for finding protein-, peptide- or peptidomimetic binders. The main advantage of this method is library size that can theoretically reach 1015 mutants. This roughly corresponds to 12 randomised positions in a peptide. Additionally, performing selection in vitro gives control over a wide range of experimental conditions including the use of exotic chemistries (for the search of enzymes) and non-proteogenic modified amino acids in case of peptidomimetic selection.","title":"Introduction"},{"location":"resources/mRNAdisplay.html#principle-of-the-mrna-and-cdna-displays","text":"As opposed to the Ribosome display, where mRNA and the nascent chain (= protein or peptide) are physically connected via a stalled ribosome, in the mRNA display, a nascent chain gets attached covalently to its mRNA via the antibiotic puromycin, that is coupled to it. Puromycin resembles 3\u2019-end of tyrosyl-tRNA. Specifically, it contains para-methyl-tyrosine linked via a stable amide bond to 3\u2019-amino group of the modified adenosine. Normally, its incorporation into the growing protein chain leads to the termination of protein synthesis. In the late 90s, the group of Jack Szostak (https://www.pnas.org/content/94/23/12297.long) realised that puromycin can be linked to an oligonucleotide which, in turn, can also be ligated to mRNA. Thus translation of such mRNA-oligo-puromycin will eventually lead to the formation of a linkage between a newly translated protein and its encoding mRNA on the ribosome. In the cDNA display (https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkp514), puromycin is attached to a branched DNA oligo which has two other functionalities: (1) biotin for quick removal of mRNA-DNA-protein from the in vitro translation system to avoid mRNA degradation (2) primer for reverse-transcription reaction and (3) restriction site for the release of the cDNA-protein complex from the beads for the subsequent selection. Advantage of cDNA display include: \u2022 Effectively cancellation of mRNA instability. \u2022 In some instances mRNA can fold and thus also bind the bait which may bias the selection. cDNA typically does not have such property and thus selection is \u2018cleaner\u2019. \u2022 Puromycin-mRNA linkage is prepared cheaply and very effectively by the use of T4 DNA ligase \u2022 Translated protein/peptide which contains many disulphide bridges can be refolded after the cDNA synthesis and before selection.","title":"Principle of the mRNA and cDNA displays"},{"location":"resources/mRNAdisplay.html#challenges","text":"Dealing with setting up an in vitro translation systems inherently requires optimisations depending on the type of protein to be selected or display techniques they are used in. Other potential problems may include: \u2022 mRNA display\u2019s probably the main problem is that puromycin in the mRNA is inefficiently attached to the nascent chain. However, a plethora of optimisations have been done on this subject with regards to the sequence and length of the oligo linkers between puromycin and the mRNA https://www.sciencedirect.com/science/article/pii/S0168165615300997, https://link.springer.com/protocol/10.1007/978-1-4939-8648-4_14). \u2022 mRNA is very labile particularly in certain in vitro translation systems (Escherichia coli S30 extract) \u2022 The mRNA, cDNA and other homogeneous in vitro display methods are limited to the selection of binders. However, there are reports of enzyme selection (https://www.nature.com/articles/nprot.2011.312). In all of them, only a single turnover reaction can be selected for. Ultimately, selection for the multiple turnover enzymatic reaction requires encapsulation of the mRNA(cDNA)-protein complex. \u2022 All of the homogeneous in vitro assays are poorly suitable for selection of membrane-associated proteins.","title":"Challenges"},{"location":"resources/mRNAdisplay.html#future-directions","text":"There is certainly a need to accommodate principles of mRNA or cDNA display for the use in a natural context - the cell. The main advantage of these methods is the coupling of every expressed protein to its corresponding cDNA/mRNA, the latter then can be efficiently detected as opposed to the low-sensitivity proteomics readouts. Starting from the report on high-throughput protein-protein interaction studied in vitro in 2014 (https://www.nature.com/articles/s41467-020-16140-9) there was only one attempt so far to develop mRNA display in vivo https://doi.org/10.1073/pnas.2002650117 that was published in 2020. Other potential avenues to further improve mRNA and cDNA display logically comes from their weak points described above. The issue of mRNA stability was largely addressed by utilising translation systems reconstituted from individual components (PURE, https://www.authorea.com/doi/full/10.22541/au.159129081.14061266). The same PURE-based system can also be used for the selection of enzymes due to the absence of the parasitic background activities in the translation mix.","title":"Future directions"},{"location":"resources/phage_display.html","text":"The phage display Introduction. Phage display is a laboratory technique used for the high-throughput screening of protein- and peptide-binders. In this technique, a gene encoding a protein of interest (POI) is expressed in frame (i.e. as a fusion) with the phage coat protein gene, causing the phage to \"display\" the protein on its outside. The phage itself serves as a 'vessel' connecting the displayed phenotype and genotype. The displaying phages can then be screened against various bait molecules (proteins, peptides or DNA sequences) for specific interaction with them. In this way, large libraries of proteins can be screened and amplified in a process called in vitro selection. The most common bacteriophages used in phage display are M13 and FD filamentous phage, though T4, T7, and \u03bb phage are also used. General principle. In the M13 phage display, the DNA encoding POI is expressed N-terminally with either pIII or pVIII gene, which encodes the minor and major coat proteins. The pIII gene is responsible for binding to E.coli via associating with the F' pilus thereby triggering infection. Certain E.coli strains are suitable for this purpose: TG1, SS320, ER2738, or XL1-Blue. Fusing POI to the pIII N-terminus ensures correct exposure of a target peptide for the interaction with a bait molecule. The POIs of sizes less than 50 amino acids largely don't affect the main function of the coat protein - phage infectivity. For larger POIs a \"phagemid\" vector is used (a simplified display construct vector) that encodes a fused version of the coat-protein with the intact coat protein (and other phage lifecyle-components) provided by a helper phage. Upon infection, intact pIII competes with POI-pIII fusion resulting in a large portion of the phage population not displaying POI and a small portion that would contain on average a single copy of POI-pIII per phage particle. Use of phagemid is beneficial in two ways: ( 1 ) smaller vector enables higher transformation efficiency hence higher genetic diversity libraries; ( 2 ) use of monovalent display of POI on phages often results in selection of higher affinity binders due to the absence of an 'avidity' effect. The bait molecules are typically immobilised on the surface of a microtiter plate. Phages that tightly interact with the bait will remain attached to the plate while the majority of the phage population will be washed away. The remaining phage are then eluted and amplified again in the next round of bacterial infection resulting in a phage mixture enriched with phages that bind the target molecule. This process is referred to as panning is typically repeated a number of times to establish high level of enrichment of phages encoding tight-binder POIs. Phage eluted in the final step can then be used to infect a suitable bacterial host, from which the phagemids are collected and subsequently analysed by NGS or Sanger sequencing coupled with ELISA. The use of a helper phage can be eliminated by using 'bacterial packaging cell line' technology 1 . Elution is usually carried out by using trypsin to digest the bait protein and presented binding protein, thus releasing the bound phage, or by using low pH buffer to dissociate electrostatic interactions. Competitive elution can also be used if a known binder is available and binder for a specific region (e.g. a catalytic pocket) is desired. General protocol. A common protocol for the phage display would consist of the following steps: 1. Bait protein or DNA molecules are immobilized to the wells of a microtiter plate either chemically or via biotin:streptavidin interaction. 2. GOI sequences are expressed in the bacteriophage library as a fusion with a bacteriophage coat protein. 3. This phage-display library is added to the dish and after allowing the phage time to bind, the dish is washed. 4. Phage-displaying proteins that interact with the target molecules remain attached to the dish, while all others are washed away. 5. Attached phage may be eluted and used to create more phage by infection of suitable bacterial hosts. The new phage constitutes an enriched mixture, containing considerably less irrelevant phage (i.e. non-binding) than were present in the initial mixture. 6. Steps 3 to 5 are optionally repeated one or more times, further enriching the phage library for high-affinity binding phages. 7. Following further bacterial-based amplification, the DNA within the interacting phage is sequenced to identify the interacting proteins or protein fragments. Challenges and requirements Benefits. The protocols are very well described and the techniques have been used for a long time now. The availability of different commercial kits makes this technique easy to be performed by non-experts. Phage display is quick, with four rounds of selection and screening feasible within two weeks. Problems. Given the biology of the phages, fast-growing phages will be enriched and peptides that are not relevant for the binding isolated. Also non-specific binders are often enriched because of the affinity of certain peptide/protein variants to the plastic of the titer plates or other supports used during the panning. Level of complexity. This technique is relatively easy, especially if starting from commercial kits. However, it is more complex if beginning from a different starting point and if rounds of diversification are needed. Materials and resources are the ones used in standard molecular biology techniques and instruments. However, to harvest phages, ultracentrifugation may be required. A plate reader is useful for reading ELISA plates, and the materials for ELISA needed for characterizing the binding of selected peptides can be expensive. References and useful protocols The best protocol to start with is the one present in the manual of the commercially available NEB kit for phage display: These kits starts from random short peptide sequences, if the starting point is a non-random sequence then the target sequence should be cloned into M13 KE cloning phage following protocols also from NEB Most of the relevant protocols for immobilization of the targets on the different solid support are also available on the NEB webpage Chasteen L, Ayriss J, Pavlik P, Bradbury AR. Eliminating helper phage from phage display. Nucleic Acids Res. 2006;34(21):e145.https://doi.org/10.1093/nar/gkl772 \u21a9","title":"Phage display"},{"location":"resources/phage_display.html#the-phage-display","text":"","title":"The phage display"},{"location":"resources/phage_display.html#introduction","text":"Phage display is a laboratory technique used for the high-throughput screening of protein- and peptide-binders. In this technique, a gene encoding a protein of interest (POI) is expressed in frame (i.e. as a fusion) with the phage coat protein gene, causing the phage to \"display\" the protein on its outside. The phage itself serves as a 'vessel' connecting the displayed phenotype and genotype. The displaying phages can then be screened against various bait molecules (proteins, peptides or DNA sequences) for specific interaction with them. In this way, large libraries of proteins can be screened and amplified in a process called in vitro selection. The most common bacteriophages used in phage display are M13 and FD filamentous phage, though T4, T7, and \u03bb phage are also used.","title":"Introduction."},{"location":"resources/phage_display.html#general-principle","text":"In the M13 phage display, the DNA encoding POI is expressed N-terminally with either pIII or pVIII gene, which encodes the minor and major coat proteins. The pIII gene is responsible for binding to E.coli via associating with the F' pilus thereby triggering infection. Certain E.coli strains are suitable for this purpose: TG1, SS320, ER2738, or XL1-Blue. Fusing POI to the pIII N-terminus ensures correct exposure of a target peptide for the interaction with a bait molecule. The POIs of sizes less than 50 amino acids largely don't affect the main function of the coat protein - phage infectivity. For larger POIs a \"phagemid\" vector is used (a simplified display construct vector) that encodes a fused version of the coat-protein with the intact coat protein (and other phage lifecyle-components) provided by a helper phage. Upon infection, intact pIII competes with POI-pIII fusion resulting in a large portion of the phage population not displaying POI and a small portion that would contain on average a single copy of POI-pIII per phage particle. Use of phagemid is beneficial in two ways: ( 1 ) smaller vector enables higher transformation efficiency hence higher genetic diversity libraries; ( 2 ) use of monovalent display of POI on phages often results in selection of higher affinity binders due to the absence of an 'avidity' effect. The bait molecules are typically immobilised on the surface of a microtiter plate. Phages that tightly interact with the bait will remain attached to the plate while the majority of the phage population will be washed away. The remaining phage are then eluted and amplified again in the next round of bacterial infection resulting in a phage mixture enriched with phages that bind the target molecule. This process is referred to as panning is typically repeated a number of times to establish high level of enrichment of phages encoding tight-binder POIs. Phage eluted in the final step can then be used to infect a suitable bacterial host, from which the phagemids are collected and subsequently analysed by NGS or Sanger sequencing coupled with ELISA. The use of a helper phage can be eliminated by using 'bacterial packaging cell line' technology 1 . Elution is usually carried out by using trypsin to digest the bait protein and presented binding protein, thus releasing the bound phage, or by using low pH buffer to dissociate electrostatic interactions. Competitive elution can also be used if a known binder is available and binder for a specific region (e.g. a catalytic pocket) is desired.","title":"General principle."},{"location":"resources/phage_display.html#general-protocol","text":"A common protocol for the phage display would consist of the following steps: 1. Bait protein or DNA molecules are immobilized to the wells of a microtiter plate either chemically or via biotin:streptavidin interaction. 2. GOI sequences are expressed in the bacteriophage library as a fusion with a bacteriophage coat protein. 3. This phage-display library is added to the dish and after allowing the phage time to bind, the dish is washed. 4. Phage-displaying proteins that interact with the target molecules remain attached to the dish, while all others are washed away. 5. Attached phage may be eluted and used to create more phage by infection of suitable bacterial hosts. The new phage constitutes an enriched mixture, containing considerably less irrelevant phage (i.e. non-binding) than were present in the initial mixture. 6. Steps 3 to 5 are optionally repeated one or more times, further enriching the phage library for high-affinity binding phages. 7. Following further bacterial-based amplification, the DNA within the interacting phage is sequenced to identify the interacting proteins or protein fragments.","title":"General protocol."},{"location":"resources/phage_display.html#challenges-and-requirements","text":"","title":"Challenges and requirements"},{"location":"resources/phage_display.html#benefits","text":"The protocols are very well described and the techniques have been used for a long time now. The availability of different commercial kits makes this technique easy to be performed by non-experts. Phage display is quick, with four rounds of selection and screening feasible within two weeks.","title":"Benefits."},{"location":"resources/phage_display.html#problems","text":"Given the biology of the phages, fast-growing phages will be enriched and peptides that are not relevant for the binding isolated. Also non-specific binders are often enriched because of the affinity of certain peptide/protein variants to the plastic of the titer plates or other supports used during the panning.","title":"Problems."},{"location":"resources/phage_display.html#level-of-complexity","text":"This technique is relatively easy, especially if starting from commercial kits. However, it is more complex if beginning from a different starting point and if rounds of diversification are needed. Materials and resources are the ones used in standard molecular biology techniques and instruments. However, to harvest phages, ultracentrifugation may be required. A plate reader is useful for reading ELISA plates, and the materials for ELISA needed for characterizing the binding of selected peptides can be expensive.","title":"Level of complexity."},{"location":"resources/phage_display.html#references-and-useful-protocols","text":"The best protocol to start with is the one present in the manual of the commercially available NEB kit for phage display: These kits starts from random short peptide sequences, if the starting point is a non-random sequence then the target sequence should be cloned into M13 KE cloning phage following protocols also from NEB Most of the relevant protocols for immobilization of the targets on the different solid support are also available on the NEB webpage Chasteen L, Ayriss J, Pavlik P, Bradbury AR. Eliminating helper phage from phage display. Nucleic Acids Res. 2006;34(21):e145.https://doi.org/10.1093/nar/gkl772 \u21a9","title":"References and useful protocols"},{"location":"resources/ribodisplay.html","text":"Introduction After SELEX, ribosome display (RD) is probably the earliest in vitro selection techniques with its first variant reported in 1994 . It was developed largely as a quick and simple alternative to the phage display. To this day, it is probably the most common in vitro selection method which is typically used in finding protein- (e.g. single-chain antibodies) and peptide-binders. Principle of the Ribosome Display RD is based on the cell-free protein synthesis reaction except that the translated product is trapped on the translating ribosome along with its corresponding mRNA. This way both newly translated protein and the mRNA encoding it are kept physically connected throughout the selection procedure. Sequences of the proteins that bind tightest to the bait which is normally attached to a surface (chromatography column) get extracted from mRNA by firstly reverse transcribing it and then sequencing obtained DNA. There are both prokaryotic and eukaryotic versions of this protocol as well as one that is based on a fully reconstituted translation system PURE . The most popular RD protocol is based on the extract from Escherichia coli as it is relatively easy to make and many versions are commercially available. The use of crude E. coli extract provides both experimentally and financially viable route to this technology making this technique available to many laboratories. Challenges and limitations All- in vitro techniques, while being useful, come with an extensive optimisation burden. In contrast to the selection in living cells, in vitro systems do not inherently possess self-regulatory mechanisms thus conditions for a given in vitro selection system must be meticulously reproduced. Secondly, success in setting up useful RD depends on two factors: high activity cell-free system (gladly, you simply can buy it) and stability of nascent chain Ribosome mRNA complex. While the use of the crude extracts (E. coli or rabbit reticulocyte) are perfectly suitable for RD, the stability of protein ribosome mRNA complexes is heavily compromised. Ribosome complexes are dissociated due to the activity of E. coli endogenous factors that help cells recover from ribosomes stalling during cell growth. The mRNA is particularly prone for RNAse cleavage, while the nascent chain can be proteolytically degraded. A eukaryotic version of RD is particularly useful for selection of hard to fold proteins or whenever an environment of eukaryotic cytosol is required. Examples Ribosome display is a potent tool for the selection of binders that has been developed further: RD was used in high-throughput protein-protein interactions studies . The use of the fully reconstituted translation mix (PURE) which is largely void of protease and nuclease activities has been finding application since the early 2000s. The notion of using PURE mix is particularly promising, as the production of this translation mixture was recently democratised . Recently, RD coupled with \u2018in vitro integrated synthesis, assembly, and translation\u2019 (iSAT) was used in the engineering of the ribosome . Generally, RD is perfectly suitable for directed evolution of components of the translation apparatus. Links to the protocols and references The first report on the use of Ribosome display Mattheakis, L. C., Bhatt, R. R., & Dower, W. J. (1994). An in vitro polysome display system for identifying ligands from very large peptide libraries. Proceedings of the National Academy of Sciences of the United States of America, 91, 9022\u20139026 https://doi.org/10.1073/pnas.91.19.9022 Following protocols are the most useful and detailed. The most comprehensive protocols which are based on crude E. coli extract Use of PURE translation mix is demonstrated in this methodological paper A good example of the use eukaryotic RD is here","title":"Ribosome display"},{"location":"resources/ribodisplay.html#introduction","text":"After SELEX, ribosome display (RD) is probably the earliest in vitro selection techniques with its first variant reported in 1994 . It was developed largely as a quick and simple alternative to the phage display. To this day, it is probably the most common in vitro selection method which is typically used in finding protein- (e.g. single-chain antibodies) and peptide-binders.","title":"Introduction"},{"location":"resources/ribodisplay.html#principle-of-the-ribosome-display","text":"RD is based on the cell-free protein synthesis reaction except that the translated product is trapped on the translating ribosome along with its corresponding mRNA. This way both newly translated protein and the mRNA encoding it are kept physically connected throughout the selection procedure. Sequences of the proteins that bind tightest to the bait which is normally attached to a surface (chromatography column) get extracted from mRNA by firstly reverse transcribing it and then sequencing obtained DNA. There are both prokaryotic and eukaryotic versions of this protocol as well as one that is based on a fully reconstituted translation system PURE . The most popular RD protocol is based on the extract from Escherichia coli as it is relatively easy to make and many versions are commercially available. The use of crude E. coli extract provides both experimentally and financially viable route to this technology making this technique available to many laboratories.","title":"Principle of the Ribosome Display"},{"location":"resources/ribodisplay.html#challenges-and-limitations","text":"All- in vitro techniques, while being useful, come with an extensive optimisation burden. In contrast to the selection in living cells, in vitro systems do not inherently possess self-regulatory mechanisms thus conditions for a given in vitro selection system must be meticulously reproduced. Secondly, success in setting up useful RD depends on two factors: high activity cell-free system (gladly, you simply can buy it) and stability of nascent chain Ribosome mRNA complex. While the use of the crude extracts (E. coli or rabbit reticulocyte) are perfectly suitable for RD, the stability of protein ribosome mRNA complexes is heavily compromised. Ribosome complexes are dissociated due to the activity of E. coli endogenous factors that help cells recover from ribosomes stalling during cell growth. The mRNA is particularly prone for RNAse cleavage, while the nascent chain can be proteolytically degraded. A eukaryotic version of RD is particularly useful for selection of hard to fold proteins or whenever an environment of eukaryotic cytosol is required.","title":"Challenges and limitations"},{"location":"resources/ribodisplay.html#examples","text":"Ribosome display is a potent tool for the selection of binders that has been developed further: RD was used in high-throughput protein-protein interactions studies . The use of the fully reconstituted translation mix (PURE) which is largely void of protease and nuclease activities has been finding application since the early 2000s. The notion of using PURE mix is particularly promising, as the production of this translation mixture was recently democratised . Recently, RD coupled with \u2018in vitro integrated synthesis, assembly, and translation\u2019 (iSAT) was used in the engineering of the ribosome . Generally, RD is perfectly suitable for directed evolution of components of the translation apparatus.","title":"Examples"},{"location":"resources/ribodisplay.html#links-to-the-protocols-and-references","text":"The first report on the use of Ribosome display Mattheakis, L. C., Bhatt, R. R., & Dower, W. J. (1994). An in vitro polysome display system for identifying ligands from very large peptide libraries. Proceedings of the National Academy of Sciences of the United States of America, 91, 9022\u20139026 https://doi.org/10.1073/pnas.91.19.9022 Following protocols are the most useful and detailed. The most comprehensive protocols which are based on crude E. coli extract Use of PURE translation mix is demonstrated in this methodological paper A good example of the use eukaryotic RD is here","title":"Links to the protocols and references"},{"location":"resources/selex.html","text":"Introduction SELEX or Systematic Evolution of Ligands by Exponential Enrichment is the oldest technique among all-in vitro selection methods. It has been developed to find tighter nucleic acid binders to any protein and better understand the principles of this interaction. It dates back to 1990 with reports from Ellington&Szostak (https://www.nature.com/articles/346818a0) and Tuerk&Gold (https://science.sciencemag.org/content/249/4968/505). Since then it has been developed into a mature method with a wide range of its varieties which include in the most advanced in vivo-SELEX (https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30151-7), and cell-SELEX (https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30151-7). Similar to other in vitro approaches it allows screening of libraries up to 1015 members. It is mainly limited to the selection of nucleic acids aptamers - natural (RNA or DNA) or synthetic (Xenonucleic acids or XNAs). Principle A typical library would contain 1015 individual oligonucleotides each of which is composed of a random region (20\u201350 nt) flanked by two standard primer binding sites for subsequent reverse transcription (if needed) and PCR amplification. In the selection step, this pool is incubated with target molecules, which may be attached to the surface (chromatography sorbent or nitrocellulose filter). After incubation, the column is washed and those oligonucleotides that are retained get eluted. A target-bound pool is then amplified in (RT-)PCR and this new enriched library is used in the next round of selection. Ten or more selection rounds are performed and the final library is NGS-screened for enriched motifs. Ultimately, the most representative members in the final library are further characterised in terms of their binding to a bait molecule. Challenges and requirements There are main challenges to this method: The bait molecule is typically attached on the resin which introduces a steric hindrance and biases the selection Nuclease degradation is an issue in RNA and DNA especially for SELEX performed in vivo. Typically selection is performed out of the context in vitro, whereas obtained aptamers are often aimed at use in vivo. This issue has been lately addressed in multiple reports (https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30151-7). Future directions Overall, SELEX is an umbrella term for a wide variety of methods. It is a good technique to introduce oneself into the in vitro selection world. In its simplest form, it requires only a minimal set of instruments and materials. More advanced versions of SELEX (e.g. in vivo) are obviously harder to implement, but developments in this field are highly important for the diagnostic and therapeutic use of aptamers and thus streamlining of these protocols is expected.","title":"SELEX"},{"location":"resources/selex.html#introduction","text":"SELEX or Systematic Evolution of Ligands by Exponential Enrichment is the oldest technique among all-in vitro selection methods. It has been developed to find tighter nucleic acid binders to any protein and better understand the principles of this interaction. It dates back to 1990 with reports from Ellington&Szostak (https://www.nature.com/articles/346818a0) and Tuerk&Gold (https://science.sciencemag.org/content/249/4968/505). Since then it has been developed into a mature method with a wide range of its varieties which include in the most advanced in vivo-SELEX (https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30151-7), and cell-SELEX (https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30151-7). Similar to other in vitro approaches it allows screening of libraries up to 1015 members. It is mainly limited to the selection of nucleic acids aptamers - natural (RNA or DNA) or synthetic (Xenonucleic acids or XNAs).","title":"Introduction"},{"location":"resources/selex.html#principle","text":"A typical library would contain 1015 individual oligonucleotides each of which is composed of a random region (20\u201350 nt) flanked by two standard primer binding sites for subsequent reverse transcription (if needed) and PCR amplification. In the selection step, this pool is incubated with target molecules, which may be attached to the surface (chromatography sorbent or nitrocellulose filter). After incubation, the column is washed and those oligonucleotides that are retained get eluted. A target-bound pool is then amplified in (RT-)PCR and this new enriched library is used in the next round of selection. Ten or more selection rounds are performed and the final library is NGS-screened for enriched motifs. Ultimately, the most representative members in the final library are further characterised in terms of their binding to a bait molecule.","title":"Principle"},{"location":"resources/selex.html#challenges-and-requirements","text":"There are main challenges to this method: The bait molecule is typically attached on the resin which introduces a steric hindrance and biases the selection Nuclease degradation is an issue in RNA and DNA especially for SELEX performed in vivo. Typically selection is performed out of the context in vitro, whereas obtained aptamers are often aimed at use in vivo. This issue has been lately addressed in multiple reports (https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30151-7).","title":"Challenges and requirements"},{"location":"resources/selex.html#future-directions","text":"Overall, SELEX is an umbrella term for a wide variety of methods. It is a good technique to introduce oneself into the in vitro selection world. In its simplest form, it requires only a minimal set of instruments and materials. More advanced versions of SELEX (e.g. in vivo) are obviously harder to implement, but developments in this field are highly important for the diagnostic and therapeutic use of aptamers and thus streamlining of these protocols is expected.","title":"Future directions"},{"location":"team_wiki/access_repo.html","text":"Accessing your wiki repository You will need permission to write directly into and configure settings in your team wiki repository. To do so, follow the steps below: Register for a GitHub account if you do not have one yet Go to reg.idec.io/accounts/social/connections/ and sign in Under Add a third party account , click Sign in with GitHub Authorize the iDEC Team Portal app Take note that: a. App is created by idechq-bot b. App redirects to https://reg.idec.io/ Check that your GitHub account is now connected to your registered account Go to the Team tab Click the green GitHub icon button for your team You will be redirected to a new page. Here, check that your team information is correct At the bottom of the page, the system should have detected your connected GitHub username(s) Pick the username you want to add, if you connected multiple GitHub accounts Click on the submit button You should see 3 success messages near the top of the page if you are successfully invited Check your email (the one registered with GitHub) and look for an invitation to join the repository Accept the invitation You can now manage your wiki repository with maintain permission Attention You will not be able to join your assigned wiki repository when wiki-freeze commences. Error due to double connections You cannot connect the same GitHub account more than once to the iDEC Team Portal. If you run into a \"Social Login\" failure page, it could be due to your attempt to connect your GitHub account again. A potential fix for this issue, is to login to your GitHub account and visit the settings, applications configuration. Under Authorized OAuth Apps , choose iDEC Team Portal , and then Revoke access . This will disconnect your GitHub account with the Team Portal and you can try to reconnect again. Other issues? If you run into any issues please contact us in our Slack workspace iDEC2021 . You can also email us at support@idechq.org .","title":"Accessing your team wiki repository"},{"location":"team_wiki/access_repo.html#accessing-your-wiki-repository","text":"You will need permission to write directly into and configure settings in your team wiki repository. To do so, follow the steps below: Register for a GitHub account if you do not have one yet Go to reg.idec.io/accounts/social/connections/ and sign in Under Add a third party account , click Sign in with GitHub Authorize the iDEC Team Portal app Take note that: a. App is created by idechq-bot b. App redirects to https://reg.idec.io/ Check that your GitHub account is now connected to your registered account Go to the Team tab Click the green GitHub icon button for your team You will be redirected to a new page. Here, check that your team information is correct At the bottom of the page, the system should have detected your connected GitHub username(s) Pick the username you want to add, if you connected multiple GitHub accounts Click on the submit button You should see 3 success messages near the top of the page if you are successfully invited Check your email (the one registered with GitHub) and look for an invitation to join the repository Accept the invitation You can now manage your wiki repository with maintain permission Attention You will not be able to join your assigned wiki repository when wiki-freeze commences.","title":"Accessing your wiki repository"},{"location":"team_wiki/access_repo.html#error-due-to-double-connections","text":"You cannot connect the same GitHub account more than once to the iDEC Team Portal. If you run into a \"Social Login\" failure page, it could be due to your attempt to connect your GitHub account again. A potential fix for this issue, is to login to your GitHub account and visit the settings, applications configuration. Under Authorized OAuth Apps , choose iDEC Team Portal , and then Revoke access . This will disconnect your GitHub account with the Team Portal and you can try to reconnect again.","title":"Error due to double connections"},{"location":"team_wiki/access_repo.html#other-issues","text":"If you run into any issues please contact us in our Slack workspace iDEC2021 . You can also email us at support@idechq.org .","title":"Other issues?"},{"location":"team_wiki/envr.html","text":"Set up an environment for wiki editing Now that you have a local repository, you can create a local live server . When you make changes to the file in the local repository, the live server will let you visualize those changes immediately. We need to set up an environment for the live server. There are two ways do so: Install a Python environment and the dependencies (simplier for Windows and not so friendly for Macs) In a Docker container (recommended for Mac, also for Windows users who aim to get the most robust environement) Python Installation Install Python or Install Anaconda On Mac, open a command line terminal On Windows, open the Python terminal, or, the Anaconda Prompt In the terminal, run the command: pip install mkdocs-material Wait for the process to complete Serve In the terminal, navigate into the team-wiki folder where your local repository is, e.g..: cd.. Documents/GitHub/team-wiki Run the command ls (Mac) or dir (Windows), you should see a list of files and a folder, including: the docs folder where .md files are stored, the wiki contents are in the .md files mkdocs.yml , a configuration file Run: mkdocs serve You should see a message saying that changes are being detected Docker Docker container. This ensure that you will always get the same environment for running certain application, regardless of the operating system / existing software that you have already installed on your computer. Installation Install Docker Desktop Windows users will need to follow enable Windows Subsystem for Linux (WSL2) beforehand See the Docker documentation for doing so. Open a command line terminal For Windows users, open a PowerShell / Linux terminal In the terminal, run the command: docker pull squidfunk/mkdocs-material Wait for the process to complete Start a container In the terminal, navigate into the team-wiki folder where your local repository is, e.g..: cd.. Documents/GitHub/team-wiki Run the command ls , you should see a list of files and a folder, including: the docs folder where .md files are stored, the wiki contents are in the .md files mkdocs.yml , a configuration file Run the following command in the terminal to set up a local live server: docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material You should see a message saying that changes are being detected: Do not close the terminal and return to your desktop Caution If you close the terminal by accident, the following steps will not work. In that case, open a new terminal and start from Step 1 again. Preview Whether you are using a Docker container or a Python environment, the rest of the steps are the same. Open your browser of choice (e.g. Chrome, Safari, Firefox, etc.), connect to the live server by typing localhost:8000 in the address bar and hit Enter You should now see the wiki site being rendered locally In the browser, click on \"Background\" in the lefthand side navigation menu Or, go to localhost:8000/background/ You will see a most empty page Use any integrated development environment (IDE) or plain text editor of your choice, e.g. VS Code , Notepad (Windows) or TextEdit (MacOS), open the file docs/bakground.md in your local repository folder You should see an empty file Copy and paste the following texts into docs/bakground.md , then save the file and close it # Project Background Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Return to the browser at localhost:8000/background/ You should now see the page being populated with the new title and content Shut down the container When you are done editing and no longer need your browser, go back to the terminal, hit Ctrl + C on your keyboard to exit the live server. Screenshot above is for Docker, but the message will be the same for a Python environment. Once you have done so, refreshing the page should give you a 404 error. In the future, should you wish to start the live server again, you do not need to repeat the installation steps.","title":"Environment for editing"},{"location":"team_wiki/envr.html#set-up-an-environment-for-wiki-editing","text":"Now that you have a local repository, you can create a local live server . When you make changes to the file in the local repository, the live server will let you visualize those changes immediately. We need to set up an environment for the live server. There are two ways do so: Install a Python environment and the dependencies (simplier for Windows and not so friendly for Macs) In a Docker container (recommended for Mac, also for Windows users who aim to get the most robust environement)","title":"Set up an environment for wiki editing"},{"location":"team_wiki/envr.html#python","text":"","title":"Python"},{"location":"team_wiki/envr.html#installation","text":"Install Python or Install Anaconda On Mac, open a command line terminal On Windows, open the Python terminal, or, the Anaconda Prompt In the terminal, run the command: pip install mkdocs-material Wait for the process to complete","title":"Installation"},{"location":"team_wiki/envr.html#serve","text":"In the terminal, navigate into the team-wiki folder where your local repository is, e.g..: cd.. Documents/GitHub/team-wiki Run the command ls (Mac) or dir (Windows), you should see a list of files and a folder, including: the docs folder where .md files are stored, the wiki contents are in the .md files mkdocs.yml , a configuration file Run: mkdocs serve You should see a message saying that changes are being detected","title":"Serve"},{"location":"team_wiki/envr.html#docker","text":"Docker container. This ensure that you will always get the same environment for running certain application, regardless of the operating system / existing software that you have already installed on your computer.","title":"Docker"},{"location":"team_wiki/envr.html#installation_1","text":"Install Docker Desktop Windows users will need to follow enable Windows Subsystem for Linux (WSL2) beforehand See the Docker documentation for doing so. Open a command line terminal For Windows users, open a PowerShell / Linux terminal In the terminal, run the command: docker pull squidfunk/mkdocs-material Wait for the process to complete","title":"Installation"},{"location":"team_wiki/envr.html#start-a-container","text":"In the terminal, navigate into the team-wiki folder where your local repository is, e.g..: cd.. Documents/GitHub/team-wiki Run the command ls , you should see a list of files and a folder, including: the docs folder where .md files are stored, the wiki contents are in the .md files mkdocs.yml , a configuration file Run the following command in the terminal to set up a local live server: docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material You should see a message saying that changes are being detected: Do not close the terminal and return to your desktop Caution If you close the terminal by accident, the following steps will not work. In that case, open a new terminal and start from Step 1 again.","title":"Start a container"},{"location":"team_wiki/envr.html#preview","text":"Whether you are using a Docker container or a Python environment, the rest of the steps are the same. Open your browser of choice (e.g. Chrome, Safari, Firefox, etc.), connect to the live server by typing localhost:8000 in the address bar and hit Enter You should now see the wiki site being rendered locally In the browser, click on \"Background\" in the lefthand side navigation menu Or, go to localhost:8000/background/ You will see a most empty page Use any integrated development environment (IDE) or plain text editor of your choice, e.g. VS Code , Notepad (Windows) or TextEdit (MacOS), open the file docs/bakground.md in your local repository folder You should see an empty file Copy and paste the following texts into docs/bakground.md , then save the file and close it # Project Background Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Return to the browser at localhost:8000/background/ You should now see the page being populated with the new title and content","title":"Preview"},{"location":"team_wiki/envr.html#shut-down-the-container","text":"When you are done editing and no longer need your browser, go back to the terminal, hit Ctrl + C on your keyboard to exit the live server. Screenshot above is for Docker, but the message will be the same for a Python environment. Once you have done so, refreshing the page should give you a 404 error. In the future, should you wish to start the live server again, you do not need to repeat the installation steps.","title":"Shut down the container"},{"location":"team_wiki/fork.html","text":"Fork a repository Since you will be assigned a GitHub repository for uploading your wiki contents and deploying your team wiki, it is vital that you know how to manage the repository. This tutorial is here to help you familarize with the basic operations in GitHub, assuming no prior experiences. Instead of using your assigned repository, we will use a mock repository at: www.github.com/idec2021/team-wiki The actual wiki for this repository can be found at: idec2021.github.io/team-wiki Note that this mock repository resembles your assigned repository for team wiki, but the two repositories, and hence the wikis, are not the same. Nevertheless, the steps covered in this tutorial are applicable to your own repository. By the end of this tutorial, you will have a copy of this repository under your own GitHub account and in your own computer. Register for a GitHub account Install GitHub Desktop Open the GitHub Desktop app, select \"File\" -> \"Options\" In the \"Options\" window, under \"GitHub.com\", click on \"Sign In\" Follow the instructions and sign into your registered account Go to the mock repository github.com/idec2021/team-wiki On the upper right corner, you will find the \"Fork\" button Fork the mock repository under your own account. You should be automatically redirected to the forked repository: https://github.com/{your username}/team-wiki Check that under the repository name, it says forked from idec2021/team-wiki And under the \"Code\" tab, you should find This branch is even with idec2021:main. Click on the green button for downloading the code, and underneath select \"Open with GitHub Desktop\". Continue the steps on GitHub Desktop, and this process will \"clone\" the repository to your local computer. You now have a copy of the repository under your GitHub account. This copy is the remote copy. You also have a copy on your own computer, and this is the local copy. You can now edit the contents of your local repository.","title":"Fork a repository"},{"location":"team_wiki/fork.html#fork-a-repository","text":"Since you will be assigned a GitHub repository for uploading your wiki contents and deploying your team wiki, it is vital that you know how to manage the repository. This tutorial is here to help you familarize with the basic operations in GitHub, assuming no prior experiences. Instead of using your assigned repository, we will use a mock repository at: www.github.com/idec2021/team-wiki The actual wiki for this repository can be found at: idec2021.github.io/team-wiki Note that this mock repository resembles your assigned repository for team wiki, but the two repositories, and hence the wikis, are not the same. Nevertheless, the steps covered in this tutorial are applicable to your own repository. By the end of this tutorial, you will have a copy of this repository under your own GitHub account and in your own computer. Register for a GitHub account Install GitHub Desktop Open the GitHub Desktop app, select \"File\" -> \"Options\" In the \"Options\" window, under \"GitHub.com\", click on \"Sign In\" Follow the instructions and sign into your registered account Go to the mock repository github.com/idec2021/team-wiki On the upper right corner, you will find the \"Fork\" button Fork the mock repository under your own account. You should be automatically redirected to the forked repository: https://github.com/{your username}/team-wiki Check that under the repository name, it says forked from idec2021/team-wiki And under the \"Code\" tab, you should find This branch is even with idec2021:main. Click on the green button for downloading the code, and underneath select \"Open with GitHub Desktop\". Continue the steps on GitHub Desktop, and this process will \"clone\" the repository to your local computer. You now have a copy of the repository under your GitHub account. This copy is the remote copy. You also have a copy on your own computer, and this is the local copy. You can now edit the contents of your local repository.","title":"Fork a repository"},{"location":"team_wiki/forward.html","text":"Moving forward Upon completing this tutorial you should know the basics on how to edit and submit your team wiki. Below we offer some suggestions on how to take a step further and be more effective in the process. MkDocs and Material for MkDocs We presented some of the most important features for customizing your wiki contents, but you may wish to know that these static site generators allow many more customizations, like changing theme colors and adding emojis. For more information on the underlying mechanism of MkDocs , please check their documentation site. For information on customizing the theme, please see Material for MkDocs . Useful features in Material for MkDocs In the mock wiki for this tutorial, we have a page demonstrating 3 useful features enabled by default: Mathematical equations input by LaTeX Sortable Tables Markdown footnotes for citations Be sure to check the Markdown file behind if your team use Material for MkDocs for your wiki. Git and GitHub Throughout this tutorial we used GitHub Desktop for version control illustration. GitHub Desktop provides an intuitive graphic user interface (GUI) which is great for beginners. You can find a lot of help from the documentation of GitHub Desktop and our tutorial is to some extent based on it. As you move forward, you may find the command line interface (CLI) version more powerful since it permits automation of tasks. Need help? Post a message on iDEC 2021's Slack channel, or, email us at support@idechq.org with a subject titled [Team Wiki] {your issue} and we will get back to you as soon as we can.","title":"Moving forward"},{"location":"team_wiki/forward.html#moving-forward","text":"Upon completing this tutorial you should know the basics on how to edit and submit your team wiki. Below we offer some suggestions on how to take a step further and be more effective in the process.","title":"Moving forward"},{"location":"team_wiki/forward.html#mkdocs-and-material-for-mkdocs","text":"We presented some of the most important features for customizing your wiki contents, but you may wish to know that these static site generators allow many more customizations, like changing theme colors and adding emojis. For more information on the underlying mechanism of MkDocs , please check their documentation site. For information on customizing the theme, please see Material for MkDocs .","title":"MkDocs and Material for MkDocs"},{"location":"team_wiki/forward.html#useful-features-in-material-for-mkdocs","text":"In the mock wiki for this tutorial, we have a page demonstrating 3 useful features enabled by default: Mathematical equations input by LaTeX Sortable Tables Markdown footnotes for citations Be sure to check the Markdown file behind if your team use Material for MkDocs for your wiki.","title":"Useful features in Material for MkDocs"},{"location":"team_wiki/forward.html#git-and-github","text":"Throughout this tutorial we used GitHub Desktop for version control illustration. GitHub Desktop provides an intuitive graphic user interface (GUI) which is great for beginners. You can find a lot of help from the documentation of GitHub Desktop and our tutorial is to some extent based on it. As you move forward, you may find the command line interface (CLI) version more powerful since it permits automation of tasks.","title":"Git and GitHub"},{"location":"team_wiki/forward.html#need-help","text":"Post a message on iDEC 2021's Slack channel, or, email us at support@idechq.org with a subject titled [Team Wiki] {your issue} and we will get back to you as soon as we can.","title":"Need help?"},{"location":"team_wiki/gh_pages.html","text":"Configuring GitHub Pages settings GitHub can render web contents hosted on your repository through its GitHub Pages service, and to enable this you need to configure the corresponding settings correctly. Deploying your custom site If you are building your static pages, you will need to change the default setting. We will assume that we have a repository structure as below, that is currrently under the branch main : . \u251c\u2500css \u2502 \u2514\u2500style.css \u251c\u2500img \u2502 \u251c\u2500favicon.png \u2502 \u2514\u2500icon.png \u251c\u2500javascript \u2502 \u2514\u2500app.js \u251c\u2500pages \u2502 \u251c\u2500about.html \u2502 \u2514\u2500project.html \u2514\u2500index.html It can be inferred from the tree above that the home page of the site is index.html . Importantly, this file is placed in the root directory, or technically ./ With these information, the following should be done: Go to the Pages settings for your wiki repository via the link https://www.github.com/idec{year}/{assigned repo name}/settings/pages You will see the user interface below: Click on the button that contains Branch From the drop down menu, select the branch main In the next button with a folder icon , select / (root) as the path to deploy from This is where the index.html file is. Click on the Save button and save the settings. Within a few minutes, you should be able to visit https://idec{year}.github.io/{assigned repo name} and your home page should now be displayed Caution Do not add a CNAME to change the domain name of the GitHub Pages. Your wiki site must be deployed at idec2021.github.io/{your assigned repo} Deploying the default Material for MkDocs Wiki If you decide to use the default wiki setup built with Material for MkDocs, you need not do anything as the settings is already configured for you. In case you changed it accidentally, you can always revert to the settings below: Source branch: gh-pages Source folder: / (root)","title":"Configuring your GitHub Pages"},{"location":"team_wiki/gh_pages.html#configuring-github-pages-settings","text":"GitHub can render web contents hosted on your repository through its GitHub Pages service, and to enable this you need to configure the corresponding settings correctly.","title":"Configuring GitHub Pages settings"},{"location":"team_wiki/gh_pages.html#deploying-your-custom-site","text":"If you are building your static pages, you will need to change the default setting. We will assume that we have a repository structure as below, that is currrently under the branch main : . \u251c\u2500css \u2502 \u2514\u2500style.css \u251c\u2500img \u2502 \u251c\u2500favicon.png \u2502 \u2514\u2500icon.png \u251c\u2500javascript \u2502 \u2514\u2500app.js \u251c\u2500pages \u2502 \u251c\u2500about.html \u2502 \u2514\u2500project.html \u2514\u2500index.html It can be inferred from the tree above that the home page of the site is index.html . Importantly, this file is placed in the root directory, or technically ./ With these information, the following should be done: Go to the Pages settings for your wiki repository via the link https://www.github.com/idec{year}/{assigned repo name}/settings/pages You will see the user interface below: Click on the button that contains Branch From the drop down menu, select the branch main In the next button with a folder icon , select / (root) as the path to deploy from This is where the index.html file is. Click on the Save button and save the settings. Within a few minutes, you should be able to visit https://idec{year}.github.io/{assigned repo name} and your home page should now be displayed Caution Do not add a CNAME to change the domain name of the GitHub Pages. Your wiki site must be deployed at idec2021.github.io/{your assigned repo}","title":"Deploying your custom site"},{"location":"team_wiki/gh_pages.html#deploying-the-default-material-for-mkdocs-wiki","text":"If you decide to use the default wiki setup built with Material for MkDocs, you need not do anything as the settings is already configured for you. In case you changed it accidentally, you can always revert to the settings below: Source branch: gh-pages Source folder: / (root)","title":"Deploying the default Material for MkDocs Wiki"},{"location":"team_wiki/mkdocs.html","text":"MkDocs and Material for MkDocs By default, the GitHub repository assigned to a team for wiki already contains some wiki contents. These wiki contents are written in the Markdown language and are converted into a wiki site using MkDocs with the Material for MkDocs theme. In this tutorial, we will cover some routines in updating the site, through editing the Markdown (.md) files in the GitHub repository. You do not need to have prior coding experience or experience with Git / GitHub to complete this tutorial. Static site generator MkDocs is a static site generator. This means that a web developer does not worry about coding the website structure or appearance, and only focuses on writing some plain but structured text files. The static site generator then converts these text files into website contents. In this process, most of the website appearances are already set up, and so the amount of time spent on customizing them is minimized. Learn Markdown in 10 mins The text files are \"structured\" with the Markdown language and saved with a .md extension. The Markdown language is the way of instructing the site generator of what to do with our texts, like \"make this a header\", or \"here is a list with bullet points\". Learning how to write in the Markdown language is absolutely necessary, but it is also easy. Please go to Commonmark.org , read through the Markdown syntax and complete the 10 minutes interative Markdown tutorial . Once you are done please proceed to the next section.","title":"MkDocs & Material for MkDocs"},{"location":"team_wiki/mkdocs.html#mkdocs-and-material-for-mkdocs","text":"By default, the GitHub repository assigned to a team for wiki already contains some wiki contents. These wiki contents are written in the Markdown language and are converted into a wiki site using MkDocs with the Material for MkDocs theme. In this tutorial, we will cover some routines in updating the site, through editing the Markdown (.md) files in the GitHub repository. You do not need to have prior coding experience or experience with Git / GitHub to complete this tutorial.","title":"MkDocs and Material for MkDocs"},{"location":"team_wiki/mkdocs.html#static-site-generator","text":"MkDocs is a static site generator. This means that a web developer does not worry about coding the website structure or appearance, and only focuses on writing some plain but structured text files. The static site generator then converts these text files into website contents. In this process, most of the website appearances are already set up, and so the amount of time spent on customizing them is minimized.","title":"Static site generator"},{"location":"team_wiki/mkdocs.html#learn-markdown-in-10-mins","text":"The text files are \"structured\" with the Markdown language and saved with a .md extension. The Markdown language is the way of instructing the site generator of what to do with our texts, like \"make this a header\", or \"here is a list with bullet points\". Learning how to write in the Markdown language is absolutely necessary, but it is also easy. Please go to Commonmark.org , read through the Markdown syntax and complete the 10 minutes interative Markdown tutorial . Once you are done please proceed to the next section.","title":"Learn Markdown in 10 mins"},{"location":"team_wiki/operations.html","text":"Common operations in MkDocs In this section, please make sure you have the live server up and running. You can refer to the previous page [Set up a Docker container for wiki editing] for the instructions. This page covers the essential information you need to know to build your team wiki. Configure the wiki name The default wiki name we give our template repository is \"iDEC HQ Team Wiki Example\". To change it to a new name, use a plain text editor to open the file: mkdocs.yml Look for the following configuration: site_name: iDEC HQ Team Wiki Example and change it to: site_name: iDEC 2021 Mock Team Wiki Refresh the live server, notice that 3 things should have changed: browser tab title wiki header title wiki navigation bar header Attention It is possible to change the favicon and icon of the wiki in mkdocs.yml . However, if your team decide to use MkDocs for Material, or other static site generators with templates, we politely request that your use the iDEC favicon and logo, and keep our copyright statement. This is to show that your team wiki is part of iDEC. Thank you. Put pages on the navigation menu If you click on the \"Protocol\" or the \"Notebook\" link in the navigation menu, you will land on to a 404 - Not found page. We will fix this now. Using an IDE or a text editor, open the mkdocs.yml file. Look for the following configuration: nav: - Home: index.md - Background: background.md - Results: results.md - Protocols: protocols.md - Lab notebook: notebook.md - Some useful features: useful_features.md Danger Failure to follow the proper use of whitespaces in each list item will result in links not being properly rendered. Comparing this section with the navigation menu, you can see that, for each indented list item, the key (text before colon : ) is the link label, and the value (text after colon) corresponds to the file path, which is relative to the docs/ folder. The files for \"Protocols\" and \"Notebook\" actually exist - they are just sitting in the directory docs/documentation/ . . \u2514\u2500docs \u2514\u2500documentation \u251c\u2500notebook.md \u2514\u2500protocols.md So the solution is to fix the mkdocs.yml file, nav section as follow: nav: - Home: index.md - Background: background.md - Results: results.md - Protocols: documentation/protocols.md - Lab notebook: documentation/notebook.md - Some useful features: useful_features.md Return to the browser and the links should now be functional. Create subsections in the navigation menu If you have a lot of pages, you might want to group them together. In the nav section inside the mkdocs.yml file, make the following change: nav: - Home: index.md - Project: - Background: background.md - Results: results.md - Documentation: - Protocols: documentation/protocols.md - Lab notebook: documentation/notebook.md - Some useful features: useful_features.md Return to the browser. The menu should now have 3 levels, and can collapsed or expanded at different levels. Two important things to note in mkdocs.yml : The subsection must have a header but without a file path 1 Under the subsection, the list item is indented to the right by exactly 4 whitespaces Tip Structuring your Markdown file locations and the navigation menu in the same way is highly recommended, since it will help your collaborators / teammates to find the location of the file much more easily. Note The structure here is only for the illustration of increasing page depth. In general, we recommend that teams limit their wiki page depth to only 2 levels. You will also notice that for your assigned team repository, your 2 nd level pages are grouped under section headers instead. That is because we enabled the feature Navigation Sections in mkdocs.yml , which is more user-friendly when the total number of pages is small. Add an image You will now add an image to the wiki, similar to how you would add figures for illustrations and results. Save a dummy image under the directory docs/img and name it as dummy.png Then, edit docs/results.md , and add the following code underneath the existing texts: ![dummy image](img/dummy.png){ width=800px } Return to the browser. You should now see the image being shown on the \"Results\" page. While the size of the figure was 600 pixels x 400 pixels, on the page it is stretched to 800 pixels in width. You can modify the image size by the attributes tag 2 after the normal Markdown syntax for image insertion. Self-practice Why not try creating a page called \"Our Team\", list your iDEC teammates and add their photos? Generate links to downloadable contents In some cases you might have some information that are simply too long to be part of a webpage. Instead of displaying its full content, you might want to generate a link to the downloadable file instead. This can be done by placing the file somewhere under the docs folder and then pointing a hyperlink to it. Inspect the directory docs and you will see: . \u2514\u2500\u2500docs \u251c\u2500documentation \u2502 \u251c\u2500notebook.md \u2502 \u2514\u2500protocols.md \u2514\u2500notebooks \u251c\u2500MCLONE001.pdf \u2514\u2500EVOLVE001.pdf Assuming these are exported electronic notebook files, you will now create links to them on the page \"Project -> Documentation -> Notebook\", or, http://localhost:8000/documentation/notebook/ Use a text editor and open docs/notebook.md , then insert the following lines underneath the existing content: - [MCLONE001: Plasmid construction for DE of GFP](../notebooks/MCLONE001.pdf){: target=\"_blank\" } - [EVOLVE001: Directed evolution on GFP](../notebooks/EVOLVE001.pdf){: target=\"_blank\" } So for the relative path ../notebooks/MCLONE001.pdf , it works as follow: 1. Starts from docs/documentation where notebook.md is located 2. ../ = goes up 1 level to docs 3. notebooks/MCLONE001.pdf = goes into the notebooks folder and locate the MCLONE001.pdf file. This relative path will work both on your location machine as well as the deployed GitHub Pages. Return to the browser and go to \"Notebook\" page, you will now find two links. Click on any of them and you should see a new tab with the PDF file showing up. Tip Upload your files in formats that are OS-agnostic and not dependent on proprietary software. For example, use PDF instead of Word documents or Powerpoint files. Embed a video Use of multimedia faciliates scientific communication to the lay public. To embed a video, use of HTML is necessary. You already have a cover image in the repository. Download a sample video from this link . Then save the file as iDEC_video.mp4 under the docs/assets directory: . \u2514\u2500\u2500docs \u251c\u2500assets \u2502 \u2514\u2500iDEC_video.mp4 \u2514\u2500img \u2514\u2500video_cover.png To embed this on the \"Home\" page, open a text editor, insert the following code into the end of the file docs/index.md and save the file. <video controls width=\"600px\" poster=\"img/video_cover.png\"> <source src=\"assets/iDEC_video.mp4\" type=\"video/mp4\"> </video> In the code above, the poster attribute in the <video> element has a relative path pointing to the cover image of the video. The src attribute (which is a shorthand for \"source\") in the <source> element has a relative path pointing to the video itself. Return to the browser and go to Home ( localhost:8000 ), you will see the video being embedded. Attention Make sure each individual file (whether document or video) does not exceed 100 MB in size, which is the limit for hosting by GitHub. Also, you should keep the size of your repository within 1 GB. Check out the Material for MkDocs reference on how to enable section index pages. This is however not recommended from a UX design perspective. \u21a9 Material for MkDocs reference on images \u21a9","title":"MkDocs common operations"},{"location":"team_wiki/operations.html#common-operations-in-mkdocs","text":"In this section, please make sure you have the live server up and running. You can refer to the previous page [Set up a Docker container for wiki editing] for the instructions. This page covers the essential information you need to know to build your team wiki.","title":"Common operations in MkDocs"},{"location":"team_wiki/operations.html#configure-the-wiki-name","text":"The default wiki name we give our template repository is \"iDEC HQ Team Wiki Example\". To change it to a new name, use a plain text editor to open the file: mkdocs.yml Look for the following configuration: site_name: iDEC HQ Team Wiki Example and change it to: site_name: iDEC 2021 Mock Team Wiki Refresh the live server, notice that 3 things should have changed: browser tab title wiki header title wiki navigation bar header Attention It is possible to change the favicon and icon of the wiki in mkdocs.yml . However, if your team decide to use MkDocs for Material, or other static site generators with templates, we politely request that your use the iDEC favicon and logo, and keep our copyright statement. This is to show that your team wiki is part of iDEC. Thank you.","title":"Configure the wiki name"},{"location":"team_wiki/operations.html#put-pages-on-the-navigation-menu","text":"If you click on the \"Protocol\" or the \"Notebook\" link in the navigation menu, you will land on to a 404 - Not found page. We will fix this now. Using an IDE or a text editor, open the mkdocs.yml file. Look for the following configuration: nav: - Home: index.md - Background: background.md - Results: results.md - Protocols: protocols.md - Lab notebook: notebook.md - Some useful features: useful_features.md Danger Failure to follow the proper use of whitespaces in each list item will result in links not being properly rendered. Comparing this section with the navigation menu, you can see that, for each indented list item, the key (text before colon : ) is the link label, and the value (text after colon) corresponds to the file path, which is relative to the docs/ folder. The files for \"Protocols\" and \"Notebook\" actually exist - they are just sitting in the directory docs/documentation/ . . \u2514\u2500docs \u2514\u2500documentation \u251c\u2500notebook.md \u2514\u2500protocols.md So the solution is to fix the mkdocs.yml file, nav section as follow: nav: - Home: index.md - Background: background.md - Results: results.md - Protocols: documentation/protocols.md - Lab notebook: documentation/notebook.md - Some useful features: useful_features.md Return to the browser and the links should now be functional.","title":"Put pages on the navigation menu"},{"location":"team_wiki/operations.html#create-subsections-in-the-navigation-menu","text":"If you have a lot of pages, you might want to group them together. In the nav section inside the mkdocs.yml file, make the following change: nav: - Home: index.md - Project: - Background: background.md - Results: results.md - Documentation: - Protocols: documentation/protocols.md - Lab notebook: documentation/notebook.md - Some useful features: useful_features.md Return to the browser. The menu should now have 3 levels, and can collapsed or expanded at different levels. Two important things to note in mkdocs.yml : The subsection must have a header but without a file path 1 Under the subsection, the list item is indented to the right by exactly 4 whitespaces Tip Structuring your Markdown file locations and the navigation menu in the same way is highly recommended, since it will help your collaborators / teammates to find the location of the file much more easily. Note The structure here is only for the illustration of increasing page depth. In general, we recommend that teams limit their wiki page depth to only 2 levels. You will also notice that for your assigned team repository, your 2 nd level pages are grouped under section headers instead. That is because we enabled the feature Navigation Sections in mkdocs.yml , which is more user-friendly when the total number of pages is small.","title":"Create subsections in the navigation menu"},{"location":"team_wiki/operations.html#add-an-image","text":"You will now add an image to the wiki, similar to how you would add figures for illustrations and results. Save a dummy image under the directory docs/img and name it as dummy.png Then, edit docs/results.md , and add the following code underneath the existing texts: ![dummy image](img/dummy.png){ width=800px } Return to the browser. You should now see the image being shown on the \"Results\" page. While the size of the figure was 600 pixels x 400 pixels, on the page it is stretched to 800 pixels in width. You can modify the image size by the attributes tag 2 after the normal Markdown syntax for image insertion. Self-practice Why not try creating a page called \"Our Team\", list your iDEC teammates and add their photos?","title":"Add an image"},{"location":"team_wiki/operations.html#generate-links-to-downloadable-contents","text":"In some cases you might have some information that are simply too long to be part of a webpage. Instead of displaying its full content, you might want to generate a link to the downloadable file instead. This can be done by placing the file somewhere under the docs folder and then pointing a hyperlink to it. Inspect the directory docs and you will see: . \u2514\u2500\u2500docs \u251c\u2500documentation \u2502 \u251c\u2500notebook.md \u2502 \u2514\u2500protocols.md \u2514\u2500notebooks \u251c\u2500MCLONE001.pdf \u2514\u2500EVOLVE001.pdf Assuming these are exported electronic notebook files, you will now create links to them on the page \"Project -> Documentation -> Notebook\", or, http://localhost:8000/documentation/notebook/ Use a text editor and open docs/notebook.md , then insert the following lines underneath the existing content: - [MCLONE001: Plasmid construction for DE of GFP](../notebooks/MCLONE001.pdf){: target=\"_blank\" } - [EVOLVE001: Directed evolution on GFP](../notebooks/EVOLVE001.pdf){: target=\"_blank\" } So for the relative path ../notebooks/MCLONE001.pdf , it works as follow: 1. Starts from docs/documentation where notebook.md is located 2. ../ = goes up 1 level to docs 3. notebooks/MCLONE001.pdf = goes into the notebooks folder and locate the MCLONE001.pdf file. This relative path will work both on your location machine as well as the deployed GitHub Pages. Return to the browser and go to \"Notebook\" page, you will now find two links. Click on any of them and you should see a new tab with the PDF file showing up. Tip Upload your files in formats that are OS-agnostic and not dependent on proprietary software. For example, use PDF instead of Word documents or Powerpoint files.","title":"Generate links to downloadable contents"},{"location":"team_wiki/operations.html#embed-a-video","text":"Use of multimedia faciliates scientific communication to the lay public. To embed a video, use of HTML is necessary. You already have a cover image in the repository. Download a sample video from this link . Then save the file as iDEC_video.mp4 under the docs/assets directory: . \u2514\u2500\u2500docs \u251c\u2500assets \u2502 \u2514\u2500iDEC_video.mp4 \u2514\u2500img \u2514\u2500video_cover.png To embed this on the \"Home\" page, open a text editor, insert the following code into the end of the file docs/index.md and save the file. <video controls width=\"600px\" poster=\"img/video_cover.png\"> <source src=\"assets/iDEC_video.mp4\" type=\"video/mp4\"> </video> In the code above, the poster attribute in the <video> element has a relative path pointing to the cover image of the video. The src attribute (which is a shorthand for \"source\") in the <source> element has a relative path pointing to the video itself. Return to the browser and go to Home ( localhost:8000 ), you will see the video being embedded. Attention Make sure each individual file (whether document or video) does not exceed 100 MB in size, which is the limit for hosting by GitHub. Also, you should keep the size of your repository within 1 GB. Check out the Material for MkDocs reference on how to enable section index pages. This is however not recommended from a UX design perspective. \u21a9 Material for MkDocs reference on images \u21a9","title":"Embed a video"},{"location":"team_wiki/pull_request.html","text":"Submit a pull request In the previous sections you made changes to the files in your repository and committed those changes to your repositories, both local and remote. At this point, these changes are yours, and they are not part of the original, HQ maintained wiki repository. This is the same as saying, you have a partially or fully completed wiki in your own hands but it is not submitted to the iDEC HQ yet. To finalize the submission, you will need to signal to the owner of the original repository (iDEC HQ) that you committed some changes, and those commits are ready to be merged into the original repository. This process is submitting a pull request . Typically, when the owner of a repository receive a pull request, the owner reviews the pull request, then decides if the commits should be merged into the original repository. In this secion, you will create a pull request for the changes you did on your team-wiki repository. This process will be basically identical to what your team will do when you submit your official team wiki. Follow the steps below: Open a browser, signin to your GitHub account Travel to your forked repository on GitHub: https://www.github.com/{your username}/team-wiki Check again for the message that says: This branch is { a number } commit(s) ahead of idec2021:main. Click on the Contribute link, then click on Open pull request This will lead you to a new page, which shows all differences between your edits and the original files Make sure that: base repository is idec2021/team-wiki head repository is {your username}/team-wiki branches being compared are both main Click on the Create pull request button Click the Create pull request Travel to the original repository: https://github.com/idec2021/team-wiki/pulls You will see your pull request being logged on the system. Since this team-wiki repository was set up for this tutorial, the iDEC HQ will not accept any pull requests and your pull request will remain open indefinitely. Info It is not necessary to submit a pull request every time you push a commmit. You can create a pull request after a number of commits are pushed and by default they will be grouped under the same pull request. Tip In this tutorial section we use the default pull request title and leave the comment section empty for simplificity. In the future, however, it is important to write meaningful titles and descriptions. Check out this blog post for some suggestions on how to write a pull request description.","title":"Submit a pull request"},{"location":"team_wiki/pull_request.html#submit-a-pull-request","text":"In the previous sections you made changes to the files in your repository and committed those changes to your repositories, both local and remote. At this point, these changes are yours, and they are not part of the original, HQ maintained wiki repository. This is the same as saying, you have a partially or fully completed wiki in your own hands but it is not submitted to the iDEC HQ yet. To finalize the submission, you will need to signal to the owner of the original repository (iDEC HQ) that you committed some changes, and those commits are ready to be merged into the original repository. This process is submitting a pull request . Typically, when the owner of a repository receive a pull request, the owner reviews the pull request, then decides if the commits should be merged into the original repository. In this secion, you will create a pull request for the changes you did on your team-wiki repository. This process will be basically identical to what your team will do when you submit your official team wiki. Follow the steps below: Open a browser, signin to your GitHub account Travel to your forked repository on GitHub: https://www.github.com/{your username}/team-wiki Check again for the message that says: This branch is { a number } commit(s) ahead of idec2021:main. Click on the Contribute link, then click on Open pull request This will lead you to a new page, which shows all differences between your edits and the original files Make sure that: base repository is idec2021/team-wiki head repository is {your username}/team-wiki branches being compared are both main Click on the Create pull request button Click the Create pull request Travel to the original repository: https://github.com/idec2021/team-wiki/pulls You will see your pull request being logged on the system. Since this team-wiki repository was set up for this tutorial, the iDEC HQ will not accept any pull requests and your pull request will remain open indefinitely. Info It is not necessary to submit a pull request every time you push a commmit. You can create a pull request after a number of commits are pushed and by default they will be grouped under the same pull request. Tip In this tutorial section we use the default pull request title and leave the comment section empty for simplificity. In the future, however, it is important to write meaningful titles and descriptions. Check out this blog post for some suggestions on how to write a pull request description.","title":"Submit a pull request"},{"location":"team_wiki/push.html","text":"Stage, Commit and Push changes Stage and commit to your local repository Open GitHub Desktop. GitHub Desktop should detect the changes made under the team-wiki folder. GitHub Desktop will show what files were modified. Within each file (if they are plain text files), GitHub Desktop will also show what lines are added and what lines are deleted. In this screenshot, the file mkdocs.yml was being inspected by GitHub Desktop. Added lines are shown in green and deleted lines are shown in red. Once the changes are finalized, you stage and commit the changes. This is to say, you prepare and then add a record to the history of changes that the version control software is keeping track of. You can select the specific files and the specific lines to commit. Stage your changes Select only the files: docs/background.md docs/documentation/notebook.md docs/img/dummy.png docs/results.md Deselect the file mkdocs.yml Then, drag and select deletions of lines 41-45 and addition of lines 41-47 By doing so, you have selected changes that are relevant to the Project section of the wiki, and you signal to GitHub Desktop that these changes are ready to be committed. Commit your changes In the lower left corner of GitHub Desktop, inside the \"Summary\" form, write: Add info to the Project section Then click the blue \"commit to main\" button below. Tip It is always a good habit to leave a commit message that concisely summarizes what your changes are. For example, \"Add references for Genome Evolution page\" is better than \"Update Genome Evolution\" Read more on how to write better commit messages. Push to your remote repository Click on the \"History\" tab, you will now see the lastest commit being appended to the history of changes At this point, this commit is appended to your local repository on your computer, but not yet on your remote and forked repository hosted on GitHub To proceed, \"push\" the commit Open a browser, travel to your forked repository on GitHub, the address should look be: https://www.github.com/{your username}/team-wiki Two points to note here: Your lastest commit message should be displayed above the repository contents GitHub should compare your history against ours and display a message saying: This branch is 1 commit ahead of idec2021:main. (assuming you did not commit more changes) You now have the change saved to both your local and remote repositories. At this point, other changes that were made before, e.g. changing site name, adding video to the home page, have not been added to the history of changes. If you want these changes to be permanent and sharable, you will need to stage and commit these changes as well. (Optional & Advanced) Deploy the site as a GitHub page on your account Following the previous section, you now have a copy of the team-wiki under your GitHub account, and it is ready to be deployed as a GitHub Pages , which is a website hosted by GitHub. If you wish to, you can enable GitHub Action and then configure the Pages setting under your repository, such that the site is deployed from the gh-pages branch. Doing so would create a website that can be accessed at: https://{your username}.github.io/team-wiki/ This allows you to visualize how this site would look from the internet. The GitHub Action .github/workflows/ci.yml file is configured to update the gh-pages branch every time a \"push\" action is done to the repository. So you might to have to wait till the next change is pushed to see the site being deployed. There is also usually a 1 minute delay between the completion of GitHub Action and the update of the deployed site.","title":"Stage, commit and push changes"},{"location":"team_wiki/push.html#stage-commit-and-push-changes","text":"","title":"Stage, Commit and Push changes"},{"location":"team_wiki/push.html#stage-and-commit-to-your-local-repository","text":"Open GitHub Desktop. GitHub Desktop should detect the changes made under the team-wiki folder. GitHub Desktop will show what files were modified. Within each file (if they are plain text files), GitHub Desktop will also show what lines are added and what lines are deleted. In this screenshot, the file mkdocs.yml was being inspected by GitHub Desktop. Added lines are shown in green and deleted lines are shown in red. Once the changes are finalized, you stage and commit the changes. This is to say, you prepare and then add a record to the history of changes that the version control software is keeping track of. You can select the specific files and the specific lines to commit. Stage your changes Select only the files: docs/background.md docs/documentation/notebook.md docs/img/dummy.png docs/results.md Deselect the file mkdocs.yml Then, drag and select deletions of lines 41-45 and addition of lines 41-47 By doing so, you have selected changes that are relevant to the Project section of the wiki, and you signal to GitHub Desktop that these changes are ready to be committed. Commit your changes In the lower left corner of GitHub Desktop, inside the \"Summary\" form, write: Add info to the Project section Then click the blue \"commit to main\" button below. Tip It is always a good habit to leave a commit message that concisely summarizes what your changes are. For example, \"Add references for Genome Evolution page\" is better than \"Update Genome Evolution\" Read more on how to write better commit messages.","title":"Stage and commit to your local repository"},{"location":"team_wiki/push.html#push-to-your-remote-repository","text":"Click on the \"History\" tab, you will now see the lastest commit being appended to the history of changes At this point, this commit is appended to your local repository on your computer, but not yet on your remote and forked repository hosted on GitHub To proceed, \"push\" the commit Open a browser, travel to your forked repository on GitHub, the address should look be: https://www.github.com/{your username}/team-wiki Two points to note here: Your lastest commit message should be displayed above the repository contents GitHub should compare your history against ours and display a message saying: This branch is 1 commit ahead of idec2021:main. (assuming you did not commit more changes) You now have the change saved to both your local and remote repositories. At this point, other changes that were made before, e.g. changing site name, adding video to the home page, have not been added to the history of changes. If you want these changes to be permanent and sharable, you will need to stage and commit these changes as well.","title":"Push to your remote repository"},{"location":"team_wiki/push.html#optional-advanced-deploy-the-site-as-a-github-page-on-your-account","text":"Following the previous section, you now have a copy of the team-wiki under your GitHub account, and it is ready to be deployed as a GitHub Pages , which is a website hosted by GitHub. If you wish to, you can enable GitHub Action and then configure the Pages setting under your repository, such that the site is deployed from the gh-pages branch. Doing so would create a website that can be accessed at: https://{your username}.github.io/team-wiki/ This allows you to visualize how this site would look from the internet. The GitHub Action .github/workflows/ci.yml file is configured to update the gh-pages branch every time a \"push\" action is done to the repository. So you might to have to wait till the next change is pushed to see the site being deployed. There is also usually a 1 minute delay between the completion of GitHub Action and the update of the deployed site.","title":"(Optional &amp; Advanced) Deploy the site as a GitHub page on your account"},{"location":"team_wiki/setup_wiki.html","text":"Setting up your team wiki TL DR Teams will be assigned a GitHub repository owned by iDEC HQ. Team members will be able to add themselves as collaborators to the wiki repository through reg.idec.io and upload their web contents. Write access to the repository will be revoked by wiki freeze. We intend to give as much control as possible to teams in styling their project wikis and project documentations. For this reason, we are setting up GitHub repositories so that teams can display their wikis using GitHub Pages . iDEC teams are encouraged to be creative and to fully utilize the freedom that comes with the assigned GitHub repository. If you are not familiar with the concept of Git and GitHub, imagine the following scenario: We are hosting a blog ( iDEC HQ repository ) that we write essays. You read some contents on your blog and you felt that something should change, so you downloaded ( forked and cloned ) a copy of our blog posts, made some edits ( commits ) on your own copy ( your repository ) and kept a chronological record of what and how edits are made (a history of commmits). Then, you send a note ( pull request ) to us, with those edits (but not the modified blog posts) attached. We reviewed the note, checked if the changes are reasonable or necessary, and decided to carry out ( merge ) the changes on our original blog posts. Moreover, in some ocassions, you might write a slightly different copy of the original blog post, and you wish to keep a copy of both the original text ( trunk ) and the derived text ( branch ). Instead of saving the derived text, you save how the derived text is different. You then continue working on the original text and when the moment comes, you can choose to apply the changes back onto main verison of the text. Abstractly, this is like a tree, with a main trunk that develops upwards with different smaller changes branching out from the trunk. This is a simplified analogy on how software enigneers use distributed version control to collaborate on projects. This year, iDEC HQ will provide the wiki platform through this mechanism. So essentially, we will assign each team an iDEC HQ-owned repository, which is basically a cloud space for hosting web contents. The contents will be rendered as a publicly accessible websie through the GitHub Pages function. Wiki content upload and wiki freeze A team will be given permissions to manage their assigned repository. The permissions include read-write access, pull requests management and configuration of settings related to web page deployment. These permissions will be downgraded to \"read-only\" as wiki-freeze commences, so it is imperative that teams complete all uploads and set up their GitHub Pages properly before the deadline. Accessing and configuring your team repository The GitHub repositories for teams in 2021 will be hosted under the GitHub Organization \"idec2021\". Check your assigned repository on the wiki list . To obtain the permissions for wiki-editing, iDEC team members will need to add themselves as collaborator to the wiki repository. To do so, follow the instructions on our page Accessing your wiki repository . Joining as collaborator will grant the user \"maintain\" permission to the repository. GitHub turns uploaded web contents into a website through its GitHub Pages service, and it is important that a team notifies GitHub which branch should be used for the source. Check out our quick guide on how to do so. Making using of forks to coordinate your site development Even though every team member who join their team wiki repository will have nearly full access, we recommend that team members fork their assigned repository (base) under their personal / organizational account. All uploads and edits of wiki contents can then be performed on the forked repository (head). Pull requests can then be submitted to the base, such that changes can be reviewed by the more experienced web developers within the team before those changes are applied. Teams are also encouraged to utilize features like Issues and Projects to keep track of their web development processes. Methods of creating the wiki contents We do not impose restrictions on what technologies, packages, or languages that team use to generate their wikis. A wiki can be created using traditional HTML, CSS and Javascript, through a static site generator, or a content-management system, or anything else, so long as the final site is static . By default, the assigned GitHub repositories are populated with template wiki contents. The wiki contents are rendered into a project documentation wiki site using MkDocs with the Material for MkDocs theme. This is a solution for teams who will not develop their own websites. An example of such wiki is available here . We have an introductory tutorial that covers how to edit the contents using MkDocs. If your team wish to use other technologies (which we hope you do!), you can empty and overwrite the assigned repository and upload your own web contents. This will necessitate a change in configuring the GitHub Pages source branch setting. Additional material Official 10 mins guide to GitHub","title":"Setting up your team wiki"},{"location":"team_wiki/setup_wiki.html#setting-up-your-team-wiki","text":"TL DR Teams will be assigned a GitHub repository owned by iDEC HQ. Team members will be able to add themselves as collaborators to the wiki repository through reg.idec.io and upload their web contents. Write access to the repository will be revoked by wiki freeze. We intend to give as much control as possible to teams in styling their project wikis and project documentations. For this reason, we are setting up GitHub repositories so that teams can display their wikis using GitHub Pages . iDEC teams are encouraged to be creative and to fully utilize the freedom that comes with the assigned GitHub repository. If you are not familiar with the concept of Git and GitHub, imagine the following scenario: We are hosting a blog ( iDEC HQ repository ) that we write essays. You read some contents on your blog and you felt that something should change, so you downloaded ( forked and cloned ) a copy of our blog posts, made some edits ( commits ) on your own copy ( your repository ) and kept a chronological record of what and how edits are made (a history of commmits). Then, you send a note ( pull request ) to us, with those edits (but not the modified blog posts) attached. We reviewed the note, checked if the changes are reasonable or necessary, and decided to carry out ( merge ) the changes on our original blog posts. Moreover, in some ocassions, you might write a slightly different copy of the original blog post, and you wish to keep a copy of both the original text ( trunk ) and the derived text ( branch ). Instead of saving the derived text, you save how the derived text is different. You then continue working on the original text and when the moment comes, you can choose to apply the changes back onto main verison of the text. Abstractly, this is like a tree, with a main trunk that develops upwards with different smaller changes branching out from the trunk. This is a simplified analogy on how software enigneers use distributed version control to collaborate on projects. This year, iDEC HQ will provide the wiki platform through this mechanism. So essentially, we will assign each team an iDEC HQ-owned repository, which is basically a cloud space for hosting web contents. The contents will be rendered as a publicly accessible websie through the GitHub Pages function.","title":"Setting up your team wiki"},{"location":"team_wiki/setup_wiki.html#wiki-content-upload-and-wiki-freeze","text":"A team will be given permissions to manage their assigned repository. The permissions include read-write access, pull requests management and configuration of settings related to web page deployment. These permissions will be downgraded to \"read-only\" as wiki-freeze commences, so it is imperative that teams complete all uploads and set up their GitHub Pages properly before the deadline.","title":"Wiki content upload and wiki freeze"},{"location":"team_wiki/setup_wiki.html#accessing-and-configuring-your-team-repository","text":"The GitHub repositories for teams in 2021 will be hosted under the GitHub Organization \"idec2021\". Check your assigned repository on the wiki list . To obtain the permissions for wiki-editing, iDEC team members will need to add themselves as collaborator to the wiki repository. To do so, follow the instructions on our page Accessing your wiki repository . Joining as collaborator will grant the user \"maintain\" permission to the repository. GitHub turns uploaded web contents into a website through its GitHub Pages service, and it is important that a team notifies GitHub which branch should be used for the source. Check out our quick guide on how to do so.","title":"Accessing and configuring your team repository"},{"location":"team_wiki/setup_wiki.html#making-using-of-forks-to-coordinate-your-site-development","text":"Even though every team member who join their team wiki repository will have nearly full access, we recommend that team members fork their assigned repository (base) under their personal / organizational account. All uploads and edits of wiki contents can then be performed on the forked repository (head). Pull requests can then be submitted to the base, such that changes can be reviewed by the more experienced web developers within the team before those changes are applied. Teams are also encouraged to utilize features like Issues and Projects to keep track of their web development processes.","title":"Making using of forks to coordinate your site development"},{"location":"team_wiki/setup_wiki.html#methods-of-creating-the-wiki-contents","text":"We do not impose restrictions on what technologies, packages, or languages that team use to generate their wikis. A wiki can be created using traditional HTML, CSS and Javascript, through a static site generator, or a content-management system, or anything else, so long as the final site is static . By default, the assigned GitHub repositories are populated with template wiki contents. The wiki contents are rendered into a project documentation wiki site using MkDocs with the Material for MkDocs theme. This is a solution for teams who will not develop their own websites. An example of such wiki is available here . We have an introductory tutorial that covers how to edit the contents using MkDocs. If your team wish to use other technologies (which we hope you do!), you can empty and overwrite the assigned repository and upload your own web contents. This will necessitate a change in configuring the GitHub Pages source branch setting.","title":"Methods of creating the wiki contents"},{"location":"team_wiki/setup_wiki.html#additional-material","text":"Official 10 mins guide to GitHub","title":"Additional material"},{"location":"team_wiki/unused_texts.html","text":"(optional function) Texts that are meant for idec.io instead We do not impose any restrictions on what technologies, packages, or languages that team use to generate their wikis. A wiki can be created using traditional HTML, CSS and Javascript, through a static site generator, or a content-management system. Restrictions We only impose the following restrictions on wiki: If the default wiki (a styled Material for MkDocs) is not used, teams should include the following banner on all pages of their wiki site. It should also use the iDEC official faivcon. This requirement is demanded to show that the wiki is part of iDEC 2021. The GitHub page should be purely static and not relying on communications with a third-party server / database / service provider to render the contents. Following the above, all assests, including but not limited to CSS style sheets, javascript files, images and downloadable PDFs, that are displayed on the team wikis should be part of the GitHub repository. Raw or processed experiment data should not be part of GitHub repository and should be hosted by appropriate research databases instead. It is important to not use","title":"Unused texts"},{"location":"team_wiki/unused_texts.html#texts-that-are-meant-for-idecio-instead","text":"We do not impose any restrictions on what technologies, packages, or languages that team use to generate their wikis. A wiki can be created using traditional HTML, CSS and Javascript, through a static site generator, or a content-management system.","title":"Texts that are meant for idec.io instead"},{"location":"team_wiki/unused_texts.html#restrictions","text":"We only impose the following restrictions on wiki: If the default wiki (a styled Material for MkDocs) is not used, teams should include the following banner on all pages of their wiki site. It should also use the iDEC official faivcon. This requirement is demanded to show that the wiki is part of iDEC 2021. The GitHub page should be purely static and not relying on communications with a third-party server / database / service provider to render the contents. Following the above, all assests, including but not limited to CSS style sheets, javascript files, images and downloadable PDFs, that are displayed on the team wikis should be part of the GitHub repository. Raw or processed experiment data should not be part of GitHub repository and should be hosted by appropriate research databases instead. It is important to not use","title":"Restrictions"},{"location":"team_wiki/wiki_list.html","text":"List of iDEC team wikis The address of the assigned repository will be: https://www.github.com/idec{year}/{assigned repo name} Or, simply click on the hyperlinks in the tables. iDEC 2021 Team Assigned Repository Name Wiki Site CSU_CHINA CSU_CHINA idec2021.github.io/CSU_CHINA BNDS_China BNDS_China idec2021.github.io/BNDS_China OUC OUC idec2021.github.io/OUC UOregon UOregon idec2021.github.io/UOregon ED-NAU ED-NAU idec2021.github.io/ED-NAU NEFU_China NEFU_China idec2021.github.io/NEFU_China OUC-Marine Drugs OUC-Marine_Drugs idec2021.github.io/OUC-Marine_Drugs NM-China NM-China idec2021.github.io/NM-China Imperial Imperial idec2021.github.io/Imperial Edinburgh Edinburgh idec2021.github.io/Edinburgh Vilnius GMC Vilnius_GMC idec2021.github.io/Vilnius_GMC CPU_CHINA 2021 CPU_CHINA_2021 idec2021.github.io/CPU_CHINA_2021","title":"List of team wikis"},{"location":"team_wiki/wiki_list.html#list-of-idec-team-wikis","text":"The address of the assigned repository will be: https://www.github.com/idec{year}/{assigned repo name} Or, simply click on the hyperlinks in the tables.","title":"List of iDEC team wikis"},{"location":"team_wiki/wiki_list.html#idec-2021","text":"Team Assigned Repository Name Wiki Site CSU_CHINA CSU_CHINA idec2021.github.io/CSU_CHINA BNDS_China BNDS_China idec2021.github.io/BNDS_China OUC OUC idec2021.github.io/OUC UOregon UOregon idec2021.github.io/UOregon ED-NAU ED-NAU idec2021.github.io/ED-NAU NEFU_China NEFU_China idec2021.github.io/NEFU_China OUC-Marine Drugs OUC-Marine_Drugs idec2021.github.io/OUC-Marine_Drugs NM-China NM-China idec2021.github.io/NM-China Imperial Imperial idec2021.github.io/Imperial Edinburgh Edinburgh idec2021.github.io/Edinburgh Vilnius GMC Vilnius_GMC idec2021.github.io/Vilnius_GMC CPU_CHINA 2021 CPU_CHINA_2021 idec2021.github.io/CPU_CHINA_2021","title":"iDEC 2021"}]}